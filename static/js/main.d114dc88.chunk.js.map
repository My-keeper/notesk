{"version":3,"sources":["UI/Switch.js","UI/UserIcon.js","Img/Logo.1.png","UI/logo.js","UI/Button.js","API/API.js","UI/Select.js","Routes/Calendar/event-utils.js","Routes/Calendar/DataCollection/OptionsForm.js","Routes/Calendar/DataCollection/LangSelection.js","UI/Modal.js","UI/WeatherIcon.js","UI/NavBar.js","UI/TextArea.js","Routes/Notes/Note/Note.js","UI/Footer.js","UI/UserInput.js","Routes/Notes/CreateNote/CreateNote.js","Routes/Notes/Notes.js","Routes/Calendar/EditForm/HoverTitle.js","Routes/Calendar/EditForm/Bottons/EditButton.js","Routes/Calendar/EditForm/Bottons/DeleteButton.js","Routes/Calendar/EditForm/Containers/TextInputContainer.js","Routes/Calendar/DataCollection/TimeSelected.js","Routes/Calendar/DataCollection/DateSelected.js","Routes/Calendar/EditForm/Containers/Date-TimeContainer.js","Routes/Calendar/DataCollection/DisplaySelected.js","Routes/Calendar/EditForm/Containers/DisplayContainer.js","Routes/Calendar/DataCollection/RepeatedDaysSelected.js","Routes/Calendar/ScheduleForm/Containers/DaysContainer.js","Routes/Calendar/EditForm/Bottons/submitChanges.js","Routes/Calendar/EditForm/EditEventForm.js","Routes/Calendar/EditForm/EvenForm.js","Routes/Calendar/CalendarForm.js","Routes/Calendar/ScheduleForm/Containers/TextInputContainer.js","Routes/Calendar/ScheduleForm/Containers/Date-TimeContainer.js","Routes/Calendar/ScheduleForm/Containers/DisplayContainer.js","Routes/Calendar/ScheduleForm/Containers/SubmitButton.js","Routes/Calendar/ScheduleForm/Schedule.js","Routes/Calendar/CalendarCollection.js","Routes/Calendar/Calendar.js","Routes/Login/LoginForm.js","Img/sun.jpg","UI/Imag.js","Routes/Login/Login.js","Routes/Signup/SignupForm.js","Routes/Signup/Signup.js","App.js","serviceWorker.js","index.js","WeatherApp/WeatherStack.js","WeatherApp/GeoCoding.js"],"names":["IconStyle","styled","FadeIn","props","FontColorInput","FontSizeInput","SwitchIcion","useState","isClicked","isClickedChanged","changeState","OnChangedColor","changedBackGround","toReturn","ToggleButton","CalendarTC","NavIconColor","LogSignColor","BodyColor","BorderColor","IconC","UserIconColor","UserIconTextColor","NotekBGC","NoteFC","UserInputBGC","UserInputFC","UserInputPHC","TextAreaBGC","TextAreaFC","TextAreaPHC","TextFC","Brightness3","style","fontSize","marginTop","onClick","Brightness2","Brightness4","UserIconDiv","div","backGroundColorInput","StyledLetter","p","backGroundTextColorInput","UserIcon","username","charAt","PosterStyle","img","Imag","draggable","src","NotaskLog","StyledButton","button","widthInput","heightInput","fontSizeInput","marginBottom","marginLeft","marginRight","disabled","paddingInput","borderInput","borderRadiusInput","borderColorInput","borderWidthInput","marginTopInput","PlaceHolderColorInput","IsCalled","borderStyling","IconStuly","border","boxShadow","AppButton","height","Height","width","color","fontSizeValue","backgroundColor","disabledColor","disabledBackgroundColor","marginBottomValue","marginLeftValue","marginRightValue","FontColorValue","backGroundColorValue","borderRadiusValue","borderColorValue","borderWidthValue","BorderValue","PlaceHolderColorValue","IsCalledValue","paddingInputValue","marginTopValue","onMouseEnter","onMouseLeave","icon","text","API","require","firstName","lastName","userName","email","password","country","province","city","ZipCode","onSuccess","onFail","axios","post","then","res","localStorage","setItem","data","token","JSON","stringify","user","catch","e","get","headers","Authorization","getItem","title","content","console","log","id","patch","delete","description","url","start","end","Url","startTime","endTime","daysOfWeek","display","SelectContainer","select","resizeInput","paddingLeftInput","outlineInput","fontFamilyInput","boxShowInput","marginRightInput","SelectData","value","InputValue","placeholder","PlaceholderValue","paddingLeftValue","onChange","onchangeValue","onClickValue","widthValue","heightValue","paddingVale","outlineValue","fontFamilyValue","resizeValue","name","rows","children","eventGuid","createEventId","String","HourValue","map","Hour","index","MinutsValue","Minut","TwelveHourSystemValue","DayTime","NumberOfYearsValue","year","NumberOfMonthsValue","month","NumberOfDaysValue","days","DisplayOption","Display","LangOption","Lang","LangSelection","langOptionInput","ChangelangOptionInput","Select","inputType","RecievedColor","TheCalndarlang","target","ModelContainer","positionInput","BackgroundInput","heighthInput","marginInput","boxShadowInput","floatInput","displayInput","flexDirectionInput","overflow","flexGrowInput","Zindex","transformInput","OpacityInput","LeftInput","TopInput","RightInput","Model","position","Background","margin","padding","float","boxShadowValue","flexDirectionValue","flexGrowValue","OpacityValue","TransformValue","LeftValue","TopValue","RightValue","ZindexValue","SRC","StyledNavBar","DisplayedUsername","span","TextColorInput","RightNavBarItems","LeftNavBarItems","NavBar","UserLogged","ChangeUserLogged","useEffect","a","isLoggedIn","CheckingIsLoggedIn","VisibilityStle1","RecieveColor","DifferentRouteStyle","IconsNavChange","LogoutIconStyle","LogOutStyle","isLoggedbutton","ChangeIsLogged","usernameAndAvatar","minWidth","fontWeight","showLogOutButton","ShowLogOutButtonValue","UpCircleOutlined","isShowLogOutButton","Timer","setTimeout","DownCircleOutlined","buttonsList","showLoginButton","push","linkTo","showSignUpButton","history","useHistory","handlingLoggingOut","Logout","window","location","reload","ButtonIsLogOut","zIndex","justifyContent","right","top","Button","LogoutOutlined","isCalendar","ChangeIsCalendar","GoToCalendar","inCalendar","to","isNote","ChangeIsNote","GoToNote","inNotes","GoToLogin","CallingPage","LoginOutlined","ButtonLangOption","ColorSwitcher","Switch","ColorChanged","isWeather","ChnageisWeather","IsWeather","size","WeatherButton","WeatherIcon","WeatherMessage","flexDirection","TextareaContainer","textarea","marginBottomInput","UserInput","maxLength","HoveringContainer","Container","IcionStyleing","Note","isHover","SetHover","OnHovering","isTitleValue","TitleClicked","ChangeTitleClicked","RecievedTitle","ChangeRecievedTitle","RecievedTitleLittersNumber","NumberOfLitters","NumberOfTitleRows","ChangeNumberOfRows","TitleHandler","changeTItleHandler","ChangeTitle","handlerChangeTitle","event","ReturnRowsValue","length","isContent","ContentClicked","ChangeContentClicked","RecievedContent","ChangeRecievedContent","ContentHandler","changeContentHandler","ChangeContent","background","wordWrap","borderRadius","borderWidth","hover","borderColor","EditOutlined","DeleteFilled","onPointerEnter","DeleteOutlined","onDelete","FooterContainer","FooterInfo","currentYear","Date","getFullYear","Footer","InputContainer","input","EyeOutlined","marginLeftInput","passwordIconStyling","Password","ChangePassword","toggleShowPassword","type","boxShowValue","checked","EyeInvisibleOutlined","getInputPasswordIcon","AddNote","InfoContainer","CreateNote","IconColor","isExpanded","setExpanded","isSubmit","setSubmit","CurrentNote","setNote","titlePH","contentPH","CurrentPlaceHolde","setPlaceHolder","TargetLength","ChangeTargetLength","subNote","preventDefault","isIconUserInput","isIconTextArea","note","AddedNote","TitleLitterNumber","SentimentVeryDissatisfied","SentimentVerySatisfied","ImportContacts","TitleValue","prevNote","ContentValue","ButtonValue","PlusCircleFilled","CheckCircleFilled","foreCast","GeoCode","Notes","state","notes","isLogOut","ChangetitleClicked","UserName","county","Weather","userLoggedIn","Color","addNote","unshift","setState","deleteNote","Delete","splice","DeleteNote","onChangeTitle","newTitle","OldContent","newNoteTitle","filter","NoteId","newNotes","UpdateNote","onChangeContent","newContent","OldTitle","newNoteContent","NoteItems","eachItem","i","id_Value","titleRowsNumber","PrevNotes","this","GetNote","DBNotes","MergedNotes","concat","Callback","latitude","longitude","error","foreCastData","Location","colorchanged","paddingLeft","Component","EachateContainer","JustifyContentCalue","TitleStyle","Coloring","HoverForm","Title","ScheduleColor","isTitle","Time","isStart","HoverTitleInfo","EditButton","ButtonIconColor","ColorChange","isEditClicked","DeleteButton","IDofClickedEvent","EventsInfoList","DeleteEvents","ReturnNewEvents","Event","CloseModel","TitleContainer","isEditTitle","isChangedValueTitle","changedValueTitle","SubmitTitle","DescriptionContainer","isEditDescription","RecievedDescription","ChangeRecievedDescription","isChangedValueDescription","changedValueDescription","SubmitDescription","URLContainer","isEditURL","RecievedURL","ChangeRecievedURL","isChangedValueURL","changedValueURL","URLOption","LinkOutlined","OptionForm","HourClicked","ChangeHourClicked","HourValueInput","ChangeHourValue","Hours","ChangeSTimeClicked","ChangeETimeClicked","MinutsClicked","ChangeMinutsClicked","MinutsValueInput","ChangeMinutsValue","Minuts","DayTimeClicked","ChangeDayTimeClicked","DaytimeValueInput","ChangeDaytimeValue","submitHourValue","submitMinutsValue","submitDayValue","DateSelected","GetUserChangeDay","ChnageUserChangedDay","ReturnFrom","ReturnClickedFromDay","ReturnClickedToDay","DayValueInput","ChangeDayValue","isChangedValueDay","changedValueDay","Days","DisabledisClicked","GetUserChangeMonth","ChnageUserChangedMonth","ReturnClickedFromMonth","ReturnClickedToMonth","MonthValueInput","ChangeMonthValueInput","isChangedValueMonth","changedValueMonth","Months","GetUserChangeYear","ChnageUserChangedYear","ReturnClickedFromYear","ReturnClickedToYear","YearsValueInput","ChangeYearsValueInput","isChangedValueYear","changedValueYear","Years","ReturnYear","ReturnMonth","ReturnDay","submitDateValue","MarginLeft","DateContainer","CalenderContianer","ShowDateStle","InconArea","CalendarOutlined","isSelectedDate","ChangeSelectedDate","GetIsSelectedDate","ChangeSelectedData","isData","paddingTop","RecieveFromDate","PassIsStartedYear","PassIsStartedMonth","PassIsStartedDay","fromData","ChangeFromDate","StartingData","SendSD","RecieveToDate","PassIsEndedYear","PassIsEndedMonth","PassIsEndedDay","ToData","ChangeToDate","EndingingData","SendED","calendar","GetFromDate","GetToDate","TimerContainer","VisibilityStle","isShowTime","ChangeisShowTime","ShowData","IcionArea","ClockCircleOutlined","isDefulatTime","paddingBottom","InfoArea","StartHoursValue","ChangeStartHourValue","StartMinutsValue","ChangeStartMinutsValue","StartDayValue","ChangeStartDayValue","STimeClicked","STCValue","StartingTime","TimeSelected","EndHoursValue","ChangeEndHourValue","EndMinutsValue","ChangeEndMinutsValue","EndDayValue","ChangeEndDayValue","ETimeClicked","ETCValue","inValidET","ETValidationValue","inValidEndingTime","inValidEndInput","CloseOutlined","textAlign","fontFamily","EndingTime","time","FromHourSelected","parseInt","FromMinutsSelected","ToHourSelected","ToMinutsSelected","isTime","DisplaySelection","DisplayOptionInput","ChangeDisplayOptionInput","ValueOfDisplayOption","DisplayContainer","GetDisplayOption","CHnageDisplayOption","SubmitDisplayOption","BgColorsOutlined","DisplaySelected","RepeatDaySelected","NumberOfRepeatedDays","ChangeNumberOfRepeatedDays","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","changeDays","ChoosenDay","handleRepeatedDays","newDays","Object","values","item","RepeatedDayContainer","DayValue","OnChangeInputValue","LineOne","LineTwo","ValueOfRepeatedDays","RDContainer","GetNumberOfRD","ChangeGetNumberOfRD","SubmitNumberOfRP","submitChanges","SDTHourValidation","RepeatOrData","isStartingDate","toString","slice","isStartingTime","SDTValue","EDTHourValidation","isEndingData","isEndingTime","EDTValue","SDTMinValidation","SDTMinValue","EDTMinValidation","EDTMinValue","newEvent","indexOfEvent","ClickedEvent","PassEventsInfoList","TheIdOfClickedEvent","forEach","_id","isDescription","isURL","isRepeatedDays","isDisplayOption","CheckingETValidation","TitleMessage","DescriptionMessage","UpdateEvents","isCloseModel","SendOutlined","EditEventForm","Header","CloseCircleOutlined","closedEventForm","getTitle","getDescription","ChangeDescription","Description","getURL","ChangeURL","URL","EditFilled","isRepeated","getFormDate","ChangeFormDate","getToDate","StartDate","getStartedClickedEvent","EndDate","getEndededClickedEvent","EditTime","ChangeEditedTime","Data","isStartedDay","isStartedMonth","isStartedYear","isEndedDay","isEndedMonth","isEndedYear","StartHours","ChangeStartHour","StartMinuts","ChangeStartMinuts","EndHours","ChangeEndHour","EndMinuts","ChangeEndMinuts","TimeClicked","ChangeTimeClicked","CheckETValidation","ChangeInvalidET","STClicked","ChangeSTClicked","ETClicked","ChangeETClicked","GetRepeatedDays","ChangeRepeatedDays","RepeatedDays","GetDiplayOption","ChangeDiplayOption","ReturnChangedEvents","ChangeOldEvents","undefined","CloseStyle","ContentStyle","EventForm","EventClickedInfo","isUrl","Start","isEnd","End","Content","CallEditForm","ChnageEditForm","isEditButton","PassedAllEvent","Id","ChangeAllEvents","EventInfo","EditFormInfo","isStartedDateEditEvent","isEndedDateEditEvent","StartedDay","StartedMonth","StartedYear","EndedDay","EndedMonth","EndedYear","CalendarForm","UserLocation","getEvent","SendingEvents","ChangeStartData","ChangeEndData","GetStartDate","GetEndDate","ShowEventClicked","ChangeShowEventClicekd","ChangeClickedEvent","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","CreatedMonthsValues","isStartedDate","ChangeIsStartedDate","ChangeIsStartedDays","ChangeIsStartedMonth","ChangeIsStartedYear","isEndedDate","ChnageIsEndedDate","ChnageIsEndedDay","ChnageIsEndedMonth","ChnageIsEndedYear","handleEventClick","clickInfo","StartedDayValue","_instance","range","StartedMonthValue","StartedYearValue","EndedDayValue","EndedMonthValue","EndedYearValue","_def","extendedProps","ui","publicId","toggeltTitle","ChangeToggleTitle","ChangeTitleValue","StartValue","ChangeStartValue","ShowTitle","left","HoverTitle","CalendarColor","recievedLang","TheCalendarLanf","FullCalendarForm","pointerEvents","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","headerToolbar","center","initialView","titleFormat","day","contentHeight","handleWindowResize","locale","timeZone","editable","selectable","selectMirror","dayMaxEvents","weekends","eventTextColor","eventBackgroundColor","eventBorderColor","selectInfo","startStr","endStr","CallingSchedule","events","eventClick","eventMouseEnter","eventMouseLeave","eventform","ChangeEvents","SubmitTitlePlaceHolder","MaxLength","SubmitDescriptionPlaceHolder","SubmitURLPH","SubmitButton","CreateEvent","SubmitEvent","CreateEvents","isEvent","oldarr","isCallingCalendar","Schedule","InValidStyle","CloseIcon","CallingCalendar","TitlePH","ChangeTitlePH","ShowTitleMessage","ChangeTitleMessage","isTitleMessage","DescriptionPH","ChangeDescriptionPH","ShowDescriptionMessage","ChangeDescriptionMessage","isDescriptionMessage","URLPH","SendSelectedSD","SendSelectedED","DiplayOption","Submit","CheckTitlePH","CheckDescriptionPH","submitEventValues","CalenderContainer","CalendarCollection","currentEvents","ChangeEventList","PrevEvents","GetEvents","DBEvents","showSchedule","ChangeShowSchedule","SelectedStartedData","ChangeStartedData","SelectedEndedData","ChangeEndedData","calendarForm","ReturnLang","scheduleForm","CalendarList","SignupForm","EmailValue","ChangeEmail","EmailPHValue","ChangeEmailPH","PasswordValue","PasswordPHValue","ChangePasswordPH","emailValidOrPassword","ChangeEmailValidOrPassword","inCorrectInput","emailValid","ChangeemailValid","emailValidMessage","ChangeEmailValidemailValidMessage","emailValidityString","EmailValidation","CheckOutlined","Email","MailOutlined","v","validator","isEmail","PassWord","KeyOutlined","LoginButton","login","ReturnToLogin","Sky","Login","LoginForm","passwordLength","passwordValidator","is","min","passwordMaxLength","max","passwordLetters","has","lowercase","passwordNumbers","digits","symbols","ValidStyle","FirstNameValue","ChangeFirstName","LastNameValue","ChangeLastName","UserNameValue","ChangeUserName","PassWordValue","ChangePassWord","ConfirmPasswordValue","ChangeConfirmPassword","CountryValue","ChangeCountry","ProvinceValue","ChangeProvince","CityValue","ChangeCity","ZipCodeValue","ChangeZipCode","PasswordValid","ChangePasswordValid","ConfirmPasswordValid","ChangeConfirmPasswordValid","FirstNameValid","ChangeFirstNameValid","LastNamrValid","ChangeLastNamrValid","usernameValid","ChangeusernameValid","PWPassValidation","ChangePWPassValidation","CPWPassValidation","ChangeCPWPassValidation","CountryValid","ChangeCountryValid","ProvinceValid","ChangeProvinceValid","CityValid","ChangeCityValid","ZipCodeValid","ChangeZipCodeValid","ValidSubmission","ChangeValidSubmission","FirstName","LastName","PersonalInfo","UserOutlined","Username","UserAddOutlined","ispasswordLen","ChangepasswordLen","PassWordLengthMessage","passwordLen","ispasswordMaxLen","ChangepasswordMaxLen","passwordMaxLen","ispasswordLetter","ChangepasswordLetter","PassWordLetterMessage","passwordLetter","ispasswordNumber","ChangepasswordNumber","PassWordNumberMessage","passwordNumber","validate","passwordSpecial","ChangepasswordSpecial","ConfirmPassWordValue","isConfirmPassword","ConfirmPassWord","Country","Province","City","HomeOutlined","BEError","ChangeBEError","TheBEMessage","SubmitInValid","SignupButton","singUp","err","Signup","IsLocation","ContainerDiv","BodyColorValue","App","CalendarColorTable","ChangeColorsValue","NewColor","path","exact","render","Calendar","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","params","access_key","units","module","exports","callback","encodeURIComponent","response","ApiResponse","current","weather_icons","temperature","feelslike","region","features","place_name"],"mappings":"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","file":"static/js/main.d114dc88.chunk.js","sourcesContent":["import React, { useState }  from 'react';\nimport styled from 'styled-components';\nimport { Brightness4, Brightness2, Brightness3 } from '@material-ui/icons';\nimport FadeIn  from 'react-fade-in';\n\nconst IconStyle = styled(FadeIn)`\n    color: ${(props) => (props.FontColorInput ? props.FontColorInput : \"\")};\n    position: relative;\n    display: flex;\n    flex-direction: row-reverse;\n    font-size: ${(props) => (props.FontSizeInput ? props.FontSizeInput : \"\")};\n`\nconst SwitchIcion = (props) => {\n    const [isClicked, isClickedChanged] = useState(1);\n    const changeState = () => {\n        props.OnChangedColor(changedBackGround())\n        if(isClicked === 1){isClickedChanged(2)} \n        else if (isClicked === 2){isClickedChanged(3)}\n        else if (isClicked === 3){isClickedChanged(1)}\n    }\n    const changedBackGround = () => {\n        const toReturn = {}\n        if(isClicked === 1)\n        {\n            //toggle Button color\n            toReturn.ToggleButton = \"#282828\";  \n            //calendar text color\n            toReturn.CalendarTC = \"#fff\";  \n            //Nav Icon Color\n            toReturn.NavIconColor = \"#999999\";\n            //Login/Signup color\n            toReturn.LogSignColor = \"#999999\";\n            //BodyColor\n            toReturn.BodyColor = \"#999999\";\n            //borderColor\n            toReturn.BorderColor = \"#999999\";\n            //IcionColor\n            toReturn.IconC = \"#f5ba13\";\n            //UserIconColor\n            toReturn.UserIconColor = \"#999999\";\n            toReturn.UserIconTextColor = \"#282828\";\n            //ModelArea\n            toReturn.NotekBGC = \"#fff\";\n            toReturn.NoteFC = \"#000000\";\n            //userInput\n            toReturn.UserInputBGC = \"#fff\";\n            toReturn.UserInputFC = \"#000000\";\n            toReturn.UserInputPHC = \"\";\n            //TextArea\n            toReturn.TextAreaBGC = \"#fff\";\n            toReturn.TextAreaFC = \"#000000\";\n            toReturn.TextAreaPHC = \"\";\n            //Calendar\n            toReturn.TextFC = \"#fff\";\n        }\n        //this is the meddle mode\n        else if(isClicked === 2) \n        {\n            //toggle Button color\n            toReturn.ToggleButton = \"#fff\"; \n            //calendar text color\n            toReturn.CalendarTC = \"#fff\";\n            //Nav Icon Color\n            toReturn.NavIconColor = \"#282828\";\n            //Login/Signup color  F0F0F0\n            toReturn.LogSignColor = \"#282828\";\n            //BodyColor\n            toReturn.BodyColor = \"#282828\";\n            //borderColor\n            toReturn.BorderColor = \"#FFD700\";\n            //IcionColor\n            toReturn.IconC = \"#f5ba13\";\n            //UserIconColor\n            toReturn.UserIconColor = \"#282828\";\n            toReturn.UserIconTextColor = \"#F0F0F0\";\n            //ModelArea\n            toReturn.NotekBGC = \"#999999\";\n            toReturn.NoteFC = \"#F8F8F8\";\n            //userInput\n            toReturn.UserInputBGC = \"#999999\";\n            toReturn.UserInputFC = \"#F8F8F8\";\n            toReturn.UserInputPHC = \"#E0E0E0\";\n            //TextArea\n            toReturn.TextAreaBGC = \"#999999\";\n            toReturn.TextAreaFC = \"#F8F8F8\";\n            toReturn.TextAreaPHC = \"#E0E0E0\";\n            //Calendar\n            toReturn.TextFC = \"#fff\";\n        } \n        // this is in the drakest mode\n        else if (isClicked === 3)\n        {\n            //toggle Button color\n            toReturn.ToggleButton = \"#999999\"; \n            //calendar text color\n            toReturn.CalendarTC = \"#6495ed\";\n            //Nav Icon Color\n            toReturn.NavIconColor = \"#fff\";\n            //Login/Signup color\n            toReturn.LogSignColor = \"#999999\";\n            //BodyColor\n            toReturn.BodyColor = \"#f2f2f2\";\n            //borderColor\n            toReturn.BorderColor = \"#f5ba13\";\n            //IcionColor\n            toReturn.IconC = \"#f5ba13\";\n            //UserIconColor\n            toReturn.UserIconColor = \"#fff\";\n            toReturn.UserIconTextColor = \"#999999\";\n            //ModelArea\n            toReturn.NotekBGC = \"#282828\";\n            toReturn.NoteFC = \"#F0F0F0\";\n            //userInput\n            toReturn.UserInputBGC = \"#282828\";\n            toReturn.UserInputFC = \"#F0F0F0\";\n            toReturn.UserInputPHC = \"#C8C8C8\";\n            //TextArea\n            toReturn.TextAreaBGC = \"#282828\";\n            toReturn.TextAreaFC = \"#C8C8C8\";\n            //Calendar\n            toReturn.TextFC = \"#282828\";\n        }\n        return toReturn\n    }\n    return(\n        <IconStyle \n            FontColorInput = {isClicked === 1 ?  \"#999999\": (isClicked === 2 ? \"#282828\" : \"#fff\" ) }\n        >\n            {isClicked === 1 ?  \n            <Brightness3 style={{fontSize:\"30px\", marginTop:\"35%\"}} onClick={changeState}/> : \n                (isClicked === 2 ? \n                    <Brightness2 style={{fontSize:\"30px\",marginTop:\"35%\"}} onClick={changeState}/> : \n                    <Brightness4 style={{fontSize:\"30px\",marginTop:\"35%\"}} onClick={changeState}/> ) }\n        </IconStyle>\n    )\n};\n\nexport default SwitchIcion;","import React from \"react\";\nimport styled from \"styled-components\"; \n\nconst UserIconDiv = styled.div`\n    width: 32px;\n    height: 32px;\n    margin: 10px;\n    border-radius: 50%;\n    background-color: ${(props) => ( props.backGroundColorInput ? props.backGroundColorInput : \"\")};\n    text-align: center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\nconst StyledLetter = styled.p`\n  font-size: 25px;\n  font-weight: bold;\n  color: ${(props) => ( props.backGroundTextColorInput ? props.backGroundTextColorInput : \"\")};\n  margin: 0;\n  margin-bottom: 25%;\n  margin-top: 13px;\n`;\n\nconst UserIcon = (props) => {\n  return (\n    <UserIconDiv\n        backGroundColorInput={props.OnChangedColor.UserIconColor} \n    >\n      <StyledLetter\n        backGroundTextColorInput={props.OnChangedColor.UserIconTextColor}\n      >{props.username.charAt()}</StyledLetter>\n    </UserIconDiv>\n  );\n};\n\nexport default UserIcon;\n","export default __webpack_public_path__ + \"static/media/Logo.1.2c234f31.png\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport NotaskLog from \"../Img/Logo.1.png\"\n\n \nconst PosterStyle = styled.img`  \n    width: 100%;\n    height: 100%; \n`;\nconst Imag = () => {\n  return (\n    <PosterStyle draggable={false} src={NotaskLog} />\n  );\n};\n\nexport default Imag;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  cursor: pointer;\n  text-align: center;\n  width: ${(props) => (props.widthInput ? props.widthInput : \"auto\")};\n  height: ${(props) => (props.heightInput ? props.heightInput : null)};\n  color: ${(props) => ( props.FontColorInput ? props.FontColorInput : \"\")};\n  font-size: ${(props) => (props.fontSizeInput ? props.fontSizeInput : \"none\")};\n  background-color: ${(props) => ( props.backGroundColorInput ? props.backGroundColorInput : \"\")};\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : \"none\")};\n  margin-left: ${(props) => (props.marginLeft ? props.marginLeft : \"none\")};\n  margin-right: ${(props) => (props.marginRight ? props.marginRight : \"none\")};\n  outline: none;\n  cursor: ${(props) => (!props.disabled ? \"pointer\" : \"not-allowed\")};\n  padding: ${(props) => (props.paddingInput ? props.paddingInput : \"none\" )};\n  border: ${(props) => (props.borderInput ? props.borderInput : \"none\" )};\n  border-radius: ${(props) => (props.borderRadiusInput ? props.borderRadiusInput : null)};\n  border-color: ${(props) => (props.borderColorInput ? props.borderColorInput : \"none\")};\n  border-width: ${(props) => (props.borderWidthInput ? props.borderWidthInput : \"inherit\")};\n  margin-top: ${(props) => (props.marginTopInput ? props.marginTopInput : \"none\")};\n  &::placeholder{\n    color: ${(props) => ( props.PlaceHolderColorInput ? props.PlaceHolderColorInput : \"\")};\n  };\n  &:hover { \n    ${(props) => (props.IsCalled === \"HOVER\" ? borderStyling : \"none\")};\n  };\n  &:focus { \n    ${(props) => (props.IsCalled === \"FOCUS\" ? borderStyling : \"none\")};\n  };\n`;\nconst IconStuly= styled.div`\n  margin-top: 2px;\n  margin-bottom: 2px;\n`\nconst borderStyling = {\n  border: \"1px solid rgb(245,186,19, 0.382)\",\n  boxShadow: \"0 0 2px 2px rgb(245,186,19, 0.382)\",\n}\n\nconst AppButton = (props) => (\n  <StyledButton\n    height={props.Height}\n    widthInput={props.width}\n    color={props.color}\n    fontSizeInput={props.fontSizeValue}\n    backgroundColor={props.backgroundColor}\n    onClick={props.onClick}\n    disabled={props.disabled}\n    disabledColor={props.disabledColor}\n    disabledBackgroundColor={props.disabledBackgroundColor}\n    marginBottom={props.marginBottomValue}\n    marginLeft={props.marginLeftValue}\n    marginRight={props.marginRightValue}\n    FontColorInput={props.FontColorValue}\n    backGroundColorInput={props.backGroundColorValue}\n    borderRadiusInput={props.borderRadiusValue}\n    borderColorInput={props.borderColorValue}\n    borderWidthInput={props.borderWidthValue}\n    borderInput={props.BorderValue}\n    PlaceHolderColorInput={props.PlaceHolderColorValue}\n    IsCalled={props.IsCalledValue}\n    paddingInput={props.paddingInputValue}\n    marginTopInput={props.marginTopValue}\n    onMouseEnter={props.onMouseEnter}\n    onMouseLeave={props.onMouseLeave}\n  >\n    <IconStuly>\n      {props.icon}\n      {props.text}\n    </IconStuly>\n  </StyledButton>\n);\n\nexport default AppButton;\n","import axios from \"axios\"\nconst foreCast = require('../WeatherApp/WeatherStack');\nconst GeoCode = require('../WeatherApp/GeoCoding');\n\nclass API {\n    //for signup \n    static singUp (firstName, lastName, userName, email, password, country, province, city, ZipCode, onSuccess, onFail) {\n\n        axios.post(`http://3.19.29.229:9000/Users`, {\n            firstName : firstName,\n            lastName ,\n            userName,\n            email ,\n            password,\n            country, \n            province, \n            city, \n            ZipCode\n        })\n        .then((res)=>{\n            localStorage.setItem(\"token\", res.data.token);\n            localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n            onSuccess(res)\n        })\n        .catch((e) => { \n            onFail(e) \n        })\n    }\n\n    //for checking if you are logged in \n    static isLoggedIn(onSuccess) {\n        return axios.get('http://3.19.29.229:9000/Users/me', {\n            headers: {Authorization: localStorage.getItem(\"token\") },\n        }).then((res)=> {\n            onSuccess(res)\n            return true\n        }).catch(()=> {\n            return false;\n        })\n\n    }\n\n    //for login\n    static login(email, password, onSuccess, onFail) {\n        return axios.post('http://3.19.29.229:9000/Users/login', {\n            email,\n            password\n            }).then((res) => {\n                localStorage.setItem(\"token\", res.data.token);\n                localStorage.setItem(\"user\", JSON.stringify(res.data.user)); \n                onSuccess(res)\n            }).catch((e) => {\n                onFail(e)\n            })\n    }\n\n    //For one machine logout \n    static Logout() {  \n        return axios.post('http://3.19.29.229:9000/Users/logout',{\n            headers: {Authorization: localStorage.getItem(\"token\") },\n        })\n    }\n\n    //For all machine logout \n    // static LogoutAll() {\n\n    // }\n\n    /***************************    Notes  ************************************************/\n    //Create Note \n    static CreateNote(title, content,onSuccess) {\n        return axios\n            .post('http://3.19.29.229:9000/Notes', {\n                title,\n                content\n            }, {\n                headers: {Authorization: localStorage.getItem(\"token\") },\n            }).then((res) => {\n                onSuccess(res.data)\n            }).catch((e) => {\n                console.log(e)\n            })\n    }\n    //Get Note \n    static GetNote() {\n        return axios\n            .get('http://3.19.29.229:9000/Notes',{\n                headers: {Authorization: localStorage.getItem(\"token\") },\n            }).catch((e) => {\n                console.log(e)\n            })\n    }\n    //Change Note \n    static UpdateNote(id, title, content) {  \n        return axios\n            .patch(`http://3.19.29.229:9000/Notes/${id}`,{\n                title,\n                content\n            },{\n                headers: {Authorization: localStorage.getItem(\"token\") },\n            }).catch((e) => {\n                console.log(e)\n            })\n    }\n    //Delete Note \n    static DeleteNote(id) { \n        return axios\n            .delete(`http://3.19.29.229:9000/Notes/${id}`, \n            {\n                headers: {Authorization: localStorage.getItem(\"token\") },\n            }).catch((e) => {\n                console.log(e)\n            })\n    }\n    \n    /***************************    Events  ************************************************/\n    //Create Events \n    static CreateEvents(title, description, url, start, end, onSuccess) { \n        return axios\n            .post('http://3.19.29.229:9000/Calendar', {\n                title,\n                description,\n                url,\n                start,\n                end\n            }, {\n                headers: {Authorization: localStorage.getItem(\"token\") },\n            }).then((res) => {\n                onSuccess(res.data)\n            }).catch((e) => {\n                console.log(e)\n            })\n    }\n    //Get Events \n    static GetEvents() {\n        return axios\n            .get('http://3.19.29.229:9000/Calendar',{\n                headers: {Authorization: localStorage.getItem(\"token\") },\n            }).catch((e) => {\n                console.log(e)\n            })\n    }\n    //Change Events \n    static UpdateEvents(id, title, description, Url, start, end, startTime, endTime, daysOfWeek, display) {  \n        return axios\n            .patch(`http://3.19.29.229:9000/Calendar/${id}`,{\n                title, \n                description, \n                Url, \n                start, \n                end, \n                startTime, \n                endTime, \n                daysOfWeek, \n                display\n            },{\n                headers: {Authorization: localStorage.getItem(\"token\") },\n            }).then(()=>{\n                console.log(\"changing event\")\n            }).catch((e) => {\n                console.log(e)\n            })\n    }\n    //Delete Events \n    static DeleteEvents(id) {\n        return axios\n            .delete(`http://3.19.29.229:9000/Calendar/${id}`,{\n                headers: {Authorization: localStorage.getItem(\"token\") },\n            }).catch((e) => {\n                console.log(e)\n            })\n    }\n}\nexport default API","import React from \"react\";\nimport styled from \"styled-components\"; \n\nconst borderStyling = {\n    border: \"1px solid rgb(245,186,19, 0.393)\",\n    boxShadow: \"0 0 2px 2px rgb(245,186,19, 0.393)\",\n  }\n  \n  const SelectContainer = styled.select`\n      display: flex;\n      resize: ${(props) => (props.resizeInput ? props.resizeInput : \"none\")};\n      width: ${(props) => (props.widthInput ? props.widthInput : \"100%\")};\n      height: ${(props) => (props.heightInput ? props.heightInput : null)};\n      border: ${(props) => (props.borderInput ? props.borderInput : \"none\" )};\n      padding: ${(props) => (props.paddingInput ? props.paddingInput : null)};\n      padding-left: ${(props) => (props.paddingLeftInput ? props.paddingLeftInput : null)};\n      outline: ${(props) => (props.outlineInput ? props.outlineInput : null)};\n      border-radius: ${(props) => (props.borderRadiusInput ? props.borderRadiusInput : null)};\n      font-size: ${(props) => (props.fontSizeInput ? props.fontSizeInput : \"none\")};\n      font-family: ${(props) => (props.fontFamilyInput ? props.fontFamilyInput : \"none\")};\n      box-shadow: ${(props) => (props.boxShowInput ? props.boxShowInput : \"none\")}; \n      background-color: ${(props) => ( props.backGroundColorInput ? props.backGroundColorInput : \"\")};\n      color: ${(props) => ( props.FontColorInput ? props.FontColorInput : \"\")};\n      border-color: ${(props) => (props.borderColorInput ? props.borderColorInput : \"none\")};\n      border-width: ${(props) => (props.borderWidthInput ? props.borderWidthInput : \"inherit\")};\n      margin-right: ${(props) => (props.marginRightInput ? props.marginRightInput : \"none\")};\n      margin-top: ${(props) => (props.marginTopInput ? props.marginTopInput : \"none\")};\n      &::placeholder{\n        color: ${(props) => ( props.PlaceHolderColorInput ? props.PlaceHolderColorInput : \"\")};\n      };\n      &:hover { \n        ${(props) => (props.IsCalled === \"HOVER\" ? borderStyling : \"none\")};\n      };\n      &:focus { \n        ${(props) => (props.IsCalled === \"FOCUS\" ? borderStyling : \"none\")};\n      };\n      /* &:hover {\n      border: 1px solid rgb(245,186,19, 0.493);\n      box-shadow: 0 0 2px 2px rgb(245,186,19, 0.493);\n      } */\n  `\nconst SelectData = (props) => {\n    return (\n        <SelectContainer\n        value={props.InputValue}\n        placeholder={props.PlaceholderValue}\n        paddingLeftInput={props.paddingLeftValue}\n        onChange={props.onchangeValue}\n        onClick={props.onClickValue}\n        widthInput={props.widthValue}\n        heightInput={props.heightValue}\n        borderInput={props.BorderValue}\n        paddingInput={props.paddingVale}\n        outlineInput={props.outlineValue}\n        fontSizeInput={props.fontSizeValue}\n        fontFamilyInput={props.fontFamilyValue}\n        resizeInput={props.resizeValue}\n        name={props.name}\n        rows={props.rows} \n        IsCalled={props.IsCalledValue}\n        borderRadiusInput={props.borderRadiusValue}\n        backGroundColorInput={props.backGroundColorValue}\n        FontColorInput={props.FontColorValue}\n        PlaceHolderColorInput={props.PlaceHolderColorValue}\n        borderColorInput={props.borderColorValue}\n        borderWidthInput={props.borderWidthValue}\n        marginRightInput={props.marginRightValue}\n        marginTopInput={props.marginTopValue}\n      >\n          {props.children}\n      </SelectContainer>\n    );\n  };\n  \n  export default SelectData;","\nlet eventGuid = 0\n\nexport function createEventId() {\n  return String(eventGuid++)\n}\n","import React from \"react\";\nimport { createEventId } from \"../event-utils\";\n\n/*************************************************** Hours Value *****************************************************************************/\nconst HourValue = () => {\n\n    const Hours = ['01','02','03','04','05','06','07','08','09','10','11','12']\n    const DailyHours = (\n        [Hours.map((Hour, index) => \n            <option  key={index.id + createEventId()} value={Hour}>{Hour}</option>)]\n        )\n    return(DailyHours)\n}\n/*************************************************** Minuts Value *****************************************************************************/\nconst MinutsValue = () => {\n\n    //this is for the hour input \n    const Minuts = ['00','05','10','15','20','25','30','35','40','45','50','55']\n    const DailyMinut =(\n        [Minuts.map((Minut, index) => \n            <option key={index.id + createEventId()} value={Minut}>{Minut}</option>)]\n        )\n    return(DailyMinut)\n}\n/*************************************************** AM / PM *****************************************************************************/\nconst TwelveHourSystemValue = () => {\n\n    //this for either AM or PM\n    const TwelveHourSystem = ['AM','PM']\n    const DayDivided =(\n        [TwelveHourSystem.map((DayTime, index) => \n            <option key={index.id + createEventId()} value={DayTime}>{DayTime}</option>)]\n        )\n    return(DayDivided)\n}\n/*************************************************** Number Of Years Value *****************************************************************************/\nconst NumberOfYearsValue = () => { \n    //this is for the years from this year \n    const NumberOfYears = [ '2020','2021', '2022', '2023', '2024','2025', '2026', \n                            '2027', '2028', '2029', '2030', '2031', '2032','2033', \n                            '2034','2035', '2036', '2037', '2038', '2039','2040']\n    const YearContainer = (\n        [NumberOfYears.map((year, index) => <option    key={index.id + createEventId()} value={year}>{year}</option>)]\n    )\n    \n    return(\n        YearContainer\n        )\n}\n/*************************************************** Number Of Months Value *****************************************************************************/\nconst NumberOfMonthsValue = () => { \n    //this is for the months in a year \n    const NumberOfMonths = ['01','02','03','04','05','06','07','08','09','10','11','12']\n    const MonthContainer = (\n        [NumberOfMonths.map((month, index) => <option  key={index.id + createEventId()}  value={month}>{month}</option>)]\n        )\n    return(MonthContainer)\n}\n/*************************************************** Number Of Days Value *****************************************************************************/\nconst NumberOfDaysValue = () => { \n    //this is for the days in a Month \n    const NumberOfDays = ['01','02','03','04','05','06','07','08','09','10',\n                        '11','12','13','14','15','16','17','18','19','20',\n                        '21','22','23','24','25','26','27','28','29','30','31']\n    const DayContainer = (\n        [NumberOfDays.map((days,index ) => <option  key={index.id + createEventId()} value={days}>{days}</option>)]\n        )\n    return(DayContainer)\n}\n/*************************************************** Display Option *****************************************************************************/\nconst DisplayOption = () => {\n\n    //this is for the days in a Month \n    const display_Option = ['list-item','block']\n    const DisplayContainer = (\n        [display_Option.map((Display,index ) => <option  key={index.id + createEventId()} value={Display}>{Display}</option>)]\n        )\n    return(DisplayContainer)\n}\n/*************************************************** Lang Option *****************************************************************************/\nconst LangOption = () => {\n\n    //this is for the days in a Month \n    const Lang_Option = ['en','ar','chi','fi','fr','ja','ko','it','ru']\n    const LangContainer = (\n        [Lang_Option.map((Lang,index ) => <option  key={index.id + createEventId()} value={Lang}>{Lang}</option>)]\n        )\n    return(LangContainer)\n}\n\nexport {HourValue, MinutsValue, TwelveHourSystemValue, \n        NumberOfYearsValue, NumberOfMonthsValue, NumberOfDaysValue, \n        DisplayOption, LangOption};\n","import React, { useState } from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport SelectData from \"../../../UI/Select\";\nimport { LangOption } from \"./OptionsForm\";\n\nconst LangSelection = (props) => {\n  const [langOptionInput, ChangelangOptionInput] = useState(\"en\");\n  const handlelang = (e) => {\n    props.TheCalndarlang(e.target.value)\n    ChangelangOptionInput(e.target.value);\n  };\n  const Colors = (\n    <FadeIn>\n      <SelectData\n        key={langOptionInput.id + 1}\n        inputType={\"text\"}\n        name=\"title\"\n        widthValue={\"56px\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={\"FOCUS\"}\n        borderRadiusValue={\"7px\"}\n        backGroundColorValue={props.RecievedColor.UserInputBGC}\n        FontColorValue={props.RecievedColor.UserInputFC}\n        PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\n        borderColorValue={props.RecievedColor.BorderColor}\n        BorderValue={\"solid\"}\n        borderWidthValue={\"thin\"}\n        paddingLeftValue={\"7px\"}\n        marginRightValue={\"9px\"}\n        marginTopValue={\"15px\"}\n        onchangeValue={handlelang}\n        InputValue={langOptionInput}\n      >\n        {<LangOption />}\n      </SelectData>\n    </FadeIn>\n  );\n\n  return [Colors];\n};\n\nexport default LangSelection;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst borderStyling = {\n    border: \"1px solid rgb(245,186,19, 0.382)\",\n    boxShadow: \"0 0 2px 2px rgb(245,186,19, 0.382)\",\n  }\n\nconst ModelContainer = styled.div`\n    position: ${(props) => (props.positionInput ? props.positionInput : null)};\n    background: ${(props) => (props.BackgroundInput ? props.BackgroundInput : \"#fff\")};\n    width: ${(props) => (props.widthInput ? props.widthInput : \"auto\")};\n    height: ${(props) => (props.heighthInput ? props.heightInput : \"none\")};\n    margin: ${(props) => (props.marginInput ? props.marginInput : null)};\n    padding: ${(props) => (props.paddingInput ? props.paddingInput : null)};\n    box-shadow: ${(props) => (props.boxShadowInput ? props.boxShadowInput : null)};\n    border-radius: ${(props) => (props.borderRadiusInput ? props.borderRadiusInput : null)};\n    float: ${(props) => (props.floatInput ? props.floatInput : null)};\n    display: ${(props) => (props.displayInput ? props.displayInput :null)};\n    flex-direction: ${(props) => (props.flexDirectionInput ? props.flexDirectionInput : null)};\n    resize: ${(props) => (props.resizeInput ? props.resizeInput : \"none\")};\n    overflow: ${(props) => (props.overflow ? props.overflow : \"nono\")}\n    flex-grow: ${(props) => (props.flexGrowInput ? props.flexGrowInput : \"none\")};\n    margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : \"none\")};\n    margin-top: ${(props) => (props.marginTop ? props.marginTop : \"none\")};\n    margin-left: ${(props) => (props.marginLeft ? props.marginLeft : \"none\")};\n    background-color: ${(props) => ( props.backGroundColorInput ? props.backGroundColorInput : \"\")};\n    color: ${(props) => ( props.FontColorInput ? props.FontColorInput : \"\")};\n    &::placeholder{\n        color: ${(props) => ( props.PlaceHolderColorInput ? props.PlaceHolderColorInput : \"\")};\n    };\n    &:hover { \n        ${(props) => (props.IsCalled === \"HOVER\" ? borderStyling : \"none\")};\n    };\n    &:focus { \n        ${(props) => (props.IsCalled === \"FOCUS\" ? borderStyling : \"none\")};\n    };\n    z-index: ${(props) => (props.Zindex ? props.Zindex : \"\")};\n    transition: all 0.3s ease-out;\n    transform: ${(props) => (props.transformInput ? props.transformInput : null)};\n    opacity: ${(props) => (props.OpacityInput ? props.OpacityInput : null)};\n    left: ${(props) => (props.LeftInput ? props.LeftInput : \"auto\")};\n    top: ${(props) => (props.TopInput ? props.TopInput : \"auto\")};\n    Right: ${(props) => (props.RightInput ? props.RightInput : \"auto\")};\n`\n\nexport default function Model (props) {\n\n\n    return(\n        <ModelContainer\n            positionInput={props.position}\n            BackgroundInput={props.Background}\n            widthInput={props.width}\n            heightInput={props.heightValue}\n            overflow={props.overflow}\n            marginInput={props.margin}\n            marginTop={props.marginTopValue}\n            marginLeft={props.marginLeftValue}\n            paddingInput={props.padding}\n            floatInput={props.float}\n            displayInput={props.display}\n            resizeInput={props.resizeValue}\n            boxShadowInput={props.boxShadowValue}\n            borderRadiusInput={props.borderRadiusValue}\n            flexDirectionInput={props.flexDirectionValue}\n            flexGrowInput={props.flexGrowValue}\n            marginBottom={props.marginBottomValue}\n            backGroundColorInput={props.backGroundColorValue}\n            FontColorInput={props.FontColorValue}\n            PlaceHolderColorInput={props.PlaceHolderColorValue}\n            OpacityInput={props.OpacityValue}\n            transformInput={props.TransformValue}\n            LeftInput={props.LeftValue}\n            TopInput={props.TopValue}\n            RightInput={props.RightValue}\n            Zindex={props.ZindexValue}\n        >\n            {props.children}\n        </ModelContainer>\n    )\n}","import React from \"react\";\nimport styled from \"styled-components\"; \n\n \nconst PosterStyle = styled.img` \n    // position: absolute; \n    box-shadow: 0 2px 5px #000;\n    width: auto;\n    height: auto;\n    border-radius: 35px;\n    object-fit: cover; \n    margin-right: 12px;\n`;\nconst Imag = (props) => {\n  return (\n    <PosterStyle draggable={false} src={props.SRC} />\n  );\n};\n\nexport default Imag;\n","import React, {useState, useEffect} from \"react\";\nimport styled from \"styled-components\";\nimport SwitchIcon from './Switch'\nimport FadeIn from 'react-fade-in';\nimport UserIcon from \"./UserIcon\";\nimport {\n  LoginOutlined,\n  LogoutOutlined,\n  DownCircleOutlined,\n  UpCircleOutlined,\n} from \"@ant-design/icons\";\nimport NotesIcon from '@material-ui/icons/Notes';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\nimport NoteAddOutlinedIcon from '@material-ui/icons/NoteAddOutlined';\nimport { Link } from \"react-router-dom\";\nimport LogoNotask from \"../UI/logo\";\nimport Button from \"../UI/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../API/API\";\nimport LangSelection from \"../Routes/Calendar/DataCollection/LangSelection\";\nimport {DayCloudy, DayCloudyHigh} from \"@intern0t/react-weather-icons\";\nimport Model from \"../UI/Modal\";\nimport Weather_Icon from \"../UI/WeatherIcon\";\n\n/*************************************************** Style Area *****************************************************************************/\nconst StyledNavBar = styled(FadeIn)` \n    align-items: center; \n    justify-content: space-between;\n    height: 50px;\n    background-color: #f5ba13;\n    margin: auto -16px;\n    padding: 16px 32px;\n    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.3);\n    display: flex;\n`; \nconst DisplayedUsername = styled.span`\n  align-items: center;\n  transform: translate(0, 30%);\n  color: ${(props) => ( props.TextColorInput ? props.TextColorInput : \"\")};\n  margin-top: 1px;\n`;\nconst RightNavBarItems = styled.div`\n  margin-right: 4px;\n  display: flex;\n  width: 500px;\n  justify-content: flex-end;\n`;\nconst LeftNavBarItems = styled.div`\n  display: flex;\n  width: 50px;\n  height:50px;\n  justify-content: flex-start;\n`;\n\nconst NavBar = (props) => {\n  const [UserLogged, ChangeUserLogged] = useState(false)\n  useEffect( () => {\n    async function CheckingIsLoggedIn() {\n      const isLoggedIn = await API.isLoggedIn(()=>{});\n      if (isLoggedIn) {\n        return ChangeUserLogged(true)\n      }\n    }\n\n    CheckingIsLoggedIn()\n  } , []) \n\n  /*************************************************** Style Area *****************************************************************************/\n  const VisibilityStle1 = {\n    marginTop: \"10px\",\n    marginRight: \"8px\",\n    fontSize: \"28px\",\n    color: props.RecieveColor.NavIconColor\n  };\n  const DifferentRouteStyle = {\n    marginTop: \"10px\",\n    marginRight: \"8px\",\n    fontSize: \"32px\",\n    color: props.RecieveColor.NavIconColor\n  }; \n  const IconsNavChange = {\n    marginTop: \"10px\",\n    marginRight: \"4px\",\n    fontSize: \"36px\",\n    color: props.RecieveColor.NavIconColor\n  }; \n  const LogoutIconStyle = {\n    marginTop: \"15px\",\n    marginLeft: \"8px\",\n    fontSize: \"18px\",\n    color: props.RecieveColor.NavIconColor\n  };  \n  const LogOutStyle = {\n    marginRight: \"8px\",\n    fontSize: \"22px\",\n    color: props.RecieveColor.NavIconColor,\n  };\n\n  /*************************************************** UserName And Avatar *****************************************************************************/\n  const [isLoggedbutton, ChangeIsLogged] =useState(false)\n  const HandleMouseLeaveLogging = () => {\n    const FinishToggle = () => (ChangeIsLogged(false),props.isShowLogOutButton(false))\n    const Timer = setTimeout(FinishToggle,2000)\n    console.log(Timer)\n    // return ( clearTimeout(Timer), console.log(Timer))\n    return Timer;\n  }\n  let usernameAndAvatar = props.username ? \n    <div style={{ display: \"flex\", minWidth: \"fit-content\" }}>\n      <UserIcon\n        username={props.username}\n        OnChangedColor={props.RecieveColor}\n      />\n      <DisplayedUsername TextColorInput={props.RecieveColor.UserIconTextColor}>\n        <span style={{ fontWeight: \"bold\" }}>{props.username}</span>\n      </DisplayedUsername>\n      {props.showLogOutButton ? \n        (!props.ShowLogOutButtonValue ? \n          <DownCircleOutlined\n            onClick={() => (props.isShowLogOutButton(true),ChangeIsLogged(true))}\n            style={LogoutIconStyle}\n          />\n        : \n          <UpCircleOutlined\n            onClick={() => (props.isShowLogOutButton(false), ChangeIsLogged(false))}\n            onMouseLeave={HandleMouseLeaveLogging}\n            style={LogoutIconStyle}\n          />\n      ): null}\n    </div>\n     : null;\n  \n    let buttonsList = [];\n    if (props.showLoginButton)\n      buttonsList.push({\n        text: \"Login\",\n        linkTo: \"/login\",\n      });\n    if (props.showSignUpButton)\n      buttonsList.push({\n        text: \"Sing Up\",\n        linkTo: \"/signup\",\n      });\n    \n  /*************************************************** if Logged in *****************************************************************************/\n  let history = useHistory() \n  const handlingLoggingOut = async () => {\n    await API.Logout()\n    window.location.reload() \n    history.push(\"/\")\n  } \n  const handlingLoggingIn =  () => {\n    history.push(\"/login\")\n  } \n  /*************************************************** LogOut Button *****************************************************************************/\n  const ButtonIsLogOut = isLoggedbutton ?\n    <div\n      style={{zIndex: \"7\",position: \"absolute\",display: \"flex\",justifyContent: \"flex-end\",right: \"12px\",top: \"52px\",}}> \n        {UserLogged ?\n          <FadeIn>\n            <Button\n            onClick={handlingLoggingOut}\n            position={\"relative\"}\n            width={\"140px\"}\n            padding={\"15px\"}\n            boxShadowValue={\"0 1px 5px rgb(138, 137, 137)\"}\n            borderRadiusValue={\"20px\"}\n            fontSizeValue={\"1.2em\"}\n            marginTopValue={\"5%\"}\n            resizeValue={\"both\"}\n            text={\"Logout\"}\n            LeftValue={\"70%\"}\n            backGroundColorValue={props.RecieveColor.ToggleButton}\n            FontColorValue={props.RecieveColor.IconC}\n            borderColorValue={props.RecieveColor.BorderColor}\n            icon={<LogoutOutlined style={LogOutStyle} />}\n            />\n          </FadeIn> \n          :\n          <FadeIn>\n            <Button\n            onClick={handlingLoggingIn}\n            position={\"relative\"}\n            width={\"140px\"}\n            padding={\"15px\"}\n            boxShadowValue={\"0 1px 5px rgb(138, 137, 137)\"}\n            borderRadiusValue={\"20px\"}\n            fontSizeValue={\"1.2em\"}\n            marginTopValue={\"5%\"}\n            resizeValue={\"both\"}\n            text={\"login\"}\n            LeftValue={\"70%\"}\n            backGroundColorValue={props.RecieveColor.LogSignColor}\n            FontColorValue={props.RecieveColor.IconC}\n            borderColorValue={props.RecieveColor.BorderColor}\n            icon={<LogoutOutlined style={LogOutStyle} />}\n            /> \n          </FadeIn>\n          } \n      </div> : null\n  \n  /*************************************************** change to calendar link *****************************************************************************/\n  const [isCalendar, ChangeIsCalendar] = useState(false);\n  const GoToCalendar = props.inCalendar ? \n    (isCalendar ? \n      (<CalendarTodayIcon onMouseEnter={() => ChangeIsCalendar(false)} style={DifferentRouteStyle} />)  \n      : \n      (<Link to={\"/calendar\"}> \n        <EventAvailableIcon  onMouseLeave={() => ChangeIsCalendar(true)} style={IconsNavChange} />\n        </Link>)) \n    : <EventAvailableIcon  style={IconsNavChange} />\n    \n  /*************************************************** change to Notes link *****************************************************************************/\n  const [isNote, ChangeIsNote] = useState(true);\n  const GoToNote = props.inNotes ? \n    (isNote ? \n      (<NoteAddOutlinedIcon onMouseEnter={() => ChangeIsNote(false)} style={DifferentRouteStyle} />)  \n      : \n      (<Link to={\"/\"} >\n      <NotesIcon   onMouseLeave={() => ChangeIsNote(true)} style={IconsNavChange} />\n        </Link>)) \n    : <NotesIcon style={IconsNavChange} />\n\n  /*************************************************** change Link to Login *****************************************************************************/\n  const GoToLogin =<Link to={props.CallingPage == \"Signin\" ? \"/login\" : \"/signup\"} >\n    {props.CallingPage === \"Signin\" ?\n        <LoginOutlined  style={VisibilityStle1} />\n    :\n        <LogoutOutlined style={VisibilityStle1} />\n      }\n    </Link>\n\n  /*************************************************** lang Drop Down *****************************************************************************/\n  const ButtonLangOption = props.inCalendar ? null : UserLogged ? <LangSelection\n    RecievedColor={props.RecieveColor}\n    TheCalndarlang={(value) =>props.LangOption(value)}\n  /> : null\n\n  /*************************************************** change The Color *****************************************************************************/\n  const ColorSwitcher = UserLogged ? <div style={{marginRight : \"4px\"}}>\n        <SwitchIcon OnChangedColor={props.ColorChanged} style={{marginRight : \"4px\"}}/>\n      </div> : null\n\n  /*************************************************** Weather  *****************************************************************************/\n  const [isWeather, ChnageisWeather] = useState(true)\n  const HandleMouseLeave = () => {\n    const FinishToggle = () => (ChnageisWeather(true))\n    return(setTimeout(FinishToggle,1000))\n  }\n  const IsWeather =UserLogged ? (isWeather ?\n         <Button\n            onClick={()=>ChnageisWeather(false)} \n            position={\"relative\"}\n            width={\"0px\"}\n            marginRightValue={\"50px\"}\n            marginTopValue={\"8px\"}\n            icon={<DayCloudy color={props.RecieveColor.ToggleButton} size={\"35px\"} />}\n            /> \n            :\n            <Button\n            onClick={()=>ChnageisWeather(true)}\n            onMouseLeave={HandleMouseLeave}\n            position={\"relative\"}\n            width={\"0px\"}\n            marginRightValue={\"50px\"}\n            marginTopValue={\"2px\"}\n            icon={<DayCloudyHigh color={props.RecieveColor.ToggleButton} size={\"42px\"} />}\n            />) : null \n            \n  const WeatherButton = !isWeather ? (UserLogged ?<div\n      style={{zIndex: \"7\",position: \"absolute\",display: \"flex\",justifyContent: \"flex-end\",right: \"30%\",top: \"52px\"}}>\n        <Model\n          display={\"flex\"}\n          flexDirectionValue={\"row\"}\n          position= {\"relative\"}\n          width= {\"305px\"}\n          margin= {\"15px\"}\n          padding= {\"10px\"}\n          boxShadowValue= {\"0 1px 5px rgb(138, 137, 137)\"}\n          borderRadiusValue= {\"7px\"}\n          resizeValue={\"both\"}\n          backGroundColorValue={props.RecieveColor.ToggleButton}\n          FontColorValue={props.RecieveColor.IconC}\n          borderColorValue={props.RecieveColor.BorderColor}\n          icon={<LogoutOutlined style={LogOutStyle} />}\n            >\n              <Weather_Icon SRC={props.WeatherIcon}/>\n              <div style={{marginTop: \"10px\"}}>{props.WeatherMessage}</div>\n        </Model>\n      </div>: null ): null\n\n  /*************************************************** NavBar  *****************************************************************************/\n  return (\n    <StyledNavBar>\n      <LeftNavBarItems>\n          <LogoNotask/>\n      </LeftNavBarItems>\n      <RightNavBarItems>\n        {WeatherButton}\n        {IsWeather}\n        {ButtonLangOption}\n        {ColorSwitcher}\n        {GoToCalendar}\n        {GoToNote}\n        {buttonsList.map((button) => {\n          return (\n            <div  style={{ display: \"flex \", flexDirection: \"row\",  marginLeft: \"6px\",  }}  >\n              {GoToLogin}\n              <div style={{ color: props.RecieveColor.UserInputFC,  fontSize: \"1.2em\",  marginTop: \"12px\",  }}  >\n                {button.text}\n              </div>\n            </div>\n          );\n        })}\n        {usernameAndAvatar}\n        {props.ShowLogOutButtonValue ? ButtonIsLogOut  : null}\n      </RightNavBarItems>\n    </StyledNavBar>\n  ); \n}\n\n\n\n\nexport default NavBar;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst borderStyling = {\n  border: \"1px solid rgb(245,186,19, 0.393)\",\n  boxShadow: \"0 0 2px 2px rgb(245,186,19, 0.393)\",\n}\n\nconst TextareaContainer = styled.textarea`\n    display: flex;\n    resize: ${(props) => (props.resizeInput ? props.resizeInput : \"none\")};\n    width: ${(props) => (props.widthInput ? props.widthInput : \"100%\")};\n    height: ${(props) => (props.heightInput ? props.heightInput : null)};\n    border: ${(props) => (props.borderInput ? props.borderInput : \"none\" )};\n    padding: ${(props) => (props.paddingInput ? props.paddingInput : null)};\n    outline: ${(props) => (props.outlineInput ? props.outlineInput : null)};\n    border-radius: ${(props) => (props.borderRadiusInput ? props.borderRadiusInput : null)};\n    font-size: ${(props) => (props.fontSizeInput ? props.fontSizeInput : \"none\")};\n    font-family: ${(props) => (props.fontFamilyInput ? props.fontFamilyInput : \"none\")};\n    box-shadow: ${(props) => (props.boxShowInput ? props.boxShowInput : \"none\")}; \n    background-color: ${(props) => ( props.backGroundColorInput ? props.backGroundColorInput : \"\")};\n    color: ${(props) => ( props.FontColorInput ? props.FontColorInput : \"\")};\n    border-color: ${(props) => (props.borderColorInput ? props.borderColorInput : \"none\")};\n    border-width: ${(props) => (props.borderWidthInput ? props.borderWidthInput : \"inherit\")};\n    margin-right: ${(props) => (props.marginRightInput ? props.marginRightInput : \"none\")};\n    margin-bottom: ${(props) => (props.marginBottomInput ? props.marginBottomInput : \"none\")};\n    &::placeholder{\n      color: ${(props) => ( props.PlaceHolderColorInput ? props.PlaceHolderColorInput : \"\")};\n    };\n    &:hover { \n      ${(props) => (props.IsCalled === \"HOVER\" ? borderStyling : \"none\")};\n    };\n    &:focus { \n      ${(props) => (props.IsCalled === \"FOCUS\" ? borderStyling : \"none\")};\n    };\n    /* &:hover {\n    border: 1px solid rgb(245,186,19, 0.493);\n    box-shadow: 0 0 2px 2px rgb(245,186,19, 0.493);\n    } */\n`\nexport default function UserInput(props) {\n  return (\n      <TextareaContainer\n        marginBottomInput={props.marginBottomValue}\n        maxLength={props.maxLength}\n        value={props.InputValue}\n        placeholder={props.PlaceholderValue}\n        onChange={props.onchangeValue}\n        onClick={props.onClickValue}\n        widthInput={props.widthValue}\n        heightInput={props.heightValue}\n        borderInput={props.BorderValue}\n        paddingInput={props.paddingVale}\n        outlineInput={props.outlineValue}\n        fontSizeInput={props.fontSizeValue}\n        fontFamilyInput={props.fontFamilyValue}\n        resizeInput={props.resizeValue}\n        name={props.name}\n        rows={props.rows} \n        IsCalled={props.IsCalledValue}\n        borderRadiusInput={props.borderRadiusValue}\n        backGroundColorInput={props.backGroundColorValue}\n        FontColorInput={props.FontColorValue}\n        PlaceHolderColorInput={props.PlaceHolderColorValue}\n        borderColorInput={props.borderColorValue}\n        borderWidthInput={props.borderWidthValue}\n        marginRightInput={props.marginRightValue}\n      />\n  );\n}\n","import React, {useState} from 'react';\r\nimport { DeleteFilled , DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport FadeIn  from 'react-fade-in';\r\nimport NoteContainer from '../../../UI/Modal';\r\nimport TextArea from '../../../UI/TextArea';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nconst HoveringContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n    margin-top: 6px;\r\n    margin-right: 6px;\r\n    font-size: 27px;\r\n    color: #f5ba13;\r\n`\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    margin-bottom: 10px;\r\n`\r\nconst IcionStyleing = styled.div`\r\n    position: relative;\r\n    float: right;\r\n    color: #f5ba13;\r\n`\r\nconst borderStyling = {\r\n    border: \"1px solid rgb(245,186,19, 0.382)\",\r\n    boxShadow: \"0 0 2px 2px rgb(245,186,19, 0.382)\",\r\n  } \r\n\r\nconst Note = (props) => \r\n{   \r\n    //this is for deleting the note \r\n    const handleDelete = () => {props.onDelete(props.id);}    \r\n    //this is for the Hovering for the delete Icon\r\n    const [isHover, SetHover] = useState(true);\r\n    const OnHovering = () => {SetHover(!isHover)}\r\n\r\n    /******************************************************* Title *************************************************************************/\r\n    //this is for changing the title\r\n    const [TitleClicked, ChangeTitleClicked] = useState(props.isTitleValue)\r\n    let [RecievedTitle, ChangeRecievedTitle] = useState(\"\")\r\n    let RecievedTitleLittersNumber = ((props.NumberOfLitters >= 20) ?  2  : 1) \r\n    const [NumberOfTitleRows, ChangeNumberOfRows]= useState(\"\")\r\n    const TitleHandler = () =>{\r\n        return(\r\n            ChangeTitleClicked(false),\r\n            ChangeRecievedTitle(props.title),\r\n            ChangeNumberOfRows(RecievedTitleLittersNumber)\r\n            ) \r\n        }\r\n    const changeTItleHandler = () => {return(ChangeTitleClicked(true) , props.ChangeTitle(props.id, RecievedTitle), ChangeRecievedTitle(\"\"))}\r\n    const handlerChangeTitle = (event) => {\r\n        const TargetLength = event.target.value.length\r\n        const ReturnRowsValue = (TargetLength  >= 20 ) ?  2 : 1\r\n        ChangeRecievedTitle(event.target.value)\r\n        ChangeNumberOfRows(ReturnRowsValue)\r\n    } \r\n    const handlingTitle =() => {\r\n        if (TitleClicked) {\r\n            return(\r\n            <FadeIn>\r\n                <Container>\r\n                        <FadeIn>\r\n                            <div style={{\r\n                                width: \"260px\",\r\n                                fontSize: \"1.2em\", \r\n                                wordWrap: \"break-word\",\r\n                                padding: \"5px\",\r\n                                borderRadius: \"7px\",\r\n                                border:\"solid\",\r\n                                borderWidth:\"thin\",\r\n                                hover: borderStyling,\r\n                                color: `${props.RecieveColor.TextAreaFC}`,\r\n                                backgroundColor: `${props.RecieveColor.TextAreaBGC}`,\r\n                                borderColor:  `${props.RecieveColor.BorderColor}`,\r\n                            }}>\r\n                                <FadeIn>{ props.title}</FadeIn>\r\n                            </div>\r\n                        </FadeIn>\r\n                    <FadeIn><IcionStyleing><EditOutlined onClick={TitleHandler}/></IcionStyleing></FadeIn>\r\n                </Container>\r\n            </FadeIn>\r\n            )\r\n        }\r\n        else\r\n        {\r\n            return(\r\n            <FadeIn>\r\n            <Container>\r\n                <FadeIn>\r\n                <TextArea \r\n                    rows={NumberOfTitleRows}\r\n                    maxLength={\"30\"}\r\n                    widthValue= {\"260px\"}\r\n                    paddingVale= {\"5px\"}\r\n                    outlineValue= \"none\"\r\n                    fontSizeValue= {\"1.2em\"}\r\n                    fontFamilyValue= {\"inherit\"} \r\n                    resizeValue= {\"none\"}\r\n                    IsCalledValue={\"HOVER\"}\r\n                    marginRightValue={\"2px\"}\r\n                    borderRadiusValue= {\"7px\"}\r\n                    InputValue = {RecievedTitle}\r\n                    onchangeValue={handlerChangeTitle}                            \r\n                    backGroundColorValue={props.RecieveColor.UserInputBGC}\r\n                    FontColorValue={props.RecieveColor.UserInputFC}\r\n                    PlaceHolderColorValue={props.RecieveColor.UserInputPHC}\r\n                />\r\n                </FadeIn>\r\n                <FadeIn><IcionStyleing><CheckCircleOutlineIcon onClick={changeTItleHandler} /></IcionStyleing></FadeIn>\r\n            </Container>\r\n            </FadeIn>\r\n            )\r\n        }\r\n    }\r\n    /*************************************************** Content *****************************************************************************/\r\n    //this is for changing the content\r\n    const [ContentClicked, ChangeContentClicked] = useState(props.isContent)\r\n    let [RecievedContent, ChangeRecievedContent] = useState(\"\")\r\n    const ContentHandler = () =>{return(ChangeContentClicked(false),ChangeRecievedContent(props.content)) }\r\n    const changeContentHandler = () => {return(ChangeContentClicked(true) , props.ChangeContent(props.id, RecievedContent), ChangeRecievedContent(\"\"))}\r\n    const handlingContent =() => {\r\n        if (ContentClicked) {\r\n            return(\r\n            <FadeIn>\r\n            <Container>\r\n                <FadeIn>\r\n                    <div style={{\r\n                        width: \"260px\",\r\n                        height: \"150px\", \r\n                        fontSize: \"1.2em\", \r\n                        padding: \"5px\",\r\n                        wordWrap: \"break-word\",\r\n                        overflow: \"auto\",\r\n                        border:\"solid\",\r\n                        borderWidth:\"thin\",\r\n                        hover: borderStyling,\r\n                        borderRadius: \"7px\",\r\n                        color: `${props.RecieveColor.TextAreaFC}`,\r\n                        backgroundColor: `${props.RecieveColor.TextAreaBGC}`,\r\n                        borderColor:  `${props.RecieveColor.BorderColor}`,\r\n                    }}>\r\n                        <FadeIn>{ props.content}</FadeIn>\r\n                    </div>\r\n                </FadeIn>\r\n                <FadeIn><IcionStyleing><EditOutlined onClick={ContentHandler}/></IcionStyleing></FadeIn>\r\n            </Container>\r\n            </FadeIn>\r\n            )\r\n        }\r\n        else\r\n        {\r\n            return(\r\n            <FadeIn>\r\n            <Container>\r\n                <FadeIn>\r\n                <TextArea \r\n                    rows={6}\r\n                    widthValue= {\"260px\"}\r\n                    borderRadiusValue= {\"7px\"}\r\n                    paddingVale= {\"5px\"}\r\n                    outlineValue= \"none\"\r\n                    fontSizeValue= {\"1.2em\"}\r\n                    fontFamilyValue= {\"inherit\"}\r\n                    resizeValue= {\"vertical\"}\r\n                    IsCalledValue={\"FOCUS\"}\r\n                    BorderValue={\"solid\"}\r\n                    borderWidthValue=\"thin\"\r\n                    marginRightValue={\"2px\"}\r\n                    InputValue = {RecievedContent} \r\n                    onchangeValue={e => ChangeRecievedContent(e.target.value)}  \r\n                    backGroundColorValue={props.RecieveColor.TextAreaBGC}\r\n                    FontColorValue={props.RecieveColor.TextAreaFC}\r\n                    PlaceHolderColorValue={props.RecieveColor.TextAreaPHC}\r\n                    borderColorValue={props.RecieveColor.BorderColor}\r\n                />\r\n                </FadeIn>\r\n                <FadeIn><IcionStyleing><CheckCircleOutlineIcon onClick={changeContentHandler} /></IcionStyleing></FadeIn>\r\n            </Container>\r\n            </FadeIn>\r\n            )\r\n        }\r\n    }      \r\n    \r\n    /*************************************************** Note *****************************************************************************/\r\n    const NoteValue = <FadeIn>\r\n            <NoteContainer\r\n                background= {\"#fff\"}\r\n                borderRadiusValue= {\"20px\"}\r\n                boxShadowValue= {\"0 2px 5px #ccc\"}\r\n                flexDirectionValue= {\"column\"}\r\n                padding= {\"10px\"}\r\n                width= {\"300px\"}\r\n                heightValue={\"200px\"}\r\n                margin= {\"16px\"}\r\n                float= {\"left\"}\r\n                display= {\"flex\"}\r\n                backGroundColorValue={props.RecieveColor.NotekBGC}\r\n                FontColorValue={props.RecieveColor.NoteFC}\r\n                >\r\n                <FadeIn>{handlingTitle()}</FadeIn>\r\n                <FadeIn>{handlingContent()}</FadeIn>\r\n                <HoveringContainer > \r\n                    {isHover ? \r\n                    <FadeIn><DeleteFilled onPointerEnter={OnHovering} /></FadeIn>: \r\n                    <FadeIn><DeleteOutlined onClick={handleDelete} onMouseLeave={OnHovering}/></FadeIn>}\r\n                </HoveringContainer>\r\n            </NoteContainer>\r\n        </FadeIn>\r\n\r\n   return(NoteValue)\r\n\r\n}\r\nexport default Note ","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst FooterContainer = styled.div`\r\n    position: absolute;\r\n    text-align: center;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 2.5rem;\r\n`\r\nconst FooterInfo = styled.p`\r\n    color: #ccc;\r\n`\r\n\r\n\r\nconst currentYear = new Date().getFullYear();\r\n\r\nconst Footer = () => (\r\n        <FooterContainer>\r\n            <FooterInfo>\r\n             Copyright ⓒ {currentYear}\r\n            </FooterInfo>\r\n        </FooterContainer>\r\n)\r\n\r\nexport default Footer ","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { EyeOutlined, EyeInvisibleOutlined } from \"@ant-design/icons\";\n\nconst Container = styled.div`\n  display: flex;\n`\nconst borderStyling = {\n  border: \"1px solid rgb(245,186,19, 0.382)\",\n  boxShadow: \"0 0 2px 2px rgb(245,186,19, 0.382)\",\n}\n\nconst InputContainer = styled.input`\n  icon: ${<EyeOutlined/>};\n  display: flex;\n  resize: ${(props) => (props.resizeInput ? props.resizeInput : \"none\")};\n  width: ${(props) => (props.widthInput ? props.widthInput : \"100%\")};\n  height: ${(props) => (props.heightInput ? props.heightInput : null)};\n  padding: ${(props) => (props.paddingInput ? props.paddingInput : null)};\n  outline: ${(props) => (props.outlineInput ? props.outlineInput : null)};\n  font-size: ${(props) => (props.fontSizeInput ? props.fontSizeInput : \"none\")};\n  font-family: ${(props) => (props.fontFamilyInput ? props.fontFamilyInput : \"none\")};\n  box-shadow: ${(props) => (props.boxShowInput ? props.boxShowInput : \"none\")}; \n  background-color: ${(props) => ( props.backGroundColorInput ? props.backGroundColorInput : \"\")};\n  color: ${(props) => ( props.FontColorInput ? props.FontColorInput : \"\")};\n  border: ${(props) => (props.borderInput ? props.borderInput : \"none\" )};\n  border-radius: ${(props) => (props.borderRadiusInput ? props.borderRadiusInput : null)};\n  border-color: ${(props) => (props.borderColorInput ? props.borderColorInput : \"none\")};\n  border-width: ${(props) => (props.borderWidthInput ? props.borderWidthInput : \"inherit\")};\n  margin-right: ${(props) => (props.marginRightInput ? props.marginRightInput : \"none\")};\n  margin-left: ${(props) => (props.marginLeftInput ? props.marginLeftInput : \"none\")};\n  margin-top: ${(props) => (props.marginTopInput ? props.marginTopInput : \"none\")};\n  &::placeholder{\n    color: ${(props) => ( props.PlaceHolderColorInput ? props.PlaceHolderColorInput : \"\")};\n  };\n  &:hover { \n    ${(props) => (props.IsCalled === \"HOVER\" ? borderStyling : \"none\")};\n  };\n  &:focus { \n    ${(props) => (props.IsCalled === \"FOCUS\" ? borderStyling : \"none\")};\n  };\n  /* &:hover {\n    border: 1px solid rgb(245,186,19, 0.493);\n    box-shadow: 0 0 2px 2px rgb(245,186,19, 0.493);\n  } */\n`\nconst passwordIconStyling = {\n  color: \"#f5ba13\",\n  fontSize: \"22px\",\n  display: \"flex\",\n};\n\nexport default function UserInput(props) {\n  const [Password, ChangePassword] = useState(false);\n  const toggleShowPassword = () => {ChangePassword(!Password)};\n  const getInputPasswordIcon = () => {\n    if(props.inputType === \"password\"){\n      if(Password){\n        return(\n          <EyeOutlined\n            style={passwordIconStyling}\n            onClick={toggleShowPassword}\n          />\n        );\n      }else{\n        return(\n          <EyeInvisibleOutlined\n            style={passwordIconStyling}\n            onClick={toggleShowPassword}\n          />\n        );\n      }\n    }\n  }\n  return (\n    <Container>\n      <InputContainer\n        maxLength={props.maxLength}\n        value={props.InputValue}\n        type={Password ? \"text\" : props.inputType}\n        placeholder={props.PlaceholderValue}\n        onChange={props.onchangeValue}\n        onClick={props.onClickValue}\n        widthInput={props.widthValue}\n        heightInput={props.heightValue}\n        boxShowInput={props.boxShowValue}\n        paddingInput={props.paddingVale}\n        outlineInput={props.outlineValue}\n        fontSizeInput={props.fontSizeValue}\n        fontFamilyInput={props.fontFamilyValue}\n        resizeInput={props.resizeValue}\n        name={props.name}\n        rows={props.rows} \n        IsCalled={props.IsCalledValue}\n        backGroundColorInput={props.backGroundColorValue}\n        FontColorInput={props.FontColorValue}\n        PlaceHolderColorInput={props.PlaceHolderColorValue}\n        borderInput={props.BorderValue}\n        borderRadiusInput={props.borderRadiusValue}\n        borderColorInput={props.borderColorValue}\n        borderWidthInput={props.borderWidthValue}\n        marginRightInput={props.marginRightValue}\n        marginLeftInput={props.marginLeftValue}\n        marginTopInput={props.marginTopValue}\n        checked={props.checked}\n      >\n        \n      </InputContainer>\n      <div>{getInputPasswordIcon()}</div>\n    </Container>\n  );\n}\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { PlusCircleFilled, CheckCircleFilled} from '@ant-design/icons'\r\nimport FadeIn from 'react-fade-in';\r\nimport UserInput from '../../../UI/UserInput';\r\nimport TextArea from '../../../UI/TextArea';\r\nimport NoteContainer from '../../../UI/Modal';\r\nimport { SentimentVeryDissatisfied, Title, ImportContacts ,SentimentVerySatisfied} from '@material-ui/icons';\r\nimport API from \"../../../API/API\";\r\n\r\nconst AddNote = styled.div`\r\n    font-size :30px;\r\n    color: #f5ba13;\r\n    position: absolute;\r\n    right: 0px;\r\n    bottom: -15px;\r\n    width: 36px;\r\n    height: 36px;\r\n`\r\nconst InfoContainer = styled.div`\r\n    width: 455px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    margin: 4px;\r\n    `\r\nconst CreateNote = (props) => {\r\n    const IconColor = { color : props.RecieveColor.IconC }\r\n    const [isExpanded, setExpanded] = useState(false);\r\n    const [isSubmit, setSubmit] = useState(false); \r\n    const [CurrentNote, setNote] = useState({title: \"\",content: \"\", id: \"\"}); \r\n    const [CurrentPlaceHolde, setPlaceHolder]= useState({titlePH: \"Title\" , contentPH: \"Take a note ...\"})\r\n    const [isHover, SetHover] = useState(true);\r\n    const [TargetLength, ChangeTargetLength] = useState(\"\")\r\n    const OnHoveringEnter = () => {SetHover(false)}\r\n    const OnHoveringLeave = () => {SetHover(true)}\r\n    const subNote = async (event) =>  {\r\n        event.preventDefault();\r\n        setSubmit(true);\r\n        if (CurrentNote.title === \"\" && CurrentNote.content === \"\" )\r\n        {   \r\n        return( <FadeIn>{\r\n            setPlaceHolder({ titlePH: \"Please Enter A Title ....(-_-)!\", contentPH: \"Please Enter some Content ...(-_-)!\"}) \r\n            && isIconUserInput() && isIconTextArea()}\r\n        </FadeIn> )\r\n        } \r\n        else  if (CurrentNote.title === \"\" )\r\n        {  \r\n        return( <FadeIn>{\r\n            setPlaceHolder({titlePH: \"Please Enter A Title ....(-_-)\"}) \r\n            && isIconUserInput()}\r\n        </FadeIn>)\r\n                \r\n        } else if (CurrentNote.content === \"\" )\r\n        {\r\n        return( <FadeIn>{\r\n            setPlaceHolder({contentPH: \"Please Enter some Content ...(-_-)!\"}) \r\n            && isIconTextArea()}\r\n        </FadeIn>)\r\n        }else\r\n        {\r\n            if(props.isLoggedIn){\r\n                return API.CreateNote(CurrentNote.title, CurrentNote.content, (note)=>{\r\n                    setNote({note})\r\n                    props.AddedNote(note)\r\n                    setNote({\r\n                        title: \"\",\r\n                        content: \"\",\r\n                        id: \"\"\r\n                    })\r\n                    setPlaceHolder({\r\n                        titlePH: \"Title\" , \r\n                        contentPH: \"Take a note ...\"\r\n                    })\r\n                    props.TitleLitterNumber(TargetLength)\r\n                    ChangeTargetLength(\"\")\r\n                    setSubmit(false)\r\n                } ) \r\n            }\r\n            props.AddedNote(CurrentNote)\r\n            setNote({\r\n                title: \"\",\r\n                content: \"\",\r\n                id: \"\"\r\n            })\r\n            setPlaceHolder({\r\n                titlePH: \"Title\" , \r\n                contentPH: \"Take a note ...\"\r\n            })\r\n            props.TitleLitterNumber(TargetLength)\r\n            ChangeTargetLength(\"\")\r\n            setSubmit(false)\r\n        }  \r\n        \r\n    }\r\n    const isIconUserInput = () => \r\n    (!isSubmit ? \r\n        (CurrentNote.title === \"\" ? <SentimentVerySatisfied style={IconColor}/> : <Title style={IconColor}/>) \r\n        : (CurrentNote.title === \"\" ? <SentimentVeryDissatisfied style={IconColor}/> : <Title style={IconColor}/>))\r\n    const isIconTextArea = () => \r\n    (!isSubmit ? \r\n        (CurrentNote.content === \"\" ? <SentimentVerySatisfied style={IconColor}/> : <ImportContacts style={IconColor}/>) \r\n        : (CurrentNote.content === \"\" ? <SentimentVeryDissatisfied style={IconColor}/> : <ImportContacts style={IconColor}/>))\r\n    \r\n    const expand = () => {setExpanded(true)}\r\n\r\n    /******************************************************* Title *************************************************************************/\r\n    const handlerChangeTitle = (event) => {\r\n        ChangeTargetLength(event.target.value.length)\r\n        const {name , value} = event.target ;\r\n        setNote(prevNote => { return {...prevNote, [name]: value};});\r\n    }\r\n    const TitleValue = <InfoContainer>\r\n            <FadeIn><TextArea\r\n                rows={(TargetLength >= 40 ) ? 2 : 1}\r\n                maxLength={\"30\"}\r\n                name=\"title\"\r\n                inputType={\"text\"}\r\n                widthValue={\"421px\"}\r\n                paddingVale={\"4px\"}\r\n                outlineValue={\"none\"}\r\n                marginBottomValue={\"5px\"}\r\n                fontSizeValue={\"1.2em\"}\r\n                fontFamilyValue={\"inherit\"}\r\n                IsCalledValue={\"FOCUS\"} \r\n                borderRadiusValue= {\"7px\"}\r\n                BorderValue={\"solid\"}\r\n                borderWidthValue=\"thin\"\r\n                marginRightValue={\"10px\"}\r\n                onClickValue={expand}\r\n                onchangeValue={handlerChangeTitle}\r\n                InputValue={CurrentNote.title}\r\n                PlaceholderValue={CurrentPlaceHolde.titlePH}\r\n                backGroundColorValue={props.RecieveColor.UserInputBGC}\r\n                FontColorValue={props.RecieveColor.UserInputFC}\r\n                PlaceHolderColorValue={props.RecieveColor.UserInputPHC}\r\n                borderColorValue={props.RecieveColor.BorderColor}\r\n            /></FadeIn>\r\n            <FadeIn>{ isIconUserInput()}</FadeIn>\r\n        </InfoContainer>\r\n    \r\n    /*************************************************** Content *****************************************************************************/\r\n    const handlerChangeContent = (event) => {\r\n        const {name , value} = event.target ;\r\n        setNote(prevNote => { return {...prevNote, [name]: value};});\r\n    }\r\n    const ContentValue = isExpanded && \r\n        <InfoContainer>\r\n            <FadeIn><TextArea\r\n                InputValue={CurrentNote.content}\r\n                name=\"content\"\r\n                PlaceholderValue={CurrentPlaceHolde.contentPH}\r\n                rows={isExpanded ? 3 : 1}\r\n                onchangeValue={handlerChangeContent}\r\n                widthValue={\"421px\"}\r\n                paddingVale={\"4px\"}\r\n                outlineValue={\"none\"}\r\n                fontSizeValue={\"1.2em\"}\r\n                fontFamilyValue={\"inherit\"}\r\n                resizeValue={\"vertical\"}\r\n                IsCalledValue={\"FOCUS\"}\r\n                borderRadiusValue= {\"7px\"}\r\n                backGroundColorValue={props.RecieveColor.TextAreaBGC}\r\n                FontColorValue={props.RecieveColor.TextAreaFC}\r\n                PlaceHolderColorValue={props.RecieveColor.TextAreaPHC}\r\n                borderColorValue={props.RecieveColor.BorderColor}\r\n                BorderValue={\"solid\"}\r\n                borderWidthValue=\"thin\"\r\n                marginRightValue={\"10px\"}\r\n            /> </FadeIn>\r\n            <FadeIn>{isIconTextArea()}</FadeIn>\r\n        </InfoContainer>\r\n\r\n    /*************************************************** Button *****************************************************************************/\r\n    const ButtonValue = isExpanded && (\r\n      <AddNote>\r\n        <FadeIn>\r\n          {isHover ? (\r\n            <PlusCircleFilled onPointerEnter={OnHoveringEnter} />\r\n          ) : (\r\n            <CheckCircleFilled\r\n              onClick={subNote}\r\n              onMouseLeave={OnHoveringLeave}\r\n            />\r\n          )}\r\n        </FadeIn>\r\n      </AddNote>\r\n    );\r\n    \r\n    /*************************************************** Create Note *****************************************************************************/\r\n    const CreateTheNote = <FadeIn>\r\n            <NoteContainer\r\n                position= {\"relative\"}\r\n                width= {\"480px\"}\r\n                margin= {\"30px auto 20px auto\"}\r\n                padding= {\"15px\"}\r\n                boxShadowValue= {\"0 1px 5px rgb(138, 137, 137)\"}\r\n                borderRadiusValue= {\"24px\"}\r\n                resizeValue={\"both\"}\r\n                backGroundColorValue={props.RecieveColor.NotekBGC}\r\n                >\r\n                {TitleValue}\r\n                {ContentValue}\r\n                {ButtonValue}\r\n            </NoteContainer>\r\n        </FadeIn>\r\n\r\n    return(CreateTheNote)\r\n}\r\n\r\nexport default CreateNote;\r\n","import React, { Component } from 'react';\nimport Nav from '../../UI/NavBar'\nimport Note from './Note/Note'\nimport Footer from '../../UI/Footer'\nimport CreateNote from './CreateNote/CreateNote'\nimport FadeIn from 'react-fade-in';\nimport API from \"../../API/API\";\n\nconst foreCast = require('../../WeatherApp/WeatherStack');\nconst GeoCode = require('../../WeatherApp/GeoCoding');\n\nclass Notes extends Component {\n\n    //to get the notes from the DB if any\n    async componentDidMount() {\n      const isLoggedIn = await API.isLoggedIn(()=>{});\n      if (isLoggedIn) {\n        await API.isLoggedIn(e => this.setState({\n          userLoggedIn: true,\n          UserName : e.data.userName,\n          city : e.data.city,\n          province: e.data.province,\n          county: e.data.county\n        }))\n        const PrevNotes = [...this.state.notes];\n        const DBNotes = await API.GetNote();\n        const MergedNotes = DBNotes.data.concat(PrevNotes);\n          GeoCode( this.state.city ,this.state.province ,this.state.country ,Callback =>{\n            if(!Callback.latitude || !Callback.longitude){\n                return console.log({error: 'please enter an address'})\n            }\n            foreCast(Callback.latitude , Callback.longitude , (error, foreCastData, WeatherIcon, Location)=>{\n                this.setState({Weather : foreCastData, WeatherIcon: WeatherIcon})\n            })\n          })\n        return this.setState({ notes: MergedNotes});\n      }  \n    }\n    state = {\n        notes: [],\n        isLogOut: false,\n        ChangetitleClicked: true,\n        ChangeContentClicked:true,\n        UserName: \"Welcome Guest\",\n        city:\"\",\n        province:\"\",\n        county:\"\",\n        Weather: \"\",\n        WeatherIcon: \"\",\n        userLoggedIn: false\n      };\n    //Close is not hovered on color style\n    VisibilityStle1 = {\n        marginRight: \"8px\",\n        fontSize: \"22px\",\n        color: this.props.Color.NavIconColor,\n      };\n    \n    /*************************************************** Adding Notes *****************************************************************************/\n    addNote = (note) => {\n      const prevNote = [...this.state.notes];\n      prevNote.unshift(note);\n      this.setState({ notes: prevNote });\n    };\n    /*************************************************** Deleting Notes *****************************************************************************/\n    deleteNote = (id) => {\n      const Delete = [...this.state.notes];\n      Delete.splice(id, 1);\n      this.setState({ notes: Delete });\n      if (!this.state.isLogOut) {\n        API.DeleteNote(id)\n      }\n    };\n    /*************************************************** Changing Notes *****************************************************************************/\n    onChangeTitle = (id, newTitle) => {\n      var OldContent = \"\"\n      const newNoteTitle = [...this.state.notes].filter((NoteId, index) => {\n          if (!this.state.isLogOut && NoteId['_id'] == id) {OldContent = NoteId.content}\n          return( !this.state.isLogOut ? NoteId['_id'] == id : index === id)\n        })[0];\n      if (newNoteTitle) {\n          newNoteTitle.title = newTitle;\n          const newNotes = [...this.state.notes];\n          newNotes[id] = newNoteTitle;\n          this.setState({ notes: newNotes });\n          if (!this.state.isLogOut) {\n            API.UpdateNote(id, newTitle, OldContent)\n          }\n        }\n    };\n    onChangeContent = (id, newContent) => {\n      var OldTitle = \"\"\n      const newNoteContent = [...this.state.notes].filter((NoteId, index) => {\n          if (!this.state.isLogOut && NoteId['_id'] == id) {OldTitle = NoteId.title}\n          return !this.state.isLogOut ? NoteId['_id'] == id : index === id;\n        })[0];\n      if (newNoteContent) {\n          newNoteContent.content = newContent;\n          const newNotes = [...this.state.notes];\n          newNotes[id] = newNoteContent;\n          this.setState({ notes: newNotes });\n          if (!this.state.isLogOut) {\n            API.UpdateNote(id, OldTitle, newContent)\n          }\n        }\n    };\n    /*************************************************** The Note *****************************************************************************/\n    NoteItems = () => { \n      return [...this.state.notes].map((eachItem, i) => { \n        const id_Value = !this.state.isLogOut ? eachItem['_id'] : i\n        return (\n            <Note\n              isTitleValue={this.state.ChangetitleClicked}  \n              isContent={this.state.ChangeContentClicked}  \n              NumberOfLitters={this.state.titleRowsNumber}\n              RecieveColor={this.props.Color}\n              key={i}\n              id={id_Value}\n              title={eachItem.title}\n              content={eachItem.content}\n              onDelete={this.deleteNote}\n              ChangeTitle={this.onChangeTitle}\n              ChangeContent={this.onChangeContent}\n            />\n        );\n      });\n    };\n\n  /*************************************************** The Note Route *****************************************************************************/\n  render() {\n    return (\n      <div style={{ height: \"100%\" }}> \n        <div style={{zIndex: \"7\", position: \"sticky\" }}>\n        <Nav\n          username={this.state.UserName}\n          ColorChanged={this.props.colorchanged}\n          RecieveColor={this.props.Color}\n          showLogOutButton={true}\n          isShowLogOutButton={(value) => this.setState({ isLogOut: value })}\n          ShowLogOutButtonValue={this.state.isLogOut}  \n          inCalendar={true}\n          inNotes={false}\n          WeatherMessage={this.state.Weather}\n          WeatherIcon={this.state.WeatherIcon}\n        />\n        </div>\n        <FadeIn>\n          <CreateNote\n            isLoggedIn={this.state.userLoggedIn}\n            RecieveColor={this.props.Color}\n            AddedNote={this.addNote}\n            TitleLitterNumber={(value) => this.setState({titleRowsNumber: value})}\n          />\n        </FadeIn>\n            <div style={{ height: \"70%\", overflow: \"auto\", paddingLeft: \"56px\"}}>\n                {this.NoteItems()}\n            </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Notes;\n","import React from \"react\";\nimport HoverContainer from \"../../../UI/Modal\";\nimport FadeIn  from 'react-fade-in';\nimport styled from \"styled-components\";\n\nconst EachateContainer = styled.div`\n    width: 460px;\n    display: flex;\n    flex-direction: row;\n    justify-content: ${props => props.JustifyContentCalue};\n    margin: 4px;\n`\nconst TitleStyle = styled.span`\n  padding: 4px ;\n  fontSize: 1.2em;\n  margin-right: 8px;\n  color: ${props => props.Coloring};\n`\n\nconst HoverForm = (props) => { \n    const Title = <FadeIn>\n            <EachateContainer JustifyContentCalue={\"\"}>\n            <TitleStyle style={{marginLeft: \"4px\"}}Coloring={props.ScheduleColor.IconC}>Title : </TitleStyle> \n                <div style={{\n                    width: \"400px\",\n                    fontSize: \"1.2em\", \n                    wordWrap: \"break-word\",\n                    padding: \"5px\",\n                    height: \"30px\",\n                    borderRadius: \"7px\",\n                    border:\"solid\",\n                    marginLeftValue:\"4px\",\n                    borderWidth:\"thin\",\n                    color: `${props.ScheduleColor.TextAreaFC}`,\n                    backgroundColor: `${props.ScheduleColor.TextAreaBGC}`,\n                    borderColor:  `${props.ScheduleColor.BorderColor}`,\n                }}>\n                    <FadeIn>{ props.isTitle}</FadeIn>\n                </div>\n            </EachateContainer>\n        </FadeIn>\n        \n    const Time = <FadeIn>\n            <EachateContainer JustifyContentCalue={\"\"}>\n            <TitleStyle Coloring={props.ScheduleColor.IconC}>Start : </TitleStyle> \n                <div style={{\n                    width: \"400px\",\n                    fontSize: \"1.2em\", \n                    wordWrap: \"break-word\",\n                    padding: \"5px\",\n                    height: \"30px\",\n                    borderRadius: \"7px\",\n                    border:\"solid\",\n                    borderWidth:\"thin\",\n                    color: `${props.ScheduleColor.TextAreaFC}`,\n                    backgroundColor: `${props.ScheduleColor.TextAreaBGC}`,\n                    borderColor:  `${props.ScheduleColor.BorderColor}`,\n                }}>\n                    <FadeIn>{ props.isStart}</FadeIn>\n                </div>\n            </EachateContainer>\n        </FadeIn>\n\n    const HoverTitleInfo = <HoverContainer\n        position={\"relative\"}\n        width={\"500px\"} \n        padding={\"7px\"}\n        boxShadowValue={\"0 1px 5px rgb(138, 137, 137)\"}\n        borderRadiusValue={\"30px\"}\n        resizeValue={\"both\"}\n        backGroundColorValue={props.ScheduleColor.NotekBGC}\n        FontColorValue={props.ScheduleColor.NoteFC}\n    >\n        {Title}\n        {Time}\n    </HoverContainer>\n\n    return <FadeIn>{HoverTitleInfo}</FadeIn>\n}\n\nexport default HoverForm;","import React from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport { LoginOutlined } from \"@ant-design/icons\";\nimport Button from \"../../../../UI/Button\";  \n\nconst EditButton = (props) => {\n  const ButtonIconColor = {\n    color: props.ColorChange.IconC,\n    fontSize: \"20px\",\n    marginRight: \"9px\",\n    marginTop: \"4px\",\n  };   \n\n  const SubmitButton = (\n    <FadeIn>\n      <Button\n        width={\"120px\"}\n        marginBottomValue={\"10px\"}\n        marginLeftValue={\"100px\"}\n        fontSizeValue={\"20px\"}\n        borderRadiusValue={\"15px\"}\n        IsCalledValue={\"hover\"}\n        BorderValue=\"solid\"\n        borderWidthValue=\"thin\"\n        paddingInputValue=\"2px\"\n        onClick={()=>props.isEditClicked(true)}\n        text={\"Edit\"}\n        icon={<LoginOutlined style={ButtonIconColor} />}\n      />\n    </FadeIn>\n  );\n\n\n  return SubmitButton;\n};\n\nexport default EditButton;\n","import React, { useState } from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport { DeleteFilled } from \"@ant-design/icons\";\nimport Button from \"../../../../UI/Button\";  \nimport API from \"../../../../API/API\";\n\nconst DeleteButton = (props) => {\n  const ButtonIconColor = {\n    color: props.ColorChange.IconC,\n    fontSize: \"20px\",\n    marginRight: \"9px\",\n    marginTop: \"4px\",\n  };   \n  \nconst DeleteButton = () => { \n    const id = props.IDofClickedEvent //the Event id\n    const Delete = props.EventsInfoList  //copy the Events list\n    if (props.isLoggedIn) {\n      API.DeleteEvents(id);\n    }\n    props.ReturnNewEvents(Delete.filter(Event => (Event.id !== id) ))\n    props.CloseModel(true)\n  };\n\n  const SubmitDeleteButton = (\n    <FadeIn>\n      <Button\n        width={\"120px\"}\n        marginBottomValue={\"10px\"}\n        marginLeftValue={\"10%\"}\n        fontSizeValue={\"20px\"}\n        borderRadiusValue={\"15px\"}\n        IsCalledValue={\"hover\"}\n        BorderValue=\"solid\"\n        borderWidthValue=\"thin\"\n        paddingInputValue=\"2px\"\n        onClick={DeleteButton}\n        text={\"Delete\"}\n        icon={<DeleteFilled style={ButtonIconColor} />}\n      />\n    </FadeIn>\n  );\n\n\n  return SubmitDeleteButton;\n};\n\nexport default DeleteButton;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport UserInput from '../../../../UI/UserInput'\nimport TextArea from '../../../../UI/TextArea';\nimport FadeIn  from 'react-fade-in';\nimport { LinkOutlined} from \"@ant-design/icons\";\nimport { Title } from '@material-ui/icons';\nimport DescriptionIcon from '@material-ui/icons/Description';\nconst InfoContainer = styled.div`\n    width: 440px;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    margin: 4px;\n    margin-bottom: 10px;\n`\n\nconst TitleContainer = (props) => {\n    const IconColor = { \n        color : props.ScheduleColor.IconC, \n        fontSize:\"25px\", \n        marginRight:\"15px\", \n        marginTop:\"4px\" \n    } \n    const [RecievedTitle, ChangeRecievedTitle] = useState(props.isEditTitle)\n    const [isChangedValueTitle, changedValueTitle]= useState(false)\n    isChangedValueTitle ? props.SubmitTitle(RecievedTitle) : props.SubmitTitle(props.isEditTitle)\n\n    const TitleHandler = (event) => {\n        changedValueTitle(true)\n        ChangeRecievedTitle(event.target.value)\n    }\n    const title = <InfoContainer>\n        <FadeIn><Title style={IconColor}/></FadeIn>\n        <FadeIn><UserInput \n        key={`title` + 1}\n        InputValue = {RecievedTitle}\n        // This is to change the Value of Title based on the input coming from schedule\n        onchangeValue={TitleHandler} \n        name=\"title\"\n        inputType={\"text\"} \n        widthValue={\"425px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={\"FOCUS\"} \n        borderRadiusValue= {\"7px\"}\n        backGroundColorValue={props.ScheduleColor.UserInputBGC}\n        FontColorValue={props.ScheduleColor.UserInputFC}\n        PlaceHolderColorValue={props.ScheduleColor.UserInputPHC}\n        borderColorValue={props.ScheduleColor.BorderColor}  \n        BorderValue={\"solid\"}\n        borderWidthValue=\"thin\"\n        marginRightValue={\"10px\"}\n        /></FadeIn>\n    </InfoContainer>\n\n    return(title)\n}\n\nconst DescriptionContainer = (props) => {\n    const IconColor = { \n        color : props.ScheduleColor.IconC, \n        fontSize:\"25px\", \n        marginRight:\"15px\", \n        marginTop:\"4px\" \n    }\n    const [RecievedDescription, ChangeRecievedDescription] = useState(props.isEditDescription)\n    const [isChangedValueDescription, changedValueDescription]= useState(false)\n    isChangedValueDescription ? props.SubmitDescription(RecievedDescription) : props.SubmitDescription(props.isEditDescription)\n    const DescriptionHandler = (event) => {\n        changedValueDescription(true)\n        ChangeRecievedDescription(event.target.value)\n    }\n    const Description = <InfoContainer>\n        <FadeIn><DescriptionIcon style={IconColor}/></FadeIn>\n        <FadeIn><TextArea\n        key={`Description`+1} \n        InputValue = {RecievedDescription}\n        // This is to change the Value of Title based on the input \n        onchangeValue={DescriptionHandler} \n        rows={3}\n        name=\"Description\"\n        inputType={\"text\"} \n        widthValue={\"425px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={\"FOCUS\"} \n        borderRadiusValue= {\"7px\"}\n        backGroundColorValue={props.ScheduleColor.UserInputBGC}\n        FontColorValue={props.ScheduleColor.UserInputFC}\n        PlaceHolderColorValue={props.ScheduleColor.UserInputPHC}\n        borderColorValue={props.ScheduleColor.BorderColor}  \n        BorderValue={\"solid\"}\n        resizeValue={\"vertical\"}\n        borderWidthValue=\"thin\"\n        marginRightValue={\"10px\"}\n        /></FadeIn>\n    </InfoContainer>\n\n\n    return (Description)\n}\n\nconst URLContainer = (props) => {\n    const IconColor = { \n        color : props.ScheduleColor.IconC, \n        fontSize:\"25px\", \n        marginRight:\"15px\", \n        marginTop:\"4px\" \n    }\n    const [RecievedURL, ChangeRecievedURL] = useState(props.isEditURL)\n    const [isChangedValueURL, changedValueURL]= useState(false)\n    isChangedValueURL ? props.URLOption(RecievedURL) : props.URLOption(props.isEditURL)\n    const URLHandler = (event) => {\n        changedValueURL(true)\n        ChangeRecievedURL(event.target.value)\n    }\n    const URL = <InfoContainer>\n        <FadeIn><LinkOutlined style={IconColor}/></FadeIn>\n        <FadeIn><UserInput \n        key={`AttachedLinkDescription` }\n        InputValue = {RecievedURL}\n        // This is to change the Value of Title based on the input \n        onchangeValue={URLHandler} \n        name=\"Url\"\n        inputType={\"text\"} \n        widthValue={\"425px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={\"FOCUS\"} \n        borderRadiusValue= {\"7px\"}\n        backGroundColorValue={props.ScheduleColor.UserInputBGC}\n        FontColorValue={props.ScheduleColor.UserInputFC}\n        PlaceHolderColorValue={props.ScheduleColor.UserInputPHC}\n        borderColorValue={props.ScheduleColor.BorderColor}    \n        BorderValue={\"solid\"}\n        borderWidthValue=\"thin\"\n        marginRightValue={\"10px\"}\n        /></FadeIn>\n    </InfoContainer>\n\n\n    return (URL)\n}\n\nexport  {TitleContainer, DescriptionContainer, URLContainer};","import React, { useState } from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport SelectData from \"../../../UI/Select\";\nimport { HourValue, MinutsValue, TwelveHourSystemValue } from \"./OptionsForm\";\nimport { createEventId } from \"../event-utils\"; \n\nconst OptionForm = (props) => {\n\n  const [HourClicked, ChangeHourClicked]= useState(false)\n  const [HourValueInput, ChangeHourValue] = useState(\"12\");\n  const handle = (e) => {\n    props.name === \"StartingTime\" ? props.ChangeSTimeClicked(true) : props.ChangeETimeClicked(true)\n    ChangeHourValue(e.target.value)\n    ChangeHourClicked(!HourClicked)\n  };\n  const Hours = (\n    <FadeIn>\n      <SelectData\n        key={HourValueInput.id + createEventId()}\n        inputType={\"text\"}\n        name=\"title\"\n        widthValue={\"112px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={\"FOCUS\"}\n        borderRadiusValue={\"7px\"}\n        backGroundColorValue={props.RecievedColor.UserInputBGC}\n        FontColorValue={props.RecievedColor.UserInputFC}\n        PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\n        borderColorValue={props.RecievedColor.BorderColor}\n        BorderValue={\"solid\"}\n        borderWidthValue={\"thin\"}\n        marginRightValue={\"15px\"}\n        onchangeValue={handle}\n        InputValue={HourValueInput}\n      >\n        {\n          <HourValue />\n        }\n      </SelectData>\n    </FadeIn>\n  );\n\n  const [MinutsClicked, ChangeMinutsClicked] = useState(false)\n  const [MinutsValueInput, ChangeMinutsValue] = useState((props.name===\"EndingTime\") ? \"30\" : \"00\");\n  const handleMinuts = (e) => {\n    props.name === \"StartingTime\" ? props.ChangeSTimeClicked(true) : props.ChangeETimeClicked(true)\n    ChangeMinutsValue(e.target.value)\n    ChangeMinutsClicked(!MinutsClicked)\n  };\n  const Minuts = (\n    <FadeIn>\n      <SelectData\n        key={MinutsValueInput.id + createEventId()}\n        inputType={\"text\"}\n        name=\"title\"\n        widthValue={\"112px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={\"FOCUS\"}\n        borderRadiusValue={\"7px\"}\n        backGroundColorValue={props.RecievedColor.UserInputBGC}\n        FontColorValue={props.RecievedColor.UserInputFC}\n        PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\n        borderColorValue={props.RecievedColor.BorderColor}\n        BorderValue={\"solid\"}\n        borderWidthValue={\"thin\"}\n        marginRightValue={\"15px\"}\n        onchangeValue={handleMinuts}\n        InputValue={MinutsValueInput}\n      >\n        {\n          <MinutsValue />\n        }\n      </SelectData>\n    </FadeIn>\n  );\n\n  const [DayTimeClicked, ChangeDayTimeClicked]= useState(false)\n  const [DaytimeValueInput, ChangeDaytimeValue] = useState(\"AM\");\n  const handleDaytime = (e) => {\n    props.name === \"StartingTime\" ? (props.ChangeSTimeClicked(true)) : (props.ChangeETimeClicked(true))\n    ChangeDaytimeValue(e.target.value)\n    ChangeDayTimeClicked(!DayTimeClicked)\n  };\n  const DayTime = (\n    <FadeIn>\n      <SelectData\n        key={DaytimeValueInput.id + createEventId()}\n        inputType={\"text\"}\n        name=\"title\"\n        widthValue={\"112px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={\"FOCUS\"}\n        borderRadiusValue={\"7px\"}\n        backGroundColorValue={props.RecievedColor.UserInputBGC}\n        FontColorValue={props.RecievedColor.UserInputFC}\n        PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\n        borderColorValue={props.RecievedColor.BorderColor}\n        BorderValue={\"solid\"}\n        borderWidthValue={\"thin\"}\n        marginRightValue={\"15px\"}\n        onchangeValue={handleDaytime}\n        InputValue={DaytimeValueInput}\n      >\n        {\n          <TwelveHourSystemValue />\n        }\n      </SelectData>\n    </FadeIn>\n  );\n\n  props.submitHourValue(HourClicked ? HourValueInput : \"12\");\n  props.submitMinutsValue(MinutsValueInput ? MinutsValueInput : \"00\");\n  props.submitDayValue(DayTimeClicked ? DaytimeValueInput : \"AM\");\n   \n  return [Hours, Minuts, DayTime];\n};\nexport default OptionForm;","import React, { useState } from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport SelectData from \"../../../UI/Select\";\nimport {\n  NumberOfYearsValue,\n  NumberOfMonthsValue,\n  NumberOfDaysValue,\n} from \"./OptionsForm\";\nimport { createEventId } from \"../event-utils\";\n\nconst DateSelected = (props) => {\n  // This part is changed once the user click on the drop down to see other options\n  const [GetUserChangeDay, ChnageUserChangedDay] = useState(true);\n  /*\n        This part is chicking if the input that the user entered is what is wanted or not \n        Once the select is clicked then it will change to normal dropdown with input number \n    */\n  const [DayValueInput, ChangeDayValue] = useState(\n      GetUserChangeDay\n        ?( props.ReturnFrom === \"From\"\n          ? props.ReturnClickedFromDay\n          : props.ReturnClickedToDay)\n        : \"\"\n    );\n  const [isChangedValueDay, changedValueDay] = useState(false); \n  const handleDays = (e) => (\n    ChangeDayValue(e.target.value), ChnageUserChangedDay(false), changedValueDay(true)\n  );\n  const Days = (\n    <FadeIn>\n      <SelectData\n        key={DayValueInput.id  + createEventId()}\n        InputValue={DayValueInput}\n        inputType={\"text\"}\n        name={props.name == \"start\" ? \"start\" : \"end\"}\n        widthValue={\"112px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={props.DisabledisClicked ? \"\" : \"FOCUS\"}\n        borderRadiusValue={\"7px\"}\n        backGroundColorValue={props.RecievedColor.UserInputBGC}\n        FontColorValue={props.RecievedColor.UserInputFC}\n        PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\n        borderColorValue={props.RecievedColor.BorderColor}\n        BorderValue={\"solid\"}\n        borderWidthValue={\"thin\"}\n        marginRightValue={\"15px\"}\n        onchangeValue={handleDays}\n      >\n        {\n          <NumberOfDaysValue/>\n        }\n      </SelectData>\n    </FadeIn>\n  );\n   \n  // This part is changed once the user click on the drop down to see other options\n  const [GetUserChangeMonth, ChnageUserChangedMonth] = useState(true);\n  /*\n  This part is chicking if the input that the user entered is what is wanted or not \n  Once the select is clicked then it will change to normal dropdown with input number \n  */\n const[MonthValueInput, ChangeMonthValueInput] = useState(\n   GetUserChangeMonth\n    ? (props.ReturnFrom === \"From\"\n        ? props.ReturnClickedFromMonth\n        : props.ReturnClickedToMonth)\n        : \"\")\n  const [isChangedValueMonth, changedValueMonth] = useState(false); \n  const handleMonths = (e) => (\n    ChangeMonthValueInput(e.target.value),\n    ChnageUserChangedMonth(false),\n    changedValueMonth(true)\n    )\n    \n  const Months = (\n    <FadeIn>\n      <SelectData\n        key={MonthValueInput + createEventId()}\n        InputValue={MonthValueInput}\n        inputType={\"text\"}\n        name={props.name == \"start\" ? \"start\" : \"end\"}\n        widthValue={\"112px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={props.DisabledisClicked ? \"\" : \"FOCUS\"}\n        borderRadiusValue={\"7px\"}\n        backGroundColorValue={props.RecievedColor.UserInputBGC}\n        FontColorValue={props.RecievedColor.UserInputFC}\n        PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\n        borderColorValue={props.RecievedColor.BorderColor}\n        BorderValue={\"solid\"}\n        borderWidthValue={\"thin\"}\n        marginRightValue={\"15px\"}\n        onchangeValue={handleMonths}\n      >\n        {<NumberOfMonthsValue />}\n      </SelectData>\n    </FadeIn>\n  );\n  \n  //This part is changed once the user click on the drop down to see other options\n  const [GetUserChangeYear, ChnageUserChangedYear] = useState(true);\n  /*\n        This part is chicking if the input that the user entered is what is wanted or not \n        Once the select is clicked then it will change to normal dropdown with input number \n    */\n  const [YearsValueInput, ChangeYearsValueInput] = useState(\n    GetUserChangeYear\n      ?( props.ReturnFrom === \"From\"\n        ? props.ReturnClickedFromYear\n        : props.ReturnClickedToYear)\n      : \"\"\n    );\n  const [isChangedValueYear, changedValueYear]= useState(false)\n  const handleYears = (e) => (\n    ChangeYearsValueInput(e.target.value) , \n    ChnageUserChangedYear(false),\n    changedValueYear(true)\n    )\n  const Years = (\n    <FadeIn>\n      <SelectData\n        key={YearsValueInput + createEventId()}\n        InputValue={YearsValueInput}\n        value=\"as\"\n        PlaceholderValue=\"asdfas\"\n        inputType={\"text\"}\n        name={props.name == \"start\" ? \"start\" : \"end\"}\n        widthValue={\"112px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={\"FOCUS\"}\n        borderRadiusValue={\"7px\"}\n        backGroundColorValue={props.RecievedColor.UserInputBGC}\n        FontColorValue={props.RecievedColor.UserInputFC}\n        PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\n        borderColorValue={props.RecievedColor.BorderColor}\n        BorderValue={\"solid\"}\n        borderWidthValue={\"thin\"}\n        marginRightValue={\"15px\"}\n        onchangeValue={handleYears}\n      >\n        {\n          <NumberOfYearsValue/>\n        }\n      </SelectData>\n    </FadeIn>\n  );\n  \n  //this is submitted to DropDownContainer\n  const ReturnYear = (isChangedValueYear ? YearsValueInput : \n                      (props.ReturnFrom === \"From\"\n                        ? \n                        props.ReturnClickedFromYear\n                        : \n                        props.ReturnClickedToYear))\n  const ReturnMonth = (isChangedValueMonth ? MonthValueInput : \n                      (props.ReturnFrom === \"From\"\n                        ? \n                        props.ReturnClickedFromMonth\n                        : \n                        props.ReturnClickedToMonth))\n  const ReturnDay = (isChangedValueDay ? DayValueInput : \n                      (props.ReturnFrom === \"From\"\n                        ? \n                        props.ReturnClickedFromDay\n                        : \n                        props.ReturnClickedToDay))\n  props.submitDateValue(ReturnYear + \"-\" + ReturnMonth + \"-\" + ReturnDay);\n\n  return [Years, Months, Days];\n};\n\nexport default DateSelected;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\"; \nimport FadeIn  from 'react-fade-in'; \nimport {\n  CalendarOutlined,\n  CloseOutlined,\n  ClockCircleOutlined,\n} from \"@ant-design/icons\"; \nimport TimeSelected from '../../DataCollection/TimeSelected';\nimport DateSelected from '../../DataCollection/DateSelected';\nimport { CheckCircleFilled } from \"@ant-design/icons\";\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\n\nconst InfoContainer = styled.div`\n    width: 440px;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    margin: 4px;\n    margin-bottom: 14px;\n`\nconst EachateContainer = styled.div`\n    width: 400px;\n    display: flex;\n    flex-direction: row;\n    justify-content: ${props => props.JustifyContentCalue};\n    margin: 4px;\n    margin-left: ${props => props.MarginLeft ? props.MarginLeft : null }\n`\nconst DateContainer = styled.div`\n    width: 400px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n`\nconst CalenderContianer = (props) => {\n    //DateStyle and unDateStyle color style \n    const ShowDateStle = {\n        marginRight: \"4px\", \n        marginLeft:\"51px\",\n        marginTop:\"7px\" , \n        fontSize: \"18px\", \n        color : props.ScheduleColor.IconC\n    }\n    //All Component Color Stle\n    const IconColor = { \n        color : props.ScheduleColor.IconC, \n        fontSize:\"25px\", \n        marginRight:\"15px\", \n        marginTop:\"4px\" \n    }\n    \n    // This is a togole to change the state of the disabled and to change the icion as well \n    const InconArea = <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-start\"}}>\n            <FadeIn><CalendarOutlined style={IconColor}/> </FadeIn> \n        </div>\n\n    //This is for the layout for Year Month Days  \n    const [isSelectedDate, ChangeSelectedDate]= useState(true)\n    props.GetIsSelectedDate(isSelectedDate)\n    const ChangeSelectedData= isSelectedDate ?  \n        <RadioButtonUncheckedIcon \n            onClick={()=>ChangeSelectedDate(false)}\n            style={ShowDateStle}\n        /> \n        : \n        <CheckCircleFilled \n            onClick={()=>ChangeSelectedDate(true)}\n            style={ShowDateStle} \n        />\n    //This is to switch between The selected date and the date that the user want to change \n    const isData = <EachateContainer> \n            {ChangeSelectedData}\n           { isSelectedDate ? \n                <span style={{paddingTop: \"7px\" ,fontSize: \"1em\", marginLeft: \"5px\"}}> Chick to Change Selected Date of Event</span>\n                :\n                <span style={{paddingTop: \"7px\" ,fontSize: \"1em\", marginLeft: \"5px\"}}> Chick to Retun to Selected Date of Event</span>}\n        </EachateContainer>\n    //Starting Data Area\n    const RecieveFromDate = props.PassIsStartedYear + \"-\" + props.PassIsStartedMonth + \"-\" + props.PassIsStartedDay\n    const [fromData, ChangeFromDate] = useState(\"\") \n    const StartingData = <EachateContainer JustifyContentCalue={ \"\"}>\n            <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"1px\"}}>From</span></FadeIn>\n            { isSelectedDate ? <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"1px\", color:props.ScheduleColor.IconC}}>{props.SendSD}</span></FadeIn> \n                :\n                <DateSelected\n                //These are used to send these data to DataSlected to be used for Year, Month, Day \n                ReturnFrom=\"From\"\n                ReturnClickedFromDay={props.PassIsStartedDay} //passing the sliced date from Edit Event Form \n                ReturnClickedFromMonth={props.PassIsStartedMonth}  //passing the sliced date from Edit Event Form \n                ReturnClickedFromYear={props.PassIsStartedYear} //passing the sliced date from Edit Event Form \n                name=\"start\"\n                //The incoming dating is used to chagne the format of the date and then send that number to submission button\n                submitDateValue={(value) => ChangeFromDate(value)} \n                RecievedColor={props.ScheduleColor}\n                />\n            }\n        </EachateContainer>\n    \n    // End Data Area\n    const RecieveToDate = props.PassIsEndedYear + \"-\" + props.PassIsEndedMonth + \"-\" + props.PassIsEndedDay\n    const [ToData, ChangeToDate] = useState(\"\")\n    const EndingingData = <EachateContainer JustifyContentCalue={ \"\"}>\n            <FadeIn><span style={{  padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"25px\"}}>To</span></FadeIn>\n            { isSelectedDate ? <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"1px\", color:props.ScheduleColor.IconC }}>{props.SendED}</span></FadeIn> \n                :\n                <DateSelected\n                //These are used to send these data to DataSlected to be used for Year, Month, Day \n                ReturnFrom=\"To\"\n                ReturnClickedToDay={props.PassIsEndedDay}  //passing the sliced date from Edit Event Form \n                ReturnClickedToMonth={props.PassIsEndedMonth}   //passing the sliced date from Edit Event Form \n                ReturnClickedToYear={props.PassIsEndedYear}  //passing the sliced date from Edit Event Form \n                name=\"end\"\n                //The incoming dating is used to chagne the format of the date and then send that number to submission button\n                submitDateValue={(value) => ChangeToDate(value)} \n                RecievedColor={props.ScheduleColor}\n            />\n            }\n        </EachateContainer>\n    \n    //This is the returned Date to the calendar\n    const calendar = <InfoContainer>\n            {InconArea}\n            <DateContainer> \n                {isData}\n                {StartingData}\n                {EndingingData}\n            </DateContainer>\n        </InfoContainer>\n\n    //To recieve a prop that will change the value from and to inside the schedule form to the value of From/to Date that has been created here  \n    props.GetFromDate(isSelectedDate ? RecieveFromDate : fromData); //Return either the selected data from the calendar form or the changed data by the user\n    props.GetToDate(isSelectedDate ? RecieveToDate : ToData); //Return either the selected data from the calendar form or the changed data by the user\n    \n    return(calendar)\n}\n\nconst TimerContainer = (props) => {\n    //All Component Color Stle\n    const IconColor = { \n        color : props.ScheduleColor.IconC, \n        fontSize:\"25px\", \n        marginRight:\"15px\", \n        marginTop:\"4px\"\n    }\n    //DateStyle and unDateStyle color style \n    const ShowDateStle = {\n        marginRight: \"4px\", \n        marginLeft:\"51px\",\n        marginTop:\"7px\" , \n        fontSize: \"18px\", \n        color : props.ScheduleColor.IconC\n    }\n    //Visable and unvisable color style \n    const VisibilityStle = {\n        marginRight: \"4px\", \n        marginLeft:\"4px\",\n        marginTop:\"7px\" , \n        fontSize: \"18px\", \n        color : props.ScheduleColor.IconC\n    }\n    const InValidStyle = {\n        color : \"red\", \n        fontSize:\"17px\",  \n        marginLeft: \"55px\",\n        marginRight: \"5px\",\n    } \n\n    \n    const [isShowTime, ChangeisShowTime] = useState(true) //to show the option to change the Time that the user selected\n    //this is the part where we change the icon based on clicking the div \n    const ShowData = <FadeIn>\n        {isShowTime ?  null : \n            <CheckCircleFilled \n                onClick={()=>ChangeisShowTime(true)}\n                style={VisibilityStle} />} \n        </FadeIn>\n    const IcionArea = <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-start\"}}>\n            <FadeIn><ClockCircleOutlined style={IconColor}/>  </FadeIn>\n            <FadeIn>{ShowData}</FadeIn>\n        </div>\n    const isDefulatTime = \n        <DateContainer>\n            <FadeIn>\n                <EachateContainer>\n                    {isShowTime ? <RadioButtonUncheckedIcon onClick={()=>ChangeisShowTime(false)} style={ShowDateStle}/> : null} \n                    <span style={{paddingTop: \"6px\" ,fontSize: \"1em\", marginLeft: \"5px\"}}>By defualt the time set to 12 pm </span> \n                </EachateContainer>\n            </FadeIn>\n            <FadeIn><span style={{paddingBottom: \"4px\" ,fontSize: \"1em\", marginLeft: \"60px\"}}>Click the Circle to choose certain time</span></FadeIn>\n        </DateContainer>\n\n        //This is for the layout for Hour Minuts Day system\n        const InfoArea = (isShowTime ? \n            isDefulatTime\n            :\n            <EachateContainer JustifyContentCalue={\"space-between\" }>\n                        <FadeIn ><span style={{ padding: \"1px\" ,paddingTop: \"1px\" , fontSize: \"1.2em\", marginRight: \"1px\"}}> </span></FadeIn> \n                        <FadeIn ><span style={{ padding: \"1px\" ,paddingTop: \"1px\" , fontSize: \"1.2em\", marginRight: \"1px\"}}>{\"Hour\"}</span></FadeIn> \n                        <FadeIn ><span style={{ padding: \"1px\" ,paddingTop: \"1px\" , fontSize: \"1.2em\", marginRight: \"1px\"}}>{\"Minuts\"}</span></FadeIn> \n                        <FadeIn ><span style={{ padding: \"1px\" ,paddingTop: \"1px\" , fontSize: \"1.2em\", marginRight: \"1px\"}}>{\"AM / PM\"}</span></FadeIn> \n            </EachateContainer>\n        );\n\n    //collection of stating time for event\n    const [StartHoursValue, ChangeStartHourValue ]= useState() //save the Starting Hour\n    const [StartMinutsValue, ChangeStartMinutsValue ]= useState() //save the starting Minuts\n    const [StartDayValue, ChangeStartDayValue ]= useState() //save starting if it is AM or PM\n    const [STimeClicked, ChangeSTimeClicked]= useState(false)\n    props.STCValue(STimeClicked)\n\n    const StartingTime = isShowTime ? null : <EachateContainer JustifyContentCalue={\"space-between\" }>\n            <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"5px\"}}>Start</span></FadeIn>\n            <TimeSelected \n                name={\"StartingTime\"}\n                ChangeSTimeClicked={(value) => ChangeSTimeClicked(value)}\n                submitHourValue={(value) => ChangeStartHourValue(value)}\n                submitMinutsValue={(value) => ChangeStartMinutsValue(value)}\n                submitDayValue={(value) => ChangeStartDayValue(value)}\n                RecievedColor={props.ScheduleColor}\n                //this is to disable the values that are inside and it is going to DataSelected\n                DisabledisClicked={isShowTime} \n                />\n        </EachateContainer>\n    \n    //collection of ending time for event\n    const [EndHoursValue, ChangeEndHourValue ]= useState() //save the Ending Hour\n    const [EndMinutsValue, ChangeEndMinutsValue ]= useState() //save the Ending Minuts\n    const [EndDayValue, ChangeEndDayValue ]= useState() //save Ending if it is AM or PM\n    const [ETimeClicked, ChangeETimeClicked]= useState(false)\n    props.ETCValue(ETimeClicked)\n    \n    const inValidET= props.ETValidationValue //this is for only if the ending time is not bigger than starting time \n    var inValidEndingTime = inValidET ? null : \"Please Change the Time value to be valid\"\n    const inValidEndInput =  <InfoContainer>\n            {inValidET ? null : <FadeIn><CloseOutlined style={InValidStyle}/></FadeIn>}\n            <FadeIn><span style={{\n                color: inValidET ? \"#22e822\" : \"red\", \n                textAlign: \"center\",  \n                fontSize: \"17px\",\n                fontFamily: \"Arial\"\n            }}\n            >{inValidEndingTime}</span></FadeIn>\n        </InfoContainer> \n    \n    const EndingTime = isShowTime ? null :<DateContainer> <EachateContainer  MarginLeft={\"10px\"}  JustifyContentCalue={\"space-between\" }>\n                <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"5px\"}}>End</span></FadeIn>\n                <TimeSelected \n                    submitHourValue={(value) => ChangeEndHourValue(value)}\n                    submitMinutsValue={(value) => ChangeEndMinutsValue(value)}\n                    submitDayValue={(value) => ChangeEndDayValue(value)}\n                    RecievedColor={props.ScheduleColor}\n                    //this is to disable the values that are inside and it is going to DataSelected\n                    DisabledisClicked={isShowTime} \n                    />\n            </EachateContainer>\n            {inValidEndInput}\n        </DateContainer>\n\n    const time = (\n      <InfoContainer>\n        {IcionArea}\n        <DateContainer> \n            {InfoArea}\n          {StartingTime}\n          {EndingTime}\n        </DateContainer>\n      </InfoContainer>\n    );\n\n    props.FromHourSelected(STimeClicked ? (StartDayValue === \"PM\" ? String(parseInt(StartHoursValue,10) + 12) : StartHoursValue): \"12\") //this where we convert the returned hour from 12 hour system to 24 hour system \n    props.FromMinutsSelected(STimeClicked ? StartMinutsValue : \"00\")\n    props.ToHourSelected(STimeClicked ? (EndDayValue === \"PM\" ? String(parseInt(EndHoursValue,10) + 12) : EndHoursValue): \"30\") //this where we convert the returned hour To 12 hour system to 24 hour system \n    props.ToMinutsSelected(STimeClicked ? EndMinutsValue : \"00\");\n    props.isTime(isShowTime) \n    return (time)\n}\n\nexport  {CalenderContianer, TimerContainer};","import React, { useState } from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport SelectData from \"../../../UI/Select\";\nimport { DisplayOption } from \"./OptionsForm\";\n\nconst DisplaySelection = (props) => {\n  const [DisplayOptionInput, ChangeDisplayOptionInput] = useState(\"list-item\");\n  props.ValueOfDisplayOption(DisplayOptionInput)\n  const handleDisplay = (e) => {\n    ChangeDisplayOptionInput(e.target.value);\n  };\n  const Colors = (\n    <FadeIn>\n      <SelectData\n        key={DisplayOptionInput.id + 1}\n        inputType={\"text\"}\n        name=\"title\"\n        widthValue={\"160px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={\"FOCUS\"}\n        borderRadiusValue={\"7px\"}\n        backGroundColorValue={props.RecievedColor.UserInputBGC}\n        FontColorValue={props.RecievedColor.UserInputFC}\n        PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\n        borderColorValue={props.RecievedColor.BorderColor}\n        BorderValue={\"solid\"}\n        borderWidthValue={\"thin\"}\n        marginRightValue={\"15px\"}\n        onchangeValue={handleDisplay}\n        InputValue={DisplayOptionInput}\n      >\n        {<DisplayOption />}\n      </SelectData>\n    </FadeIn>\n  );\n\n  return [Colors];\n};\n\nexport default DisplaySelection;\n","import React, {useState} from \"react\";\nimport styled from \"styled-components\"; \nimport FadeIn  from 'react-fade-in'; \nimport {BgColorsOutlined} from \"@ant-design/icons\"; \nimport DisplaySelected from '../../DataCollection/DisplaySelected';\n\n\nconst InfoContainer = styled.div`\n    width: 440px;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    margin: 4px;\n    margin-bottom: 10px;\n`\n\nconst DisplayContainer = (props) => {\n    \n    const [GetDisplayOption, CHnageDisplayOption] = useState()\n    props.SubmitDisplayOption(GetDisplayOption)\n    const FontColor = <InfoContainer>\n                <FadeIn>\n                    <BgColorsOutlined style={{fontSize:\"32px\",color : props.ScheduleColor.IconC,marginRight:\"9px\",marginTop:\"4px\"}}/>\n                </FadeIn>\n                <FadeIn>\n                    <DisplaySelected \n                        ValueOfDisplayOption={(value) => CHnageDisplayOption(value)}\n                        RecievedColor={props.ScheduleColor}\n                    />\n                </FadeIn>\n    </InfoContainer>\n\n    return(FontColor)\n}\nexport default DisplayContainer;","import React, { useState } from \"react\";\nimport FadeIn  from 'react-fade-in';\nimport Inputdata from '../../../UI/UserInput';\nimport { createEventId } from \"../event-utils\";\n\n\nconst RepeatDaySelected = (props) => {\n    const [NumberOfRepeatedDays,ChangeNumberOfRepeatedDays] = useState([]) \n    const [Days,changeDays] = useState({\n        Sunday: {id: \"0\", value: false},\n        Monday: {id: \"1\", value: false},\n        Tuesday: {id: \"2\", value: false},\n        Wednesday: {id: \"3\", value: false},\n        Thursday: {id: \"4\", value: false},\n        Friday: {id: \"5\", value: false},\n        Saturday: {id: \"6\", value: false}\n    })\n    const ChoosenDay = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'] \n    const handleRepeatedDays = (e) => {\n        const newDays = {...Days}\n        const onchangeValue = e.target.value\n        newDays[onchangeValue].value = !newDays[onchangeValue].value\n        changeDays(newDays)\n        //Returning the value of id of each day if it is clicked \n        ChangeNumberOfRepeatedDays(Object.values(Days).map(item => {\n            if (item.value) return item.id\n        }).filter(item => item))\n    }\n    \n    const RepeatedDayContainer = (DayValue,OnChangeInputValue) => {\n        return [<Inputdata \n            key={NumberOfRepeatedDays.id + createEventId()}\n            inputType={\"checkbox\"}\n            name=\"title\"\n            widthValue={\"20px\"}\n            paddingVale={\"2px\"}\n            outlineValue={\"none\"}\n            fontSizeValue={\"1.2em\"}\n            fontFamilyValue={\"inherit\"}\n            IsCalledValue={\"FOCUS\"} \n            borderRadiusValue= {\"7px\"}\n            backGroundColorValue={ props.RecievedColor.UserInputBGC}\n            FontColorValue={props.RecievedColor.UserInputFC}\n            PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\n            borderColorValue={props.RecievedColor.BorderColor} \n            BorderValue={\"solid\"}\n            borderWidthValue={\"thin\"}\n            marginRightValue={\"5px\"}\n            marginTopValue={\"4px\"}\n            checked={Days[DayValue].value}\n            onchangeValue = {OnChangeInputValue}\n            InputValue = {DayValue}\n            ></Inputdata>,\n            <label key={NumberOfRepeatedDays.id} style={{marginRight: \"10px\"}}>{DayValue}</label>]\n        }\n        \n    const LineOne = [RepeatedDayContainer(ChoosenDay[0],handleRepeatedDays),\n                     RepeatedDayContainer(ChoosenDay[1],handleRepeatedDays),\n                     RepeatedDayContainer(ChoosenDay[2],handleRepeatedDays),\n                     RepeatedDayContainer(ChoosenDay[3],handleRepeatedDays)]\n    const LineTwo = [RepeatedDayContainer(ChoosenDay[4],handleRepeatedDays),\n                     RepeatedDayContainer(ChoosenDay[5],handleRepeatedDays),\n                     RepeatedDayContainer(ChoosenDay[6],handleRepeatedDays)]\n    \n    props.ValueOfRepeatedDays(NumberOfRepeatedDays);\n    return (  \n    <FadeIn>\n        <div style={{display: \"flex\",width: \"50px\", flexDirection: \"row\"}}>\n             {LineOne} \n        </div>\n        <div style={{\n            display: \"flex\",\n            width: \"50px\", \n            flexDirection: \"row\", \n            marginTop: \"10px\", \n            marginLeft: \"70px\", \n            marginBottom: \"8px\"}}\n        >\n             {LineTwo} \n        </div>\n    </FadeIn>\n       )\n}\n\nexport default RepeatDaySelected;","import React, { useState } from \"react\";\nimport styled from \"styled-components\"; \nimport FadeIn  from 'react-fade-in';  \nimport RepeatIcon from '@material-ui/icons/Repeat'; \nimport RepeatDaySelected from '../../DataCollection/RepeatedDaysSelected';\n\n\nconst InfoContainer = styled.div`\n    width: 440px;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    margin: 4px;\n    margin-bottom: 10px;\n`\n\nconst RDContainer = (props) => {\n\n    const [GetNumberOfRD, ChangeGetNumberOfRD] = useState()\n    const IconColor = { \n        color : props.ScheduleColor.IconC, \n        fontSize:\"30px\", \n        marginRight:\"15px\", \n        marginTop:\"4px\"\n    }\n    props.SubmitNumberOfRP(GetNumberOfRD)\n    const RepeatedDays = (\n      <InfoContainer>\n        <FadeIn>\n          <RepeatIcon style={IconColor} />\n        </FadeIn>\n        <FadeIn>\n          <RepeatDaySelected \n            ValueOfRepeatedDays={(value) => ChangeGetNumberOfRD(value)}\n            RecievedColor={props.ScheduleColor}\n          />\n        </FadeIn>\n      </InfoContainer>\n    );\n\n    return (RepeatedDays)\n}\n\nexport default RDContainer;","import React, { useState } from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport { SendOutlined } from \"@ant-design/icons\";\nimport Button from \"../../../../UI/Button\";\nimport API from \"../../../../API/API\";\n\nconst submitChanges = (props) => {\n  const ButtonIconColor = {\n    color: props.ColorChange.IconC,\n    fontSize: \"20px\",\n    marginRight: \"9px\",\n    marginTop: \"4px\",\n  }  \n    //this is for validation that the ending time is after the starting time \n    const SDTHourValidation = props.RepeatOrData ? props.isStartingDate.toString().slice(11, 13) : props.isStartingTime.toString().slice(0, 2)\n    const SDTValue = parseInt(SDTHourValidation, 10)\n    const EDTHourValidation = props.RepeatOrData ? props.isEndingData.toString().slice(11, 13) : props.isEndingTime.toString().slice(0, 2)\n    const EDTValue = parseInt(EDTHourValidation, 10)\n    const SDTMinValidation = props.RepeatOrData ? props.isStartingDate.toString().slice(14, 16) : props.isStartingTime.toString().slice(3, 5)\n    const SDTMinValue = parseInt(SDTMinValidation, 10)\n    const EDTMinValidation = props.RepeatOrData ? props.isEndingData.toString().slice(14, 16) : props.isEndingTime.toString().slice(3, 5)\n    const EDTMinValue = parseInt(EDTMinValidation, 10)\n\n  // this will delete the old event and send the new one\n  const SubmitTheNewEvent = () => { \n      const ClickedEvent = props.PassEventsInfoList; //copy the Events list\n      const id = props.TheIdOfClickedEvent; //the Event id\n      let newEvent;\n      let indexOfEvent;\n      ClickedEvent.forEach((event, index) => {\n        if (event.id == id || event._id == id) {\n            newEvent = {...event};\n            indexOfEvent = index;\n          }\n        });\n\n      const newNotes = [...ClickedEvent]; \n      newEvent = {\n        ...newEvent,\n        id: props.TheIdOfClickedEvent,\n        title: props.isTitle,\n        description: props.isDescription,\n        Url: props.isURL,\n        start: props.isStartingDate,\n        end: props.isEndingData,\n        startTime: props.isStartingTime,\n        endTime: props.isEndingTime,\n        daysOfWeek: props.isRepeatedDays,\n        display: props.isDisplayOption,\n      };\n      newNotes[indexOfEvent] = newEvent\n      if (EDTValue < SDTValue) { props.CheckingETValidation(false)}\n      else if (EDTValue === SDTValue && EDTMinValue < SDTMinValue) { props.CheckingETValidation(false)}\n      else if( props.isTitle === \"\" && props.isDescription === \"\"){props.TitleMessage(true);props.DescriptionMessage(true);} \n      else {\n        props.ReturnNewEvents(newNotes); \n        if(props.isLoggedIn){\n            API.UpdateEvents(\n              id,\n              props.isTitle,\n              props.isDescription,\n              props.isURL,\n              props.isStartingDate,\n              props.isEndingData,\n              props.isStartingTime,\n              props.isEndingTime,\n              props.isRepeatedDays,\n              props.isDisplayOption\n            )\n          }\n\n        props.isCloseModel(true);\n    }\n    \n  };\n\n  const SubmitButton = <FadeIn>\n      <Button\n        width={\"130px\"}\n        marginBottomValue={\"10px\"}\n        marginLeftValue={\"160px\"}\n        fontSizeValue={\"20px\"}\n        borderRadiusValue={\"15px\"}\n        IsCalledValue={\"hover\"}\n        BorderValue=\"solid\"\n        borderWidthValue=\"thin\"\n        paddingInputValue=\"2px\"\n        onClick={SubmitTheNewEvent}\n        text={\"Submit\"}\n        icon={<SendOutlined style={ButtonIconColor}/>}\n      />\n    </FadeIn>\n\n  return SubmitButton;\n};\n\nexport default submitChanges;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport NoteContainer from \"../../../UI/Modal\"; \nimport { CloseCircleOutlined, EditFilled, EditOutlined } from \"@ant-design/icons\";\nimport FadeIn from \"react-fade-in\";\nimport {TitleContainer,DescriptionContainer,URLContainer} from \"./Containers/TextInputContainer\";\nimport {CalenderContianer,TimerContainer} from \"./Containers/Date-TimeContainer\";\nimport DisplayOption from \"./Containers/DisplayContainer\";\nimport RDContainer from \"../ScheduleForm/Containers/DaysContainer\"; \nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport AddAlertIcon from '@material-ui/icons/AddAlert';\nimport SubmitChanges from './Bottons/submitChanges'; \n\nconst EachateContainer = styled.div`\n    width: 500px;\n    display: flex;\n    flex-direction: row;\n    justify-content: ${props => props.JustifyContentCalue};\n    margin: 4px;\n`\n\nconst EditEventForm = (props) => {\n\n    //All Component Color Stle\n    const IconColor = {\n      color: props.ScheduleColor.IconC,\n      fontSize: \"24px\",\n      marginTop: \"2px\",\n      marginLeft: \"60px\",\n    };\n    //Visable and unvisable color style \n    const VisibilityStle = {\n        marginRight: \"4px\", \n        marginLeft:\"4px\",\n        marginTop:\"7px\" , \n        fontSize: \"21px\", \n        color : props.ScheduleColor.IconC\n    }\n    //DateStyle and unDateStyle color style \n    const ShowDateStle = {\n        marginRight: \"4px\", \n        marginLeft:\"60px\",\n        marginTop:\"7px\" , \n        fontSize: \"18px\", \n        color : props.ScheduleColor.IconC\n    }\n    \n    // The Event information \n    const Header= <EachateContainer JustifyContentCalue={\"flex-end\"}>\n        <span style={{ \n            padding: \"1px\" ,paddingTop: \"1px\" , \n            fontSize: \"1.2em\", marginLeft: \"150px\",\n            color: `${props.ScheduleColor.IconC}`}}>\n                Event Info\n        </span> \n        <CloseCircleOutlined\n            onClick={()=> props.closedEventForm(true)} \n            style={{marginRight: \"12px\", marginLeft: \"180px\", marginBottom: \"15px\",\n            fontSize: \"26px\", color: props.ScheduleColor.IconC}} // send the color list from the parent App file \n        />\n    </EachateContainer>  \n\n    //Title Area\n    const [getTitle, ChangeTitle] = useState(\"\");\n    const Title = <TitleContainer\n            SubmitTitle={(value) => ChangeTitle(value)} //this is to return input value of the title and then send it to submit model\n            isEditTitle={props.getTitle} //this is to send the placeholder for the title area\n            ScheduleColor={props.ScheduleColor}  // send the color list from the parent App file \n        />  \n\n     //Description Area\n    const [getDescription, ChangeDescription] = useState(\"\");\n    const Description = (\n        <DescriptionContainer\n        SubmitDescription={(value) => ChangeDescription(value)}\n        isEditDescription={props.getDescription}\n        ScheduleColor={props.ScheduleColor}\n        />\n    );\n\n     //URL Area\n    const [getURL, ChangeURL] = useState(\"\");\n    const URL = (\n        <URLContainer\n        URLOption={(value) => ChangeURL(value)}\n        isEditURL={props.getURL}\n        ScheduleColor={props.ScheduleColor}\n        />\n    );\n    \n    /***************************    Repeat Area  ************************************************/ \n    //This is to show either the data or repeated days\n    const [isShowTime, ChangeisShowTime] = useState(true) //to show the option to change the Time that the user selected\n    const ShowData = isShowTime ?  \n        <EditOutlined  \n            onClick={()=>ChangeisShowTime(false)}\n            style={VisibilityStle} \n        /> \n        : \n        <EditFilled \n            onClick={()=>ChangeisShowTime(true)}\n            style={VisibilityStle} \n        /> \n    //This is for the layout for Year Month Days \n    const InfoArea = <EachateContainer>\n            <DateRangeIcon style={IconColor}/>\n            <span style={{paddingTop: \"4px\" ,fontSize: \"1em\", marginLeft: \"20px\"}}>Selected Data</span>\n        </EachateContainer>\n    const isRepeated = <EachateContainer>\n            <AddAlertIcon style={IconColor}/>   \n            <span style={{paddingTop: \"4px\" ,fontSize: \"1em\", marginLeft: \"20px\"}}>Select days of repeated Event and its Time</span>\n        </EachateContainer>\n    //This is for the Data area or the Repeated Date area\n    const IcionArea = <EachateContainer> \n        {ShowData} \n        {isShowTime ? InfoArea : isRepeated }\n        </EachateContainer>\n\n    /***************************    Date Area  ************************************************/ \n    // Data From and To\n    const [getFormDate, ChangeFormDate] = useState(); //this is the data that will be send to submit model to be added to the event list \n    const [getToDate, ChangeToDate] = useState();  //this is the data that will be send to submit model to be added to the event list \n\n    const StartDate= props.getStartedClickedEvent //This is the selected data in calendar for edit passing down from EventForm\n    const EndDate= props.getEndededClickedEvent//This is the selected data in calendar  for edit passing down from EventForm\n    \n    const [EditTime, ChangeEditedTime ] = useState()\n    const Data = !isShowTime ? null : (\n      <CalenderContianer\n            SendSD={StartDate} //This is to send back the selected started data\n            SendED={EndDate} //This is to send back the selected ended data\n            GetFromDate={(value) => ChangeFormDate(value)} //Returning the selected data that the user chose\n            GetToDate={(value) => ChangeToDate(value)} //Returning the selected data that the user chose\n            GetIsSelectedDate={(value) => ChangeEditedTime(value)} //To pass down to Time to show when the user want to chagne time\n            ScheduleColor={props.ScheduleColor} // send the color list from the parent App file\n            PassIsStartedDay={props.isStartedDay} //passing down the data in number from Event Form\n            PassIsStartedMonth={props.isStartedMonth} //passing down the data in number from Event Form\n            PassIsStartedYear={props.isStartedYear} //passing down the data in number from Event Form\n            PassIsEndedDay={props.isEndedDay} //passing down the data in number from Event Form\n            PassIsEndedMonth={props.isEndedMonth} //passing down the data in number from Event Form\n            PassIsEndedYear={props.isEndedYear} //passing down the data in number from Event Form\n      />\n    );\n\n    /***************************    Time Area  ************************************************/ \n    //This is for the time\n    const [StartHours, ChangeStartHour] = useState(); //have returned starting hour if time is needed\n    const [StartMinuts, ChangeStartMinuts] = useState(); //have returned starting minut if time is needed \n    const [EndHours, ChangeEndHour] = useState(); //have returned Ending hour if time is needed\n    const [EndMinuts, ChangeEndMinuts] = useState(); //have returned Ending minut if time is needed \n    const [TimeClicked, ChangeTimeClicked] = useState() //this to make sure that time is included or not and show the repeated days model\n    const [CheckETValidation, ChangeInvalidET] = useState(true)\n    const [STClicked, ChangeSTClicked] = useState(false)\n    const [ETClicked, ChangeETClicked] = useState(false)\n    const Time = ( EditTime ? null :\n        <TimerContainer\n            FromHourSelected={(value) => ChangeStartHour(value)} // return starting hour if time is needed\n            FromMinutsSelected={(value) => ChangeStartMinuts(value)} // return starting minut if time is needed \n            ToHourSelected={(value) => ChangeEndHour(value)} // return Ending hour if time is needed\n            ToMinutsSelected={(value) => ChangeEndMinuts(value)} // return Ending minut if time is needed \n            ScheduleColor={props.ScheduleColor} // send the color list from the parent App file  \n            isTime={(value) => ChangeTimeClicked(value)}\n            ETValidationValue={CheckETValidation} // Pass down validation TIme \n            STCValue={(value) => ChangeSTClicked(value)} //starting time if clicked \n            ETCValue={(value) => ChangeETClicked(value)} //starting time if clicked \n        />\n        );\n        \n    /***************************    rebeated Option Area  ************************************************/ \n    const [GetRepeatedDays, ChangeRepeatedDays] = useState()\n    const RepeatedDays =( isShowTime ? null :<RDContainer\n            ScheduleColor={props.ScheduleColor} // send the color list from the parent App file  \n            SubmitNumberOfRP={(value) => ChangeRepeatedDays(value)} //returning the value of repeated days \n        />\n    );\n    \n    /***************************    Display Option Area  ************************************************/ \n    const [GetDiplayOption , ChangeDiplayOption] = useState()\n    const Display = <DisplayOption\n            ScheduleColor={props.ScheduleColor} // send the color list from the parent App file  \n            SubmitDisplayOption={(value) => ChangeDiplayOption(value)} //returning the value of repeated days \n        />\n\n    /***************************    Submit New Changes Area  ************************************************/ \n    const submitChanges = <SubmitChanges \n        isLoggedIn={props.isLoggedIn} // this is for checking if the user is logged in or not \n        PassEventsInfoList={props.EventsInfoList}//list of all the Events created and compare it with the changed one\n        TheIdOfClickedEvent={props.IDofClickedEvent} //the clicked event ID\n        ReturnChangedEvents={(value) => props.ChangeOldEvents(value)} //Delete selected event from all event and close model\n        isCloseModel={(value) => props.CloseModel(value)} //to return true if clicked\n        isTitle={getTitle} //the Title value\n        isDescription={getDescription} //the Description value\n        isURL={getURL} //the URL value\n        isStartingDate={isShowTime ? (STClicked ? (getFormDate + \"T\" +StartHours+\":\"+StartMinuts+\":00\") :(getFormDate + \"T12:00:00\")) : undefined} //the value of the Starting data\n        isEndingData={isShowTime ? (ETClicked ? (getToDate + \"T\" +StartHours+\":\"+StartMinuts+\":00\") : (getToDate + \"T12:30:00\") ) : undefined} //the value of Ending data\n        isRepeatedDays={!isShowTime ? GetRepeatedDays : undefined} //Values of Repeated Days\n        isStartingTime={!isShowTime ? (TimeClicked ?('12:00:00') :(StartHours+\":\"+StartMinuts+\":00\")) : undefined} //Choose Starting Time of the repeated Event\n        isEndingTime={!isShowTime ? (TimeClicked ?('12:30:00') :(EndHours+\":\"+EndMinuts+\":00\")) : undefined} //Choose Ending Time of the repeated Event\n        ReturnNewEvents={(value) => props.ReturnNewEvents(value)}\n        isDisplayOption= {GetDiplayOption} //the value of the Display Option\n        ColorChange={props.ScheduleColor} \n        CheckingETValidation={(value)=>ChangeInvalidET(value)}\n        RepeatOrData={isShowTime} // to check the time if it is on repeated days or just a noraml day \n    />;\n\n    const EditForm = (\n      <FadeIn>\n        <NoteContainer\n          position={\"relative\"}\n          width={\"520px\"}\n          margin={\"30px auto 20px auto\"}\n          padding={\"15px\"}\n          boxShadowValue={\"0 1px 5px rgb(138, 137, 137)\"}\n          borderRadiusValue={\"7px\"}\n          resizeValue={\"both\"}\n          backGroundColorValue={props.ScheduleColor.NotekBGC} //// send the color list from the parent App file\n          FontColorValue={props.ScheduleColor.NoteFC} //// send the color list from the parent App file\n        >\n          {Header}\n          {Title}\n          {Description}\n          {URL}\n          {IcionArea}\n          {Data}\n          {Time}\n          {RepeatedDays}\n          {Display}\n          {submitChanges}\n        </NoteContainer>\n      </FadeIn>\n    );\n\n  return EditForm;\n\n}\n\nexport default EditEventForm;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport NoteContainer from \"../../../UI/Modal\";\nimport FadeIn from \"react-fade-in\"; \nimport { CloseCircleOutlined } from \"@ant-design/icons\";\nimport EditButton from \"./Bottons/EditButton\";\nimport DeleteButton from \"./Bottons/DeleteButton\";\nimport EditEventForm from \"./EditEventForm\";\n\nconst CloseStyle = styled.div`\n    width: 460px;\n    display: flex;\n    flex-direction: row;\n    justify-content: ${props => props.JustifyContentCalue};\n    margin: 4px;\n`\nconst EachateContainer = styled.div`\n    width: 460px;\n    display: flex;\n    flex-direction: column;\n    justify-content: ${props => props.JustifyContentCalue};\n    margin: 4px;\n`\nconst DateContainer = styled.div`\n    width: 400px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n` \nconst TitleStyle = styled.span`\n  padding: 4px ;\n  fontSize: 1.2em;\n  margin-right: 8px;\n  color: ${props => props.Coloring};\n`\nconst ContentStyle = styled.span`\n    padding: 5px ;\n    fontSize: 1.2em;\n    marginLeft: 20px;\n    wordWrap: break-word;\n    border: solid;\n    border-width: thin;\n    border-radius: 7px;\n    border-color: #f5ba13;\n    height: ${(props) => props.Height ? props.Height : \"40px\"};\n    overflow: auto;\n  `\nconst EventForm = (props) => { \n  // The Event information \n  const Header=<CloseStyle>\n      <span style={{ \n        padding: \"1px\" ,paddingTop: \"1px\" , \n        fontSize: \"1.2em\", marginLeft: \"150px\",\n        color: `${props.ScheduleColor.IconC}`}}>\n          Event Info\n      </span> \n      <CloseCircleOutlined\n        onClick={()=> props.closedEventForm(true)} \n        style={{marginRight: \"4px\", marginLeft: \"180px\", marginBottom: \"15px\",\n        fontSize: \"26px\", color: props.ScheduleColor.IconC}} // send the color list from the parent App file \n        />\n    </CloseStyle>  \n\n  //TItle Area props.ScheduleColor.IconC\n  const isTitle =<EachateContainer JustifyContentCalue={\"\"}>\n      <TitleStyle Coloring={props.ScheduleColor.IconC}>Title : </TitleStyle> \n      <ContentStyle borderColor={props.ScheduleColor.IconC} >{props.EventClickedInfo.title}</ContentStyle> \n    </EachateContainer>\n\n  //Description Area props.ScheduleColor.IconC\n  const isDescription =<EachateContainer JustifyContentCalue={ \"\"}>\n      <TitleStyle Coloring={props.ScheduleColor.IconC}>Description : </TitleStyle> \n      <ContentStyle Height={\"100px\"} >{props.EventClickedInfo.description}</ContentStyle> \n    </EachateContainer>\n  //Url Area props.ScheduleColor.IconC\n  const isUrl =<EachateContainer JustifyContentCalue={ \"\"}>\n      <TitleStyle Coloring={props.ScheduleColor.IconC}>Url : </TitleStyle> \n      <ContentStyle >{  props.EventClickedInfo.url }</ContentStyle> \n    </EachateContainer>\n    \n  //Start Area props.ScheduleColor.IconC\n  const isStart =<EachateContainer JustifyContentCalue={ \"\"}>\n      <TitleStyle Coloring={props.ScheduleColor.IconC}>Start : </TitleStyle> \n      <ContentStyle >{props.EventClickedInfo.Start}</ContentStyle> \n    </EachateContainer>\n    \n  //End Area props.ScheduleColor.IconC\n  const isEnd =<EachateContainer JustifyContentCalue={ \"\"}>\n      <TitleStyle Coloring={props.ScheduleColor.IconC}>End : </TitleStyle> \n      <ContentStyle >{props.EventClickedInfo.End}</ContentStyle> \n    </EachateContainer>\n  \n  // The content Area\n  const Content = <DateContainer>\n      {isTitle}\n      {isDescription}\n      {isUrl}\n      {isStart}\n      {isEnd}\n    </DateContainer>\n  \n  \n  /***************************    Buttons to either change or delete  ************************************************/ \n  //EditButton Clicked\n  const [CallEditForm, ChnageEditForm]= useState(false)\n  //The edit button\n  const isEditButton= <CloseStyle JustifyContentCalue={ \"\"}>\n      <EditButton \n        isEditClicked={value=> ChnageEditForm(value)}\n        ColorChange={props.ScheduleColor}\n        />\n      <DeleteButton\n        isLoggedIn={props.isLoggedIn} // this is for checking if the user is logged in or not \n        EventsInfoList={props.PassedAllEvent} //list of all the Events created \n        IDofClickedEvent={props.EventClickedInfo.Id} //the clicked event ID \n        ReturnNewEvents={(value) => props.ChangeAllEvents(value)} //Delete selected event from all event and close model\n        CloseModel={(value) => props.closedEventForm(value)} //to return true if clicked\n        ColorChange={props.ScheduleColor} //Color list\n        />  \n    </CloseStyle>\n\n  /***************************    Event Info  ************************************************/ \n  const EventInfo= <NoteContainer\n      position={\"relative\"}\n      width={\"500px\"}\n      margin={\"30px auto 20px auto\"}\n      padding={\"15px\"}\n      boxShadowValue={\"0 1px 5px rgb(138, 137, 137)\"}\n      borderRadiusValue={\"7px\"}\n      resizeValue={\"both\"}\n      backGroundColorValue={props.ScheduleColor.NotekBGC}\n      FontColorValue={props.ScheduleColor.NoteFC}\n    > \n      {Header}\n      {Content}\n      {isEditButton}\n    </NoteContainer>\n  \n  /***************************    Edit Form Info  ************************************************/ \n  const EditFormInfo =<EditEventForm\n      isLoggedIn={props.isLoggedIn} // this is for checking if the user is logged in or not \n      EventsInfoList={props.PassedAllEvent} //list of all the Events created and compare it with the changed one\n      IDofClickedEvent={props.EventClickedInfo.Id} //the clicked event ID\n      ChangeOldEvents={(value) => props.ChangeAllEvents(value)} //Delete selected event from all event and close model\n      CloseModel={(value) => props.closedEventForm(value)} //to return true if clicked\n      ReturnNewEvents={(value) => props.ChangeAllEvents(value)} //Delete selected event from all event and close model\n      ScheduleColor={props.ScheduleColor}\n      closedEventForm={props.closedEventForm}\n      getTitle={props.EventClickedInfo.title} //The title\n      getDescription={props.EventClickedInfo.description} //The Description\n      getURL={props.EventClickedInfo.url} //The Url\n      getStartedClickedEvent={props.isStartedDateEditEvent} //The started Date that is passed down from the CalendarForm\n      getEndededClickedEvent={props.isEndedDateEditEvent} //The Ended Date that is passed down from the CalendarForm\n      isStartedDay={props.StartedDay} //the values of data in numbers passed down from CalendarForm\n      isStartedMonth={props.StartedMonth} //the values of data in numbers passed down from CalendarForm\n      isStartedYear={props.StartedYear} //the values of data in numbers passed down from CalendarForm\n      isEndedDay={props.EndedDay} //the values of data in numbers passed down from CalendarForm\n      isEndedMonth={props.EndedMonth} //the values of data in numbers passed down from CalendarForm\n      isEndedYear={props.EndedYear} //the values of data in numbers passed down from CalendarForm\n    /> \n\n  return (\n    <FadeIn>\n      {CallEditForm ? EditFormInfo  :EventInfo}\n\n    </FadeIn>\n  );\n};\n\nexport default EventForm;\n","import React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport listPlugin from \"@fullcalendar/list\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport HoverTitle from \"./EditForm/HoverTitle\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport EventForm from \"./EditForm/EvenForm\"; \nimport API from \"../../API/API\";  \n\nconst CalendarForm = (props) => {\n  const UserLocation = props.Location ? props.Location : \"UTC\"\n  \n  const weekendsVisible = true;\n  const getEvent = props.SendingEvents;\n  const [StartDate, ChangeStartData] = useState(\"\"); // Save Selected Start Data\n  const [EndDate, ChangeEndData] = useState(\"\"); // Save Selected End Data\n  props.GetStartDate(StartDate); // Send Selected Start Data\n  props.GetEndDate(EndDate); // Send Selected End Data\n  const [ShowEventClicked, ChangeShowEventClicekd] = useState(true); //to show event clicked\n\n  /*************************************************** Clicked Event *****************************************************************************/\n  //Returning the values of the event that is clicked to be showed\n  const [ClickedEvent, ChangeClickedEvent] = useState({\n    Id: \"\",\n    title: \"\",\n    description: \"\",\n    url: \"\",\n    Start: \"\",\n    End: \"\",\n    Display: \"\",\n  });\n\n  /*************************************************** Data Selected function Handler *****************************************************************************/\n  const handleDateSelect = (selectInfo) => {\n    /*\n    ih here use splice to check if the ending data is bigger than the starting data just by \n    one day then return undifiended otherwise return the data\n    */\n    ChangeStartData(selectInfo.startStr); // Selected Start Data\n    ChangeEndData(selectInfo.endStr); // Selected End Data\n    props.CallingSchedule(true);\n  };\n\n  /*************************************************** handle month to change it to number *****************************************************************************/\n  const [CreatedMonthsValues, ChangeMonths] = useState({\n    Jan: { id: \"01\", name: \"jan\" },\n    Feb: { id: \"02\", name: \"Feb\" },\n    Mar: { id: \"03\", name: \"Mar\" },\n    Apr: { id: \"04\", name: \"Apr\" },\n    May: { id: \"05\", name: \"May\" },\n    Jun: { id: \"06\", name: \"Jun\" },\n    Jul: { id: \"07\", name: \"Jul\" },\n    Aug: { id: \"08\", name: \"Aug\" },\n    Sep: { id: \"09\", name: \"Sep\" },\n    Oct: { id: \"10\", name: \"Oct\" },\n    Nov: { id: \"11\", name: \"Nov\" },\n    Dec: { id: \"12\", name: \"Dec\" },\n  });\n\n  //Event clicked handler\n  const [isStartedDate, ChangeIsStartedDate] = useState(\"\") // The value of the started clicked Data of event\n  const [isStartedDay, ChangeIsStartedDays] = useState(\"\") // The value of the started Day clicked Data of event\n  const [isStartedMonth, ChangeIsStartedMonth] = useState(\"\") // The value of the started Month clicked Data of event\n  const [isStartedYear, ChangeIsStartedYear] = useState(\"\") // The value of the started Year clicked Data of event\n\n  const [isEndedDate, ChnageIsEndedDate] = useState(\"\") //The value of the ended clicked Data of event\n  const [isEndedDay, ChnageIsEndedDay] = useState(\"\") //The value of the ended Day clicked Data of event\n  const [isEndedMonth, ChnageIsEndedMonth] = useState(\"\") //The value of the ended Month clicked Data of event\n  const [isEndedYear, ChnageIsEndedYear] = useState(\"\") //The value of the ended year clicked Data of event\n \n  /*************************************************** Clicked Event Handler *****************************************************************************/\n  const handleEventClick = async (clickInfo) => {\n        ChangeShowEventClicekd(false); \n        //Starting Date\n        const StartedDayValue = clickInfo.event._instance.range.start.toString().slice(8, 10) //Day\n        ChangeIsStartedDays(StartedDayValue);\n        const StartedMonthValue = clickInfo.event._instance.range.start.toString().slice(4, 7) //Month\n        ChangeIsStartedMonth(Object.values(CreatedMonthsValues).map( value => { if (value.name == StartedMonthValue) {return value.id;} }).filter(item => item)[0]) //Changing Month to number\n        const StartedYearValue = clickInfo.event._instance.range.start.toString().slice(11, 15) //Year \n        ChangeIsStartedYear(StartedYearValue)\n        \n        //ending Date\n        const EndedDayValue = clickInfo.event._instance.range.end.toString().slice(8, 10) //Day\n        ChnageIsEndedDay(EndedDayValue);\n        const EndedMonthValue = clickInfo.event._instance.range.end.toString().slice(4, 7) //Month\n        ChnageIsEndedMonth(Object.values(CreatedMonthsValues).map( value => { if (value.name == EndedMonthValue) { return value.id; } }).filter(item => item)[0]) //Changing Month to number\n        const EndedYearValue = clickInfo.event._instance.range.end.toString().slice(11, 15) //Year \n        ChnageIsEndedYear(EndedYearValue);\n        \n        //save the starting data for edit form event\n        ChangeIsStartedDate(\n            clickInfo.event._instance.range.start.toString().slice(4, 15)\n          ); \n        //save the starting data for edit form event\n        ChnageIsEndedDate(  \n            clickInfo.event._instance.range.end.toString().slice(4, 15)\n          );\n\n        if (props.isLoggedIn) {\n          return ChangeClickedEvent({\n            Id: clickInfo.event._def.extendedProps._id,\n            title: clickInfo.event._def.title,\n            description: clickInfo.event._def.extendedProps.description,\n            url: clickInfo.event._def.extendedProps.Url,\n            Start: clickInfo.event._instance.range.start\n              .toString()\n              .slice(0, 15),\n            End: clickInfo.event._instance.range.end.toString().slice(0, 15),\n            Display: clickInfo.event._def.ui.display,\n          });\n        }\n        ChangeClickedEvent({\n          Id: clickInfo.event._def.publicId,\n          title: clickInfo.event._def.title,\n          description: clickInfo.event._def.extendedProps.description,\n          url: clickInfo.event._def.extendedProps.Url,\n          Start: clickInfo.event._instance.range.start.toString().slice(4, 15),\n          End: clickInfo.event._instance.range.end.toString().slice(4, 15),\n          Display: clickInfo.event._def.ui.display,\n        })\n    };\n\n  \n  /*************************************************** Hover Event Title *****************************************************************************/\n  const [toggeltTitle, ChangeToggleTitle] = useState(false)\n  const [TitleValue, ChangeTitleValue] = useState(\"\")\n  const [StartValue, ChangeStartValue] = useState(\"\")\n  const HandleMouseEnter = (value) => {\n    const ReturnToggle = () => (\n        ChangeToggleTitle(true),\n        ChangeTitleValue(value.event._def.title),\n        ChangeStartValue(value.event._instance.range.start.toString().slice(0, 24)))\n      return(props.isLoggedIn ? setTimeout(ReturnToggle,500) : null)\n  }\n  const HandleMouseLeave = () => {\n    const FinishToggle = () => (ChangeToggleTitle(false), ChangeTitleValue(\"\"))\n    return(setTimeout(FinishToggle,500))\n  }\n  const ShowTitle = props.isLoggedIn ? <div style={{ zIndex: \"3\", position: \"absolute\", left: \"35%\", top: \"0px\", marginTop: \"52px\" }}>\n    <HoverTitle \n      ScheduleColor={props.CalendarColor} //send color form App\n      isTitle={TitleValue} //Passing Down the title\n      isStart={StartValue} //Passing Down the time\n      />\n    </div> : null\n    \n\n  /*************************************************** calendar Form *****************************************************************************/\n  const recievedLang = props.TheCalendarLanf \n  const FullCalendarForm = <div\n      style={{\n        zIndex: \"1\",\n        filter: ShowEventClicked ? null : \"blur(4px)\",\n        pointerEvents: ShowEventClicked ? null : \"none\",\n        color: props.CalendarColor.CalendarTC,\n        height: \"840px\"\n      }} \n    >\n      <FullCalendar\n        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin, listPlugin]}\n        headerToolbar={{\n            left: \"prev,next today\",\n            center: \"title\",\n            right: \"dayGridMonth,timeGridWeek,timeGridDay,list\",\n          }}\n        initialView=\"dayGridMonth\"\n        titleFormat={{ month: \"short\", year: \"numeric\", day: \"numeric\" }} //this is for the tile what should be there for the user\n        height=\"810px\" //get fixed height for the calendar\n        contentHeight=\"80%\" //get the content height for the calendar\n        handleWindowResize=\"true\"\n        locale={recievedLang} //this is for the languages option\n        timeZone={UserLocation} //to get the time zone of your location that is why we will be using the location in the sigup or make the browser detecte it\n        editable={true} //to edit the info\n        selectable={true} //to enable selection\n        selectMirror={true}\n        dayMaxEvents={true}\n        weekends={weekendsVisible}\n        eventTextColor=\"black\" //this is for the styling of the text for each event\n        eventBackgroundColor=\"cornflowerblue\" //This is for the background of each event\n        eventBorderColor=\"pink\" //The border color\n        select={handleDateSelect}\n        events={getEvent}\n        eventClick={handleEventClick} \n        eventMouseEnter={HandleMouseEnter}\n        eventMouseLeave={HandleMouseLeave}\n      />\n    </div>\n\n  /*************************************************** Event Form *****************************************************************************/\n  const eventform = (\n    <div style={{ zIndex: \"3\", position: \"absolute\", left: \"35%\", top: \"10%\" }}>\n      <EventForm\n        isLoggedIn={props.isLoggedIn} //to check if the user is logged or not\n        ScheduleColor={props.CalendarColor} //send color form App\n        closedEventForm={(value) => ChangeShowEventClicekd(value)}\n        EventClickedInfo={ShowEventClicked ? null : ClickedEvent} //pass downt the info about the clicked data\n        PassedAllEvent={props.SendingEvents} //copy of the event so we can compare the id and delete it\n        isStartedDateEditEvent={isStartedDate} //The value of the started Clicked Event\n        isEndedDateEditEvent={isEndedDate} //The value of the Ended Clicked Event\n        ChangeAllEvents={(value) => props.ChangeEvents(value)} //Delete the selected event\n        StartedDay={isStartedDay} //this is the value of the date in number\n        StartedMonth={isStartedMonth} //this is the value of the date in number\n        StartedYear={isStartedYear} //this is the value of the date in number\n        EndedDay={isEndedDay} //this is the value of the date in number\n        EndedMonth={isEndedMonth} //this is the value of the date in number\n        EndedYear={isEndedYear} //this is the value of the date in number\n      />\n    </div>\n  );\n\n\n  return (\n    <div>\n      {toggeltTitle? ShowTitle : null}\n      {ShowEventClicked ? null : eventform}\n      {FullCalendarForm}\n    </div>\n  );\n};\n\nexport default CalendarForm;","import React from \"react\";\nimport styled from \"styled-components\";\nimport UserInput from '../../../../UI/UserInput'\nimport TextArea from '../../../../UI/TextArea';\nimport FadeIn  from 'react-fade-in';\nimport { LinkOutlined} from \"@ant-design/icons\";\nimport { Title } from '@material-ui/icons';\nimport DescriptionIcon from '@material-ui/icons/Description';\nconst InfoContainer = styled.div`\n    width: 440px;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    margin: 4px;\n    margin-bottom: 10px;\n`\n\nconst TitleContainer = (props) => {\n    const IconColor = { \n        color : props.ScheduleColor.IconC, \n        fontSize:\"25px\", \n        marginRight:\"15px\", \n        marginTop:\"4px\" \n    }  \n    const title = <InfoContainer>\n        <FadeIn><Title style={IconColor}/></FadeIn>\n        <FadeIn><TextArea \n        key={`title` + 1} \n        // This is to change the Value of Title based on the input coming from schedule\n        onchangeValue={(event)=>props.SubmitTitle(event.target.value)}\n        rows={1}\n        //This is the Props that is coming from Schedule From once I click on submit\t\n        PlaceholderValue={props.SubmitTitlePlaceHolder}\n        name=\"title\"\n        maxLength={props.MaxLength ? props.MaxLength : \"none\"}\n        inputType={\"text\"} \n        widthValue={\"425px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={\"FOCUS\"} \n        borderRadiusValue= {\"7px\"}\n        backGroundColorValue={props.ScheduleColor.UserInputBGC}\n        FontColorValue={props.ScheduleColor.UserInputFC}\n        PlaceHolderColorValue={props.ScheduleColor.UserInputPHC}\n        borderColorValue={props.ScheduleColor.BorderColor}  \n        BorderValue={\"solid\"}\n        borderWidthValue=\"thin\"\n        marginRightValue={\"10px\"}\n        /></FadeIn>\n    </InfoContainer>\n\n    return(title)\n}\n\nconst DescriptionContainer = (props) => {\n    const IconColor = { \n        color : props.ScheduleColor.IconC, \n        fontSize:\"25px\", \n        marginRight:\"15px\", \n        marginTop:\"4px\" \n    } \n    const Description = <InfoContainer>\n        <FadeIn><DescriptionIcon style={IconColor}/></FadeIn>\n        <FadeIn><TextArea\n        key={`Description`+1} \n        // This is to change the Value of Title based on the input \n        onchangeValue={(event)=>props.SubmitDescription(event.target.value)}\n        //This is the Props that is coming from Schedule From once I click on submit\t\n        PlaceholderValue={props.SubmitDescriptionPlaceHolder}\n        rows={3}\n        name=\"Description\"\n        inputType={\"text\"} \n        widthValue={\"425px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={\"FOCUS\"} \n        borderRadiusValue= {\"7px\"}\n        backGroundColorValue={props.ScheduleColor.UserInputBGC}\n        FontColorValue={props.ScheduleColor.UserInputFC}\n        PlaceHolderColorValue={props.ScheduleColor.UserInputPHC}\n        borderColorValue={props.ScheduleColor.BorderColor}  \n        BorderValue={\"solid\"}\n        resizeValue={\"vertical\"}\n        borderWidthValue=\"thin\"\n        marginRightValue={\"10px\"}\n        /></FadeIn>\n    </InfoContainer>\n\n\n    return (Description)\n}\n\nconst URLContainer = (props) => {\n    const IconColor = { \n        color : props.ScheduleColor.IconC, \n        fontSize:\"25px\", \n        marginRight:\"15px\", \n        marginTop:\"4px\" \n    } \n    const URL = <InfoContainer>\n        <FadeIn><LinkOutlined style={IconColor}/></FadeIn>\n        <FadeIn><UserInput \n        key={`AttachedLinkDescription` }\n        // This is to change the Value of Title based on the input \n        onchangeValue={(event)=>props.URLOption(event.target.value)}\n        //This is the Props that is coming from Schedule From once I click on submit\t\n        PlaceholderValue={props.SubmitURLPH}\n        name=\"Url\"\n        inputType={\"text\"} \n        widthValue={\"425px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={\"FOCUS\"} \n        borderRadiusValue= {\"7px\"}\n        backGroundColorValue={props.ScheduleColor.UserInputBGC}\n        FontColorValue={props.ScheduleColor.UserInputFC}\n        PlaceHolderColorValue={props.ScheduleColor.UserInputPHC}\n        borderColorValue={props.ScheduleColor.BorderColor}    \n        BorderValue={\"solid\"}\n        borderWidthValue=\"thin\"\n        marginRightValue={\"10px\"}\n        /></FadeIn>\n    </InfoContainer>\n\n\n    return (URL)\n}\n\nexport  {TitleContainer, DescriptionContainer, URLContainer};","import React, { useState } from \"react\";\nimport styled from \"styled-components\"; \nimport FadeIn  from 'react-fade-in'; \nimport { CalendarOutlined , ClockCircleOutlined} from \"@ant-design/icons\"; \nimport TimeSelected from '../../DataCollection/TimeSelected'; \nimport { CloseOutlined, CheckCircleFilled } from \"@ant-design/icons\"; \nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\n\nconst InfoContainer = styled.div`\n    width: 440px;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    margin: 4px;\n    margin-bottom: 14px;\n`\nconst EachateContainer = styled.div`\n    width: 400px;\n    display: flex;\n    flex-direction: row;\n    justify-content: ${props => props.JustifyContentCalue};\n    margin: 4px;\n    margin-left: ${props => props.MarginLeft ? props.MarginLeft : null }\n`\nconst DateContainer = styled.div`\n    width: 400px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n`\nconst CalenderContianer = (props) => {\n    //All Component Color Stle\n    const IconColor = { \n        color : props.ScheduleColor.IconC, \n        fontSize:\"25px\", \n        marginRight:\"15px\", \n        marginTop:\"4px\" \n    }\n    \n    // This is a togole to change the state of the disabled and to change the icion as well \n    const InconArea = <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-start\"}}>\n            <FadeIn><CalendarOutlined style={IconColor}/> </FadeIn> \n        </div>\n\n    //This is for the layout for Year Month Days \n    const InfoArea = <EachateContainer JustifyContentCalue={\"space-between\" }>\n            {<FadeIn><span style={{ padding: \"1px\" ,paddingTop: \"1px\" , fontSize: \"1.2em\", marginLeft: \"150px\"}}>Selected Data</span></FadeIn>}\n        </EachateContainer>\n\n    //Starting Data Area\n    const StartingData = <EachateContainer JustifyContentCalue={ \"\"}>\n            <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"1px\"}}>From</span></FadeIn>\n            { <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"1px\", color:props.ScheduleColor.IconC}}>{props.SendSD}</span></FadeIn> }\n        </EachateContainer>\n    \n    // End Data Area\n    const EndingingData = <EachateContainer JustifyContentCalue={ \"\"}>\n            <FadeIn><span style={{  padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"25px\"}}>To</span></FadeIn>\n            { <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"1px\", color:props.ScheduleColor.IconC }}>{props.SendED}</span></FadeIn> }\n        </EachateContainer>\n    \n    //This is the returned Date to the calendar\n    const calendar = <InfoContainer>\n            {InconArea}\n            <DateContainer>\n                {InfoArea}\n                {StartingData}\n                {EndingingData}\n            </DateContainer>\n        </InfoContainer>\n\n    //To recieve a prop that will change the value from and to inside the schedule form to the value of From/to Date that has been created here  \n    props.GetFromDate(props.SendSD) //Return either the selected data from the calendar form or the changed data by the user\n    props.GetToDate(props.SendED) //Return either the selected data from the calendar form or the changed data by the user\n    \n    return(calendar)\n}\n\nconst TimerContainer = (props) => {\n    //All Component Color Stle\n    const IconColor = { \n        color : props.ScheduleColor.IconC, \n        fontSize:\"25px\", \n        marginRight:\"15px\", \n        marginTop:\"4px\"\n    }\n    //DateStyle and unDateStyle color style \n    const ShowDateStle = {\n        marginRight: \"4px\", \n        marginLeft:\"51px\",\n        marginTop:\"7px\" , \n        fontSize: \"18px\", \n        color : props.ScheduleColor.IconC\n    }\n    //Visable and unvisable color style \n    const VisibilityStle = {\n        marginRight: \"4px\", \n        marginLeft:\"4px\",\n        marginTop:\"7px\" , \n        fontSize: \"18px\", \n        color : props.ScheduleColor.IconC\n    }\n    const InValidStyle = {\n        color : \"red\", \n        fontSize:\"17px\",  \n        marginLeft: \"55px\",\n        marginRight: \"5px\",\n    } \n        \n    const [isShowTime, ChangeisShowTime] = useState(true) //to show the option to change the Time that the user selected\n    //this is the part where we change the icon based on clicking the div \n    const ShowData = <FadeIn>\n        {isShowTime ?  null : \n            <CheckCircleFilled \n                onClick={()=>ChangeisShowTime(true)}\n                style={VisibilityStle} />} \n        </FadeIn>\n    const IcionArea = <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-start\"}}>\n            <FadeIn><ClockCircleOutlined style={IconColor}/>  </FadeIn>\n            <FadeIn>{ShowData}</FadeIn>\n        </div>\n    const isDefulatTime = \n        <DateContainer>\n            <FadeIn>\n                <EachateContainer>\n                {isShowTime ? <RadioButtonUncheckedIcon onClick={()=>ChangeisShowTime(false)} style={ShowDateStle}/> : null}  \n                    <span style={{paddingTop: \"6px\" ,fontSize: \"1em\", marginLeft: \"5px\"}}>By defualt the time set to 12 am </span> \n                </EachateContainer>\n            </FadeIn>\n            <FadeIn><span style={{paddingBottom: \"4px\" ,fontSize: \"1em\", marginLeft: \"60px\"}}>Click the Circle to choose certain time</span></FadeIn>\n        </DateContainer>\n\n    //This is for the layout for Hour Minuts Day system\n    const InfoArea = (isShowTime ? \n        isDefulatTime\n        :\n        <EachateContainer JustifyContentCalue={\"space-between\" }>\n                    <FadeIn ><span style={{ padding: \"1px\" ,paddingTop: \"1px\" , fontSize: \"1.2em\", marginRight: \"1px\"}}> </span></FadeIn> \n                    <FadeIn ><span style={{ padding: \"1px\" ,paddingTop: \"1px\" , fontSize: \"1.2em\", marginRight: \"1px\"}}>{\"Hour\"}</span></FadeIn> \n                    <FadeIn ><span style={{ padding: \"1px\" ,paddingTop: \"1px\" , fontSize: \"1.2em\", marginRight: \"1px\"}}>{\"Minuts\"}</span></FadeIn> \n                    <FadeIn ><span style={{ padding: \"1px\" ,paddingTop: \"1px\" , fontSize: \"1.2em\", marginRight: \"1px\"}}>{\"AM / PM\"}</span></FadeIn> \n        </EachateContainer>\n    );\n    \n    //collection of stating time for event\n    const [StartHoursValue, ChangeStartHourValue ]= useState() //save the Starting Hour\n    const [StartMinutsValue, ChangeStartMinutsValue ]= useState() //save the starting Minuts\n    const [StartDayValue, ChangeStartDayValue ]= useState() //save starting if it is AM or PM\n    const [STimeClicked, ChangeSTimeClicked]= useState(false)\n    props.STCValue(STimeClicked)\n\n    const StartingTime = isShowTime ? null :  \n        <EachateContainer JustifyContentCalue={\"space-between\" }>\n            <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"5px\"}}>Start</span></FadeIn>\n            <TimeSelected \n                name={\"StartingTime\"}\n                ChangeSTimeClicked={(value) => ChangeSTimeClicked(value)}\n                submitHourValue={(value) => ChangeStartHourValue(value)}\n                submitMinutsValue={(value) => ChangeStartMinutsValue(value)}\n                submitDayValue={(value) => ChangeStartDayValue(value)}\n                RecievedColor={props.ScheduleColor}\n                />\n        </EachateContainer>\n    \n    \n    //collection of ending time for event\n    const [EndHoursValue, ChangeEndHourValue ]= useState() //save the Ending Hour\n    const [EndMinutsValue, ChangeEndMinutsValue ]= useState() //save the Ending Minuts\n    const [EndDayValue, ChangeEndDayValue ]= useState() //save Ending if it is AM or PM\n    const [ETimeClicked, ChangeETimeClicked]= useState(false)\n    props.ETCValue(ETimeClicked)\n\n    const inValidET= props.ETValidationValue //this is for only if the ending time is not bigger than starting time \n    var inValidEndingTime = inValidET ? null : \"Please Change the Time value to be valid\"\n    const inValidEndInput =  <InfoContainer>\n            {inValidET ? null : <FadeIn><CloseOutlined style={InValidStyle}/></FadeIn>}\n            <FadeIn><span style={{\n                color: inValidET ? \"#22e822\" : \"red\", \n                textAlign: \"center\",  \n                fontSize: \"17px\",\n                fontFamily: \"Arial\"\n            }}\n            >{inValidEndingTime}</span></FadeIn>\n        </InfoContainer> \n    const EndingTime = isShowTime ? null :<DateContainer>\n            <EachateContainer  MarginLeft={\"10px\"}  JustifyContentCalue={\"space-between\" }>\n                <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"5px\"}}>End</span></FadeIn>\n                <TimeSelected \n                    name={\"EndingTime\"}\n                    ChangeETimeClicked={(value) => ChangeETimeClicked(value)}\n                    submitHourValue={(value) => ChangeEndHourValue(value)}\n                    submitMinutsValue={(value) => ChangeEndMinutsValue(value)}\n                    submitDayValue={(value) => ChangeEndDayValue(value)}\n                    RecievedColor={props.ScheduleColor}\n                    />\n            </EachateContainer> \n            {inValidEndInput}\n        </DateContainer>\n\n \n    const time = (\n      <InfoContainer>\n        {IcionArea}\n        <DateContainer>\n          {InfoArea}\n          {StartingTime}\n          {EndingTime}\n        </DateContainer>\n      </InfoContainer>\n    );\n\n    props.FromHourSelected(STimeClicked ? (StartDayValue === \"PM\" ? String(parseInt(StartHoursValue,10) + 12) : StartHoursValue): \"12\") //this where we convert the returned hour from 12 hour system to 24 hour system \n    props.FromMinutsSelected(STimeClicked ? StartMinutsValue : \"00\")\n    props.ToHourSelected(STimeClicked ? (EndDayValue === \"PM\" ? String(parseInt(EndHoursValue,10) + 12) : EndHoursValue) : \"12\") //this where we convert the returned hour To 12 hour system to 24 hour system \n    props.ToMinutsSelected(STimeClicked ? EndMinutsValue : \"00\");\n    props.isTime(isShowTime) \n    return (time)\n}\n\nexport  {CalenderContianer, TimerContainer};","import React, {useState} from \"react\";\nimport styled from \"styled-components\"; \nimport FadeIn  from 'react-fade-in'; \nimport {BgColorsOutlined} from \"@ant-design/icons\"; \nimport ColorLensIcon from '@material-ui/icons/ColorLens';\nimport DisplaySelected from '../../DataCollection/DisplaySelected';\n\n\nconst InfoContainer = styled.div`\n    width: 440px;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    margin: 4px;\n    margin-bottom: 10px;\n`\n\nconst DisplayContainer = (props) => {\n    \n    const [GetDisplayOption, CHnageDisplayOption] = useState()\n    props.SubmitDisplayOption(GetDisplayOption)\n    const FontColor = <InfoContainer>\n        <FadeIn>\n            <BgColorsOutlined style={{fontSize:\"32px\",color : props.ScheduleColor.IconC,marginRight:\"9px\",marginTop:\"4px\"}}/>\n        </FadeIn>\n        <FadeIn>\n            <DisplaySelected \n                ValueOfDisplayOption={(value) => CHnageDisplayOption(value)}\n                RecievedColor={props.ScheduleColor}\n            />\n        </FadeIn>\n    </InfoContainer>\n\n    return(FontColor)\n}\nexport default DisplayContainer;","import React from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport { LoginOutlined } from \"@ant-design/icons\";\nimport Button from \"../../../../UI/Button\";\nimport { createEventId } from \"../../event-utils\";\nimport API from \"../../../../API/API\";\n\nconst SubmitButton = (props) => {\n  const ButtonIconColor = {\n    fontSize: \"20px\",\n    marginRight: \"9px\",\n    marginTop: \"4px\",\n  };   \n  \n  var CreateEvent = {\n    id: createEventId(),\n    title: props.isTitle,\n    description: props.isDescription,\n    Url: props.isURL,\n    start: props.isStartingDate,\n    end: props.isEndingData,\n    startTime: props.isStartingTime,\n    endTime: props.isEndingTime,\n    daysOfWeek: props.isRepeatedDays,\n    display: props.isDisplayOption  \n  };\n  //this is for validation that the ending time is after the starting time \n  const SDTHourValidation = props.RepeatOrData ? props.isStartingDate.toString().slice(11, 13) : props.isStartingTime.toString().slice(0, 2)\n  const SDTValue = parseInt(SDTHourValidation, 10)\n  const EDTHourValidation = props.RepeatOrData ? props.isEndingData.toString().slice(11, 13) : props.isEndingTime.toString().slice(0, 2)\n  const EDTValue = parseInt(EDTHourValidation, 10)\n  const SDTMinValidation = props.RepeatOrData ? props.isStartingDate.toString().slice(14, 16) : props.isStartingTime.toString().slice(3, 5)\n  const SDTMinValue = parseInt(SDTMinValidation, 10)\n  const EDTMinValidation = props.RepeatOrData ? props.isEndingData.toString().slice(14, 16) : props.isEndingTime.toString().slice(3, 5)\n  const EDTMinValue = parseInt(EDTMinValidation, 10)\n\n  const SubmitEvent = async () => { \n\n    if (EDTValue < SDTValue) { props.CheckingETValidation(false)}\n    else if (EDTValue === SDTValue && EDTMinValue < SDTMinValue) { props.CheckingETValidation(false)}\n    else if( props.isTitle === \"\" && props.isDescription === \"\"){props.TitleMessage(true);props.DescriptionMessage(true);} \n    else if (props.isTitle === \"\" ) {props.TitleMessage(true) } \n    else if (props.isDescription === \"\") {props.TitleMessage(false)}\n    else {\n      if(props.isLoggedIn){\n        return  API.CreateEvents(\n          CreateEvent.title, \n          CreateEvent.description, \n          CreateEvent.Url, \n          CreateEvent.start, \n          CreateEvent.end, \n          (Event) => {\n            CreateEvent=Event //changing the create event before sending it to the front end \n            props.isEvent((oldarr) => [...oldarr, CreateEvent])\n            props.isCallingCalendar(false) \n          })\n      }\n      props.isEvent((oldarr) => [...oldarr, CreateEvent])\n      props.isCallingCalendar(false) \n    }\n    };\n\n  const SubmitButton = (\n    <FadeIn>\n      <Button\n        width={\"120px\"}\n        marginBottomValue={\"10px\"}\n        marginLeftValue={\"35%\"}\n        fontSizeValue={\"20px\"}\n        borderRadiusValue={\"15px\"}\n        IsCalledValue={\"hover\"}\n        BorderValue=\"solid\"\n        borderWidthValue=\"thin\"\n        paddingInputValue=\"2px\"\n        onClick={SubmitEvent}\n        text={\"Submit\"}\n        icon={<LoginOutlined style={ButtonIconColor} />}\n      />\n    </FadeIn>\n  );\n\n\n  return SubmitButton;\n};\n\nexport default SubmitButton;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport NoteContainer from \"../../../UI/Modal\"; \nimport FadeIn from \"react-fade-in\";\nimport {TitleContainer,DescriptionContainer,URLContainer} from \"./Containers/TextInputContainer\";\nimport {CalenderContianer,TimerContainer} from \"./Containers/Date-TimeContainer\";\nimport DisplayContainer from \"./Containers/DisplayContainer\";\nimport RDContainer from \"./Containers/DaysContainer\";\nimport SubmitButton from \"./Containers/SubmitButton\";\nimport { CloseCircleOutlined, CloseOutlined, CheckOutlined } from \"@ant-design/icons\"; \nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport AddAlertIcon from '@material-ui/icons/AddAlert';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\n\nconst EachateContainer = styled.div`\n    width: 400px;\n    display: flex;\n    flex-direction: row;\n    justify-content: ${props => props.JustifyContentCalue};\n    margin: 4px;\n`\nconst InfoContainer = styled.div`\n    width: 470px;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n    margin: 4px;\n    margin-bottom: 10px;\n` \n\nconst Schedule = (props) => {\n    //All Component Color Stle\n    const IconColor = { \n        color : props.ScheduleColor.IconC, \n        fontSize:\"24px\", \n        marginLeft:\"10px\"\n    }\n    //Visable and unvisable color style \n    const VisibilityStle = {\n        marginRight: \"4px\", \n        marginLeft:\"4px\",\n        marginTop:\"6px\" , \n        fontSize: \"21px\", \n        color : props.ScheduleColor.IconC\n    }\n    const InValidStyle = {\n        color : \"red\", \n        fontSize:\"12px\", \n        marginRight:\"3px\", \n        marginLeft:\"37px\"\n    }\n    const ValidStyle = {\n        color : \"Green\", \n        fontSize:\"12px\", \n        marginRight:\"3px\", \n        marginLeft:\"37px\"\n    }\n    //Close ICion Area\n    const CloseIcon = \n    (<CloseCircleOutlined\n        onClick={()=> props.CallingCalendar(false)} \n        style={{marginRight: \"4px\", marginLeft: \"95%\", marginBottom: \"15px\",\n            fontSize: \"26px\", color: props.ScheduleColor.IconC}} // send the color list from the parent App file \n    />)\n\n    /*************************************************** Title Area *****************************************************************************/\n    const [getTitle, ChangeTitle] = useState(\"\");\n    const [TitlePH, ChangeTitlePH] = useState(\"Title ...\");\n    const [ShowTitleMessage, ChangeTitleMessage] = useState(false)\n    var TitleMessage = \"Please Add Title\"\n    const isTitleMessage = <InfoContainer>\n        <CloseOutlined style={InValidStyle}/>\n        <span style={{\n            color:\"red\", \n            textAlign: \"center\",  \n            fontSize: \"12px\",\n            fontFamily: \"Arial\"\n        }}\n        >{TitleMessage}</span>\n        </InfoContainer>\n    const Title = <TitleContainer\n            MaxLength={\"45\"}\n            SubmitTitle={(value) => ChangeTitle(value)} //this is to return input value of the title and then send it to submit model\n            SubmitTitlePlaceHolder={TitlePH} //this is to send the placeholder for the title area\n            ScheduleColor={props.ScheduleColor}  // send the color list from the parent App file \n        />  \n\n    /*************************************************** Description Area *****************************************************************************/\n    const [getDescription, ChangeDescription] = useState(\"\");\n    const [DescriptionPH, ChangeDescriptionPH] = useState(\"Description ...\");\n    const [ShowDescriptionMessage, ChangeDescriptionMessage] = useState(false)\n    var DescriptionMessage = \"Please Add Description\"\n    const isDescriptionMessage = <InfoContainer>\n        <CloseOutlined style={InValidStyle}/>\n        <span style={{\n            color:\"red\", \n            textAlign: \"center\",  \n            fontSize: \"12px\",\n            fontFamily: \"Arial\"\n        }}\n        >{DescriptionMessage}</span>\n        </InfoContainer>\n    const Description = (\n        <DescriptionContainer\n        SubmitDescription={(value) => ChangeDescription(value)}\n        SubmitDescriptionPlaceHolder={DescriptionPH}\n        ScheduleColor={props.ScheduleColor}\n        />\n    );\n\n    /*************************************************** URL Area *****************************************************************************/\n    const [getURL, ChangeURL] = useState();\n    const [URLPH, ChangeURLPH] = useState(\"Optional Attached Link For Description ...\");\n    const URL = (\n        <URLContainer\n        URLOption={(value) => ChangeURL(value)}\n        SubmitURLPH={URLPH}\n        ScheduleColor={props.ScheduleColor}\n        />\n    );\n\n    /*************************************************** the data or repeated days *****************************************************************************/\n    const [isShowTime, ChangeisShowTime] = useState(true) //to show the option to change the Time that the user selected\n    const ShowData = <div onClick={()=>ChangeisShowTime(!isShowTime)}>\n        {isShowTime ?  <RadioButtonUncheckedIcon style={VisibilityStle} /> : <RadioButtonCheckedIcon style={VisibilityStle} /> }\n    </div>\n    const isData = <EachateContainer>\n            <DateRangeIcon style={IconColor}/>   \n            <span style={{paddingTop: \"4px\" ,fontSize: \"1em\", marginLeft: \"50px\"}}>Selected Data of Event</span>\n        </EachateContainer>\n    const isRepeated = <EachateContainer>\n            <AddAlertIcon style={IconColor}/>   \n            <span style={{paddingTop: \"4px\" ,fontSize: \"1em\", marginLeft: \"20px\"}}>Select days of repeated Event and its Time</span>\n        </EachateContainer>\n    const IcionArea = <EachateContainer> \n            {ShowData}\n            {isShowTime ? isData  :isRepeated }\n        </EachateContainer>\n\n    // Data From and To\n    const [getFormDate, ChangeFormDate] = useState(); //this is the data that will be send to submit model to be added to the event list \n    const [getToDate, ChangeToDate] = useState();  //this is the data that will be send to submit model to be added to the event list \n    \n    const StartDate= props.SendSelectedSD //This is the selected data in calendar\n    const EndDate= props.SendSelectedED//This is the selected data in calendar  \n    const Data = ( !isShowTime ? null :\n        <CalenderContianer\n        SendSD={StartDate} //This is to send back the selected started data\n        SendED={EndDate} //This is to send back the selected ended data\n        GetFromDate={(value) => ChangeFormDate(value)} //Returning the selected data that the user chose \n        GetToDate={(value) => ChangeToDate(value)} //Returning the selected data that the user chose \n        ScheduleColor={props.ScheduleColor} // send the color list from the parent App file  \n        /> \n    );\n\n    /*************************************************** time Area *****************************************************************************/\n    const [StartHours, ChangeStartHour] = useState(); //have returned starting hour if time is needed\n    const [StartMinuts, ChangeStartMinuts] = useState(); //have returned starting minut if time is needed \n    const [EndHours, ChangeEndHour] = useState(); //have returned Ending hour if time is needed\n    const [EndMinuts, ChangeEndMinuts] = useState(); //have returned Ending minut if time is needed \n    const [TimeClicked, ChangeTimeClicked] = useState() //this to make sure that time is included or not and show the repeated days model\n    const [CheckETValidation, ChangeInvalidET] = useState(true)\n    const [STClicked, ChangeSTClicked] = useState(false)\n    const [ETClicked, ChangeETClicked] = useState(false)\n    const Time = (\n        <TimerContainer\n            ETValidationValue={CheckETValidation} // Pass down validation TIme \n            FromHourSelected={(value) => ChangeStartHour(value)} // return starting hour if time is needed\n            FromMinutsSelected={(value) => ChangeStartMinuts(value)} // return starting minut if time is needed \n            ToHourSelected={(value) => ChangeEndHour(value)} // return Ending hour if time is needed\n            ToMinutsSelected={(value) => ChangeEndMinuts(value)} // return Ending minut if time is needed \n            ScheduleColor={props.ScheduleColor} // send the color list from the parent App file  \n            isTime={(value) => ChangeTimeClicked(value)}\n            STCValue={(value) => ChangeSTClicked(value)} //starting time if clicked \n            ETCValue={(value) => ChangeETClicked(value)} //starting time if clicked \n        />\n        );\n        \n    /*************************************************** rebeated days Area *****************************************************************************/\n    const [GetRepeatedDays, ChangeRepeatedDays] = useState()\n    const RepeatedDays =( isShowTime ? null :<RDContainer\n        ScheduleColor={props.ScheduleColor} // send the color list from the parent App file  \n        SubmitNumberOfRP={(value) => ChangeRepeatedDays(value)} //returning the value of repeated days \n        />\n    );\n\n    /*************************************************** Display Options Area *****************************************************************************/\n    const [GetDiplayOption , ChangeDiplayOption] = useState()\n    const DiplayOption =<DisplayContainer\n        ScheduleColor={props.ScheduleColor} // send the color list from the parent App file  \n        SubmitDisplayOption={(value) => ChangeDiplayOption(value)} //returning the value of repeated days \n        /> \n\n    /*************************************************** Submit Buton  Area *****************************************************************************/\n\n    const Submit = (\n      <SubmitButton\n        isLoggedIn={props.isLoggedIn}\n        isCallingCalendar={(value) => props.CallingCalendar(value)} //return the close value to return to calender from the submit model\n        isTitle={getTitle} //the Title value\n        TitleMessage={(value) => ChangeTitleMessage(value)} // to show error if empty title\n        CheckTitlePH={(value) => ChangeTitlePH(value)} //this is to change the title place holder if there is no title\n        isDescription={getDescription} //the Description value\n        DescriptionMessage={(value) => ChangeDescriptionMessage(value)} // to show error if empty description\n        CheckDescriptionPH={(value) => ChangeDescriptionPH(value)} //this is to change the description placeholder if there is no placeholder\n        isURL={getURL} //the URL value\n        isStartingDate={isShowTime ? (STClicked ? (getFormDate + \"T\" +StartHours+\":\"+StartMinuts+\":00\") : (getFormDate + \"T12:00:00\") ) : undefined} //the value of the Starting data\n        isEndingData={isShowTime ? (ETClicked ? (getToDate + \"T\" +StartHours+\":\"+StartMinuts+\":00\") : (getToDate + \"T12:30:00\") ) : undefined} //the value of Ending data\n        //The starting and ending time only works with repeated days \n        isStartingTime={!isShowTime  ? (TimeClicked ?('12:00:00') :(StartHours+\":\"+StartMinuts+\":00\")) : undefined} //Choose Starting Time of the repeated Event\n        isEndingTime={!isShowTime ? (TimeClicked ?('12:30:00') :(EndHours+\":\"+EndMinuts+\":00\")) : undefined} //Choose Ending Time of the repeated Event\n        isRepeatedDays={!isShowTime ? GetRepeatedDays : undefined} //Values of Repeated Days\n        isDisplayOption= {GetDiplayOption} //the value of the Display Option\n        isEvent={props.submitEventValues} //returning the new event to the array of objects\n        CheckingETValidation={(value)=>ChangeInvalidET(value)}\n        RepeatOrData={isShowTime} // to check the time if it is on repeated days or just a noraml day \n      />\n    );\n\n    /*************************************************** Submit Form *****************************************************************************/\n    const ScheduleForm = (\n        <FadeIn>\n            <NoteContainer\n                position={\"relative\"}\n                width={\"520px\"}\n                margin={\"30px auto 20px auto\"}\n                padding={\"15px\"}\n                boxShadowValue={\"0 1px 5px rgb(138, 137, 137)\"}\n                borderRadiusValue={\"7px\"}\n                resizeValue={\"both\"}\n                backGroundColorValue={props.ScheduleColor.NotekBGC} //// send the color list from the parent App file \n                FontColorValue={props.ScheduleColor.NoteFC} //// send the color list from the parent App file \n                >\n            {CloseIcon}\n            {Title} \n            {ShowTitleMessage ? isTitleMessage : null}\n            {Description}\n            {ShowDescriptionMessage ? isDescriptionMessage : null}\n            {URL}\n            {IcionArea}\n            {Data}\n            {Time} \n            {RepeatedDays}\n            {DiplayOption}\n            {Submit}\n            </NoteContainer> \n        </FadeIn>\n    );\n\n  return ScheduleForm;\n};\n\nexport default Schedule;\n","import React, { useState, useEffect } from \"react\"; \nimport CalendarForm from \"./CalendarForm\";\nimport ScheduleForm from \"./ScheduleForm/Schedule\";\nimport styled from \"styled-components\";  \nimport API from \"../../API/API\";\n\nconst CalenderContainer = styled.div`\n  z-index: \"1\";\n  margin: 10px;\n  font-family: Arial, Helvetica Neue, Helvetica, sans-serif;\n  font-size: 16px;\n  color: cornflowerblue;\n`; \nconst CalendarCollection = (props) => {\n\n  /*************************************************** Evets List *****************************************************************************/\n  //Collection of Events\n  const [currentEvents, ChangeEventList] = useState([]); \n  //using componet did mount using useffect\n  useEffect( () => {\n    async function CheckingIsLoggedIn() {\n      const isLoggedIn = await API.isLoggedIn(() => {});\n      if (isLoggedIn) {\n        const PrevEvents = currentEvents \n        const DBEvents = await API.GetEvents();\n        const MergedNotes = DBEvents.data.concat(PrevEvents);\n        ChangeEventList(MergedNotes );\n      }\n    }\n\n    CheckingIsLoggedIn()\n  } , []) \n  \n  const [showSchedule, ChangeShowSchedule ] =useState(false) // to show the shedule model \n  const [SelectedStartedData, ChangeStartedData] = useState() //started selected data \n  const [SelectedEndedData, ChangeEndedData] = useState(); // ended slected data  \n\n  /*************************************************** calendar Form *****************************************************************************/\n  //the calendar form \n  const calendarForm = \n    (<div style={{zIndex:\"1\", filter: !showSchedule ? null : \"blur(4px)\",\n          pointerEvents:!showSchedule ? null : \"none\"}}>\n        <CalendarForm\n          isLoggedIn={props.isLoggedIn}\n          CalendarColor={props.RecieveColor} //send color form App\n          SendingEvents={currentEvents} //Pass down the list of eventsRecieveColor\n          CallingSchedule={(value) => ChangeShowSchedule(value)} //to call schedule\n          GetStartDate={(value) => ChangeStartedData(value)} //getting started clicked data\n          GetEndDate={(value) => ChangeEndedData(value)} //getting ended clicked data \n          ChangeEvents={(value) => ChangeEventList(value)}\n          TheCalendarLanf={props.ReturnLang}\n          Location={props.Location} //the location that the user inputed\n        />\n    </div>\n    );\n  /*************************************************** scheduling Form *****************************************************************************/\n  //scheduling event is called \n  const scheduleForm = (\n    <div style={{ zIndex: \"3\", position: \"absolute\", left: \"35%\", top: \"10%\" }}>\n      <ScheduleForm\n        isLoggedIn={props.isLoggedIn}\n        submitEventValues={(value) => ChangeEventList(value)}\n        ScheduleColor={props.RecieveColor} //send color form App\n        CallingCalendar={(value) => ChangeShowSchedule(value)} //to call calendar back\n        SendSelectedSD={SelectedStartedData} //Selected Start Data\n        SendSelectedED={SelectedEndedData} //Selected End Data\n      />\n    </div>\n  ); \n  \n  return (\n    <CalenderContainer>\n      {showSchedule ? scheduleForm : null}\n      {calendarForm}\n    </CalenderContainer>\n  );\n};\nexport default CalendarCollection;\n","import React, { Component } from \"react\";\nimport Nav from \"../../UI/NavBar\";\nimport Footer from '../../UI/Footer'\nimport CalendarCollection from \"./CalendarCollection\";\nimport API from \"../../API/API\";\n\nconst foreCast = require('../../WeatherApp/WeatherStack');\nconst GeoCode = require('../../WeatherApp/GeoCoding');\n\nclass CalendarList extends Component {\n   //to get the notes from the DB if any\n   async componentDidMount() {\n      const isLoggedIn = await API.isLoggedIn(()=>{});\n      if (isLoggedIn) { \n        await API.isLoggedIn((e)=>this.setState({\n          UserName : e.data.userName,\n          city : e.data.city,\n          province: e.data.province,\n          county: e.data.county,\n          userLoggedIn: true\n        }));\n        GeoCode( this.state.city ,this.state.province ,this.state.country ,Callback =>{\n          if(!Callback.latitude || !Callback.longitude){\n              return console.log({error: 'please enter an address'})\n          }\n          foreCast(Callback.latitude , Callback.longitude , (error, foreCastData, WeatherIcon, Location)=>{ \n              this.setState({Weather : foreCastData, WeatherIcon: WeatherIcon, Location: Location}) \n          })\n        })\n      }  \n  }\n\n  state = { \n    isLogOut: false,\n    UserName: \"Welcome Guest\", \n    Lang: \"en\",\n    city:\"\",\n    userLoggedIn: false,\n    province:\"\",\n    county:\"\",\n    Weather: \"\",\n    WeatherIcon: \"\",\n    Location: \"\"\n  };\n\n  render() {\n    return (\n      <div>\n        <div style={{ zIndex: \"7\", position: \"sticky\" }}>\n          <Nav\n            username={this.state.UserName}\n            ColorChanged={this.props.colorchanged}\n            RecieveColor={this.props.Color}\n            isShowLogOutButton={(value) => this.setState({ isLogOut: value })}\n            ShowLogOutButtonValue={this.state.isLogOut}\n            showLogOutButton={true}\n            inCalendar={false}\n            inNotes={true}\n            LangOption={(value) => this.setState({ Lang: value })}\n            WeatherMessage={this.state.Weather}\n            WeatherIcon={this.state.WeatherIcon}\n          />\n        </div>\n        <CalendarCollection\n          isLoggedIn={this.state.userLoggedIn}\n          isLogOut={this.state.isLogOut}\n          RecieveColor={this.props.Color}\n          ReturnLang={this.state.Lang}\n          Location={this.state.Location}\n        />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default CalendarList;\n","import React, {useState} from \"react\";\nimport styled from \"styled-components\";\nimport { MailOutlined, KeyOutlined, CheckOutlined, CloseOutlined, LoginOutlined} from \"@ant-design/icons\";\nimport UserInput from \"../../UI/UserInput\";\nimport NoteContainer from '../../UI/Modal';\nimport Button from \"../../UI/Button\";\nimport FadeIn  from \"react-fade-in\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../../API/API\";\nimport validator from \"validator\";\n\n/*************************** Style Area ********************************/    \nconst InfoContainer = styled.div`\n    width: 470px;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n    margin: 4px;\n    margin-bottom: 10px;\n    `\n\nconst SignupForm = (props) => {\n    /*************************** Style Area ********************************/    \n    const IconColor = { \n        color : props.RecieveColor.IconC, \n        fontSize:\"25px\", \n        marginRight:\"9px\", \n        marginTop:\"4px\" }\n    \n    const ButtonIconColor = { \n        color : props.RecieveColor.IconC, \n        fontSize:\"20px\", \n        marginRight:\"9px\", \n        marginTop:\"4px\" } \n    const InValidStyle = {\n        color : \"red\", \n        fontSize:\"12px\", \n        marginRight:\"3px\", \n        marginLeft:\"37px\"\n    }\n    const ValidStyle = {\n        color : \"Green\", \n        fontSize:\"12px\", \n        marginRight:\"3px\", \n        marginLeft:\"37px\"\n    }\n    const [EmailValue, ChangeEmail] = useState(\"\")\n    const [EmailPHValue, ChangeEmailPH] = useState(\"E-mail\")\n    const [PasswordValue, ChangePassword] = useState(\"\")\n    const [PasswordPHValue, ChangePasswordPH] = useState(\"Password\")\n    \n    /***********************************************************/    \n    //For Validating \n    const[emailValidOrPassword, ChangeEmailValidOrPassword] = useState(false)\n    const inCorrectInput = <InfoContainer>\n        <CloseOutlined style={InValidStyle}/>\n        <span style={{color: \"red\", marginLeft: \"3px\", textAlign: \"center\", fontSize: \"12px\", fontFamily: \"Arial\"}}>\n            Either the Email or The Password you’ve entered is incorrect\n        </span>\n        </InfoContainer>\n    \n    /**************************** Email *******************************/    \n    const[emailValid, ChangeemailValid] = useState(false)\n    const[emailValidMessage, ChangeEmailValidemailValidMessage] = useState(false)\n    var emailValidityString = emailValidMessage ? \"Email is Valid!\" : \"Email is InValid!\"\n    const EmailValidation = <InfoContainer>\n        {emailValidMessage ? <CheckOutlined style={ValidStyle}/> : <CloseOutlined style={InValidStyle}/>}\n        <span style={{\n            color: emailValidMessage ? \"Green\" : \"red\", \n            textAlign: \"center\",  \n            fontSize: \"12px\",\n            fontFamily: \"Arial\"\n        }}\n        >{emailValidityString}</span>\n        </InfoContainer>\n    const EmailValidateHandler = (v) => {\n        ChangeemailValid(true) \n        ChangeEmail(v.target.value)\n        const emailValid = validator.isEmail(v.target.value) \n        ChangeEmailValidemailValidMessage(emailValid) \n    }\n    const Email = <InfoContainer>\n            <FadeIn><MailOutlined style={IconColor}/></FadeIn>\n            <FadeIn><UserInput \n            InputValue={EmailValue}\n            onchangeValue={EmailValidateHandler}\n            inputType={\"text\"}\n            name=\"title\"\n            PlaceholderValue={EmailPHValue}\n            widthValue={\"380px\"}\n            paddingVale={\"4px\"}\n            outlineValue={\"none\"}\n            fontSizeValue={\"1.2em\"}\n            fontFamilyValue={\"inherit\"}\n            IsCalledValue={\"FOCUS\"} \n            borderRadiusValue= {\"7px\"}\n            backGroundColorValue={props.RecieveColor.UserInputBGC}\n            FontColorValue={props.RecieveColor.UserInputFC}\n            PlaceHolderColorValue={props.RecieveColor.UserInputPHC}\n            borderColorValue={props.RecieveColor.BorderColor}\n            BorderValue={\"solid\"}\n            borderWidthValue=\"thin\"\n            marginRightValue={\"10px\"}\n            /></FadeIn>\n        </InfoContainer>\n    \n    /**************************** PassWord *******************************/    \n    const PassWord = <InfoContainer>\n            <FadeIn><KeyOutlined style={IconColor}/></FadeIn>\n            <FadeIn><UserInput \n            InputValue={PasswordValue}\n            onchangeValue={(v)=>ChangePassword(v.target.value)}\n            inputType={\"password\"}\n            name=\"title\"\n            PlaceholderValue={PasswordPHValue}\n            widthValue={\"380px\"}\n            paddingVale={\"4px\"}\n            outlineValue={\"none\"}\n            fontSizeValue={\"1.2em\"}\n            fontFamilyValue={\"inherit\"}\n            IsCalledValue={\"FOCUS\"} \n            borderRadiusValue= {\"7px\"}\n            backGroundColorValue={props.RecieveColor.UserInputBGC}\n            FontColorValue={props.RecieveColor.UserInputFC}\n            PlaceHolderColorValue={props.RecieveColor.UserInputPHC}\n            borderColorValue={props.RecieveColor.BorderColor}\n            BorderValue={\"solid\"}\n            borderWidthValue=\"thin\"\n            marginRightValue={\"10px\"}\n            /></FadeIn>\n        </InfoContainer>\n\n    let history = useHistory()\n    const LoggingIn = () => {\n        if(EmailValue == \"\" && PasswordValue == \"\") {\n            ChangeEmailPH(\"Please Enter an Email. -_-\")\n            ChangePasswordPH(\"PLease Enter a Password. -_-\")\n        } else if (EmailValue == \"\" ) {\n            ChangeEmailPH(\"Please Enter an Email. -_-\")\n        } else if(PasswordValue == \"\") {\n            ChangePasswordPH(\"PLease Enter a Password. -_-\")\n        }else {\n            API.login( \n                EmailValue, \n                PasswordValue,\n                () => (history.push(\"/\")),\n                (e) => {\n                    ChangeEmailValidOrPassword(true)\n                }\n            )\n        }\n    }   \n   const LoginButton = <FadeIn>\n            <Button\n            width={\"120px\"}\n            marginBottomValue={\"10px\"}\n            marginLeftValue={\"35%\"}\n            fontSizeValue={\"20px\"}\n            borderRadiusValue={\"15px\"}\n            backGroundColorValue={props.RecieveColor.LogSignColor}\n            FontColorValue={props.RecieveColor.IconC}\n            borderColorValue={props.RecieveColor.BorderColor}\n            BorderValue=\"solid\"\n            borderWidthValue=\"thin\"\n            paddingInputValue=\"2px\"\n            onClick={LoggingIn}\n            text = {\"Login\"} \n            icon = {<LoginOutlined style={ButtonIconColor}/>}\n            />\n        </FadeIn>\n\nconst ReturnToLogin =<FadeIn>\n        <span style={{color: props.RecieveColor.UserInputFC , fontSize: \"1.2em\" }}>\n           Create Account : \n            <Link to={\"/signup\"} style={{color : props.RecieveColor.IconC }}> SignUp</Link>\n        </span>\n    </FadeIn>\n\nreturn <FadeIn>\n        <NoteContainer\n        position= {\"relative\"}\n        width= {\"470px\"}\n        margin= {\"200px auto 20px auto\"}\n        padding= {\"15px\"}\n        boxShadowValue= {\"0 1px 5px rgb(138, 137, 137)\"}\n        borderRadiusValue= {\"20px\"}\n        resizeValue={\"both\"}\n        backGroundColorValue={props.RecieveColor.NotekBGC}\n        >\n            {Email}\n            {emailValid ? EmailValidation : null}\n            {PassWord}\n            {emailValidOrPassword ? inCorrectInput : null}\n            {LoginButton}\n            <hr style={{marginBottom : \"10px\"}}></hr>\n            {ReturnToLogin}\n        </NoteContainer>\n    </FadeIn> \n};\n\nexport default SignupForm; ","export default __webpack_public_path__ + \"static/media/sun.eddd361a.jpg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport Sky from \"../Img/sun.jpg\"; \n\n \nconst PosterStyle = styled.img` \n    filter: blur(5px);\n    position: absolute;\n    height: auto;\n    box-shadow: 0 2px 5px #000;\n    width: 100%;\n    height: 100%;\n    border-radius: 7px;\n    object-fit: cover; \n`;\nconst Imag = (props) => {\n  return (\n    <PosterStyle draggable={false} src={Sky} />\n  );\n};\n\nexport default Imag;\n","import React, {useEffect} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Nav from \"../../UI/NavBar\";\nimport LoginForm from \"./LoginForm\";\nimport Imag from \"../../UI/Imag\"; \nimport API from \"../../API/API\";\n\nconst Login = (props) => {\n  let history = useHistory()\n  useEffect( () => {\n    async function CheckingIsLoggedIn() {\n      const isLoggedIn = await API.isLoggedIn(()=>{});\n      if (isLoggedIn) {\n        history.push(\"/\");\n      }\n    }\n\n    CheckingIsLoggedIn()\n  } , []) \n\n  return (\n    <div>\n      <Nav \n        ColorChanged={props.colorchanged} \n        RecieveColor={props.Color} \n        CallingPage={\"Signup\"}\n        showLoginButton={false}\n        showSignUpButton={true}\n        showLogOutButton={false}\n        username={null}\n        inNotes={true}\n        inCalendar={true}\n      />\n      <Imag/>  \n      <LoginForm ColorChanged={props.colorchanged} RecieveColor={props.Color}/>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { \n    UserOutlined, \n    MailOutlined, \n    KeyOutlined, \n    LoginOutlined, \n    CheckOutlined, \n    CloseOutlined, \n    UserAddOutlined, \n    HomeOutlined} \nfrom \"@ant-design/icons\";\nimport UserInput from \"../../UI/UserInput\";\nimport NoteContainer from '../../UI/Modal';\nimport Button from \"../../UI/Button\";\nimport FadeIn  from \"react-fade-in\";\nimport validator from \"validator\";\nimport { Link } from \"react-router-dom\";\nimport API from \"../../API/API\";\nimport { useHistory } from \"react-router-dom\";\nimport passwordValidator from \"password-validator\";\n\nconst InfoContainer = styled.div`\n    width: 470px;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n    margin: 4px;\n    margin-bottom: 10px;\n` \n    /******************************* Validator ****************************/    \n    var passwordLength = new passwordValidator();\n    passwordLength.is().min(8);\n    \n    var passwordMaxLength = new passwordValidator();\n    passwordMaxLength.is().max(18);\n\n    var passwordLetters = new passwordValidator();\n    passwordLetters.has().lowercase();\n\n    var passwordNumbers = new passwordValidator();\n    passwordNumbers.has().digits();\n\n    var passwordSymbols = new passwordValidator();\n    passwordSymbols.has().symbols();\n\nconst SignupForm = (props) => {\n    const IconColor = { \n        color : props.RecieveColor.IconC, \n        fontSize:\"25px\", \n        marginRight:\"9px\", \n        marginTop:\"4px\" }\n    \n    const ButtonIconColor = { \n        color : props.RecieveColor.IconC, \n        fontSize:\"20px\", \n        marginRight:\"9px\", \n        marginTop:\"4px\" }\n    const InValidStyle = {\n        color : \"red\", \n        fontSize:\"12px\", \n        marginRight:\"3px\", \n        marginLeft:\"37px\"\n    }\n    const ValidStyle = {\n        color : \"Green\", \n        fontSize:\"12px\", \n        marginRight:\"3px\", \n        marginLeft:\"37px\"\n    }\n    /*************************** Input Value ********************************/    \n    const [FirstNameValue, ChangeFirstName] = useState(\"\")\n    const [LastNameValue, ChangeLastName] = useState(\"\")\n    const [UserNameValue, ChangeUserName] = useState(\"\")\n    const [EmailValue, ChangeEmail] = useState(\"\")\n    const [PassWordValue, ChangePassWord] = useState(\"\")\n    const [ConfirmPasswordValue, ChangeConfirmPassword] = useState(\"\")\n    const [CountryValue, ChangeCountry] = useState(\"\")\n    const [ProvinceValue, ChangeProvince] = useState(\"\")\n    const [CityValue, ChangeCity] = useState(\"\")\n    const [ZipCodeValue, ChangeZipCode] = useState(\"\")\n\n    /************************** For Validating *********************************/    \n    const[emailValid, ChangeemailValid] = useState(false)\n    const[PasswordValid, ChangePasswordValid] = useState(false)\n    const[ConfirmPasswordValid, ChangeConfirmPasswordValid] = useState(false)\n    \n    /************************** For submission button *********************************/    \n    const[FirstNameValid, ChangeFirstNameValid] = useState(false)\n    const[LastNamrValid, ChangeLastNamrValid] = useState(false)\n    const[usernameValid, ChangeusernameValid] = useState(false)\n    const[PWPassValidation, ChangePWPassValidation] = useState(false)\n    const[CPWPassValidation, ChangeCPWPassValidation] = useState(false)\n    const[CountryValid, ChangeCountryValid] = useState(false)\n    const[ProvinceValid, ChangeProvinceValid] = useState(false)\n    const[CityValid, ChangeCityValid] = useState(false)\n    const[ZipCodeValid, ChangeZipCodeValid] = useState(false)\n    const[ValidSubmission, ChangeValidSubmission]= useState(false)\n\n    /************************** First Name *********************************/  \n    const FirstName = <FadeIn><UserInput \n            InputValue={FirstNameValue}\n            onchangeValue={(v)=>(ChangeFirstName(v.target.value),ChangeFirstNameValid(true))}\n            inputType={\"text\"}\n            name=\"title\"\n            PlaceholderValue={\"FirstName\"}\n            widthValue={\"184px\"}\n            paddingVale={\"4px\"}\n            outlineValue={\"none\"}\n            fontSizeValue={\"1.2em\"}\n            fontFamilyValue={\"inherit\"}\n            IsCalledValue={\"FOCUS\"} \n            borderRadiusValue= {\"7px\"}\n            backGroundColorValue={props.RecieveColor.UserInputBGC}\n            FontColorValue={props.RecieveColor.UserInputFC}\n            PlaceHolderColorValue={props.RecieveColor.UserInputPHC}\n            borderColorValue={props.RecieveColor.BorderColor}\n            BorderValue={\"solid\"}\n            borderWidthValue=\"thin\"\n            marginRightValue={\"10px\"}\n        /></FadeIn>\n    \n    /************************** Last Name *********************************/  \n    const LastName = <FadeIn><UserInput \n            InputValue={LastNameValue}\n            onchangeValue={(v)=>(ChangeLastName(v.target.value),ChangeLastNamrValid(true))}\n            inputType={\"text\"}\n            name=\"title\"\n            PlaceholderValue={\"LastName\"}\n            widthValue={\"184px\"}\n            paddingVale={\"4px\"}\n            outlineValue={\"none\"}\n            fontSizeValue={\"1.2em\"}\n            fontFamilyValue={\"inherit\"}\n            IsCalledValue={\"FOCUS\"} \n            borderRadiusValue= {\"7px\"}\n            backGroundColorValue={props.RecieveColor.UserInputBGC}\n            FontColorValue={props.RecieveColor.UserInputFC}\n            PlaceHolderColorValue={props.RecieveColor.UserInputPHC}\n            borderColorValue={props.RecieveColor.BorderColor}\n            BorderValue={\"solid\"}\n            borderWidthValue=\"thin\"\n            marginRightValue={\"10px\"}\n        /></FadeIn> \n   \n    /************************** Personal Info *********************************/  \n    const PersonalInfo = <InfoContainer>\n            <FadeIn><UserOutlined style={IconColor}/></FadeIn>\n            {FirstName}\n            {LastName} \n        </InfoContainer>\n\n    /************************** User Info *********************************/  \n    const Username = <InfoContainer>\n            <FadeIn><UserAddOutlined style={IconColor}/></FadeIn>\n            <FadeIn><UserInput\n            InputValue={UserNameValue}\n            onchangeValue={(v)=>(ChangeUserName(v.target.value), ChangeusernameValid(true))} \n            inputType={\"text\"}\n            name=\"title\"\n            PlaceholderValue={\"UserNamr\"}\n            widthValue={\"380px\"}\n            paddingVale={\"4px\"}\n            outlineValue={\"none\"}\n            fontSizeValue={\"1.2em\"}\n            fontFamilyValue={\"inherit\"}\n            IsCalledValue={\"FOCUS\"} \n            borderRadiusValue= {\"7px\"}\n            backGroundColorValue={props.RecieveColor.UserInputBGC}\n            FontColorValue={props.RecieveColor.UserInputFC}\n            PlaceHolderColorValue={props.RecieveColor.UserInputPHC}\n            borderColorValue={props.RecieveColor.BorderColor}\n            BorderValue={\"solid\"}\n            borderWidthValue=\"thin\"\n            marginRightValue={\"10px\"}\n            /></FadeIn>\n        </InfoContainer>\n\n    /*********************** Email ************************************/    \n    const[emailValidMessage, ChangeEmailValidemailValidMessage] = useState(false)\n    var emailValidityString = emailValidMessage ? \"Email is Valid!\" : \"Email is InValid!\"\n    const inCorrectInput = <InfoContainer>\n        {emailValidMessage ? <CheckOutlined style={ValidStyle}/> : <CloseOutlined style={InValidStyle}/>}\n        <span style={{\n            color: emailValidMessage ? \"Green\" : \"red\", \n            textAlign: \"center\",  \n            fontSize: \"12px\",\n            fontFamily: \"Arial\"\n        }}\n        >{emailValidityString}</span>\n        </InfoContainer>\n    const EmailValidateHandler = (v) => {\n        ChangeemailValid(true) \n        ChangeEmail(v.target.value)\n        const emailValid = validator.isEmail(v.target.value) \n        ChangeEmailValidemailValidMessage(emailValid) \n    }\n    const Email = <InfoContainer>\n            <FadeIn><MailOutlined style={IconColor}/></FadeIn>\n            <FadeIn><UserInput \n            InputValue={EmailValue}\n            onchangeValue={EmailValidateHandler} \n            inputType={\"text\"}\n            name=\"title\"\n            PlaceholderValue={\"E-mail\"}\n            widthValue={\"380px\"}\n            paddingVale={\"4px\"}\n            outlineValue={\"none\"}\n            fontSizeValue={\"1.2em\"}\n            fontFamilyValue={\"inherit\"}\n            IsCalledValue={\"FOCUS\"} \n            borderRadiusValue= {\"7px\"}\n            backGroundColorValue={props.RecieveColor.UserInputBGC}\n            FontColorValue={props.RecieveColor.UserInputFC}\n            PlaceHolderColorValue={props.RecieveColor.UserInputPHC}\n            borderColorValue={props.RecieveColor.BorderColor}\n            BorderValue={\"solid\"}\n            borderWidthValue=\"thin\"\n            marginRightValue={\"10px\"}\n            /></FadeIn>\n        </InfoContainer>\n    \n    /*********************** PassWord ************************************/  \n    const[ispasswordLen, ChangepasswordLen] = useState(false)\n    var PassWordLengthMessage = ispasswordLen ? \"Min. Length 8\" : \"Length Less then 8 \"\n    const passwordLen = <InfoContainer>\n        {ispasswordLen ? <CheckOutlined style={ValidStyle}/> : <CloseOutlined style={InValidStyle}/>}\n        <span style={{\n            color: ispasswordLen ? \"Green\" : \"red\", \n            textAlign: \"center\", \n            fontSize: \"12px\",\n            fontFamily: \"Arial\"\n        }}\n        >{PassWordLengthMessage}</span>\n        </InfoContainer>\n    const[ispasswordMaxLen, ChangepasswordMaxLen] = useState(true)\n    var PassWordLengthMessage = ispasswordMaxLen ? \"Max. Length 18\" : \"Please make the password 18 \"\n    const passwordMaxLen = <InfoContainer>\n        {ispasswordMaxLen ? <CheckOutlined style={ValidStyle}/> : <CloseOutlined style={InValidStyle}/>}\n        <span style={{\n            color: ispasswordMaxLen ? \"Green\" : \"red\", \n            textAlign: \"center\", \n            fontSize: \"12px\",\n            fontFamily: \"Arial\"\n        }}\n        >{PassWordLengthMessage}</span>\n        </InfoContainer>\n    const[ispasswordLetter, ChangepasswordLetter] = useState(false)\n    var PassWordLetterMessage = ispasswordLetter ? \"Password Contain one/more Letter\" : \"Please Include at least Letter\"\n    const passwordLetter = <InfoContainer>\n        {ispasswordLetter ? <CheckOutlined style={ValidStyle}/> : <CloseOutlined style={InValidStyle}/>}\n        <span style={{\n            color: ispasswordLetter ? \"Green\" : \"red\", \n            textAlign: \"center\", \n            fontSize: \"12px\",\n            fontFamily: \"Arial\"\n        }}\n        >{PassWordLetterMessage}</span>\n        </InfoContainer>\n    const[ispasswordNumber, ChangepasswordNumber] = useState(false)\n    var PassWordNumberMessage = ispasswordNumber ? \"Password Contain a Least one Number\" : \"Please Include one/more Numbers\"\n    const passwordNumber = <InfoContainer>\n        {ispasswordNumber ? <CheckOutlined style={ValidStyle}/> : <CloseOutlined style={InValidStyle}/>}\n        <span style={{\n            color: ispasswordNumber ? \"Green\" : \"red\", \n            textAlign: \"center\", \n            fontSize: \"12px\",\n            fontFamily: \"Arial\"\n        }}\n        >{PassWordNumberMessage}</span>\n        </InfoContainer>\n    const PasswordHandler = (v) => {\n        ChangePasswordValid(true)\n        ChangePassWord(v.target.value)\n        const PasswordValue = v.target.value\n        ChangepasswordLen(passwordLength.validate(PasswordValue))\n        ChangepasswordMaxLen(passwordMaxLength.validate(PasswordValue))\n        ChangepasswordLetter(passwordLetters.validate(PasswordValue))\n        ChangepasswordNumber(passwordNumbers.validate(PasswordValue))\n        if(\n            (ispasswordLen && ispasswordMaxLen && ispasswordLetter && ispasswordNumber) === true\n        ) {\n            ChangePWPassValidation(true)\n        }\n    }  \n    const PassWord = <InfoContainer>\n            <FadeIn><KeyOutlined style={IconColor}/></FadeIn>\n            <FadeIn><UserInput \n            maxLength={\"18\"}\n            InputValue={PassWordValue}\n            onchangeValue={PasswordHandler} \n            inputType={\"password\"}\n            name=\"title\"\n            PlaceholderValue={\"Password\"}\n            widthValue={\"380px\"}\n            paddingVale={\"4px\"}\n            outlineValue={\"none\"}\n            fontSizeValue={\"1.2em\"}\n            fontFamilyValue={\"inherit\"}\n            IsCalledValue={\"FOCUS\"} \n            borderRadiusValue= {\"7px\"}\n            backGroundColorValue={props.RecieveColor.UserInputBGC}\n            FontColorValue={props.RecieveColor.UserInputFC}\n            PlaceHolderColorValue={props.RecieveColor.UserInputPHC}\n            borderColorValue={props.RecieveColor.BorderColor}\n            BorderValue={\"solid\"}\n            borderWidthValue=\"thin\"\n            marginRightValue={\"10px\"}\n            /></FadeIn>\n        </InfoContainer>\n\n    /*********************** Confirm PassWord ************************************/  \n    const[passwordSpecial, ChangepasswordSpecial] = useState(false)\n    var ConfirmPassWordValue = passwordSpecial ? \"Password matched\" : \"Please match the password\"\n    const isConfirmPassword = <InfoContainer>\n        {passwordSpecial ? <CheckOutlined style={ValidStyle}/> : <CloseOutlined style={InValidStyle}/>}\n        <span style={{\n            color: passwordSpecial ? \"Green\" : \"red\", \n            textAlign: \"center\",  \n            fontSize: \"12px\",\n            fontFamily: \"Arial\"\n        }}\n        >{ConfirmPassWordValue}</span>\n        </InfoContainer>\n    const ConfirmPasswordhandler = (v) => {\n        ChangeConfirmPasswordValid(true)\n        ChangeConfirmPassword(v.target.value)\n        if (v.target.value === PassWordValue) {\n            ChangepasswordSpecial(true)\n            ChangeCPWPassValidation(true)\n        }\n    }\n    const ConfirmPassWord = <InfoContainer>\n            <FadeIn><KeyOutlined style={IconColor}/></FadeIn>\n            <FadeIn><UserInput \n            InputValue={ConfirmPasswordValue}\n            onchangeValue={ConfirmPasswordhandler} \n            inputType={\"password\"}\n            name=\"title\"\n            PlaceholderValue={\"Confirm PassWord\"}\n            widthValue={\"380px\"}\n            paddingVale={\"4px\"}\n            outlineValue={\"none\"}\n            fontSizeValue={\"1.2em\"}\n            fontFamilyValue={\"inherit\"}\n            IsCalledValue={\"FOCUS\"} \n            borderRadiusValue= {\"7px\"}\n            backGroundColorValue={props.RecieveColor.UserInputBGC}\n            FontColorValue={props.RecieveColor.UserInputFC}\n            PlaceHolderColorValue={props.RecieveColor.UserInputPHC}\n            borderColorValue={props.RecieveColor.BorderColor}\n            BorderValue={\"solid\"}\n            borderWidthValue=\"thin\"\n            marginRightValue={\"10px\"}\n            /></FadeIn>\n        </InfoContainer>   \n\n    /*********************** Country  ************************************/  \n    const Country =<FadeIn><UserInput \n        InputValue={CountryValue}\n        onchangeValue={(v)=>(ChangeCountry(v.target.value),ChangeCountryValid(true))} \n        inputType={\"text\"}\n        name=\"title\"\n        PlaceholderValue={\"Country\"}\n        widthValue={\"184px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={\"FOCUS\"} \n        borderRadiusValue= {\"7px\"}\n        backGroundColorValue={props.RecieveColor.UserInputBGC}\n        FontColorValue={props.RecieveColor.UserInputFC}\n        PlaceHolderColorValue={props.RecieveColor.UserInputPHC}\n        borderColorValue={props.RecieveColor.BorderColor}\n        BorderValue={\"solid\"}\n        borderWidthValue=\"thin\"\n        marginRightValue={\"10px\"}\n    /></FadeIn>\n\n    /*********************** Province ************************************/  \n    const Province = <FadeIn><UserInput \n        InputValue={ProvinceValue}\n        onchangeValue={(v)=>(ChangeProvince(v.target.value),ChangeProvinceValid(true))} \n        inputType={\"text\"}\n        name=\"title\"\n        PlaceholderValue={\"Province\"}\n        widthValue={\"184px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={\"FOCUS\"} \n        borderRadiusValue= {\"7px\"}\n        backGroundColorValue={props.RecieveColor.UserInputBGC}\n        FontColorValue={props.RecieveColor.UserInputFC}\n        PlaceHolderColorValue={props.RecieveColor.UserInputPHC}\n        borderColorValue={props.RecieveColor.BorderColor}\n        BorderValue={\"solid\"}\n        borderWidthValue=\"thin\"\n        marginRightValue={\"10px\"}\n    /></FadeIn>\n\n    /*********************** City ************************************/  \n    const City = <FadeIn><UserInput \n        InputValue={CityValue}\n        onchangeValue={(v)=>(ChangeCity(v.target.value),ChangeCityValid(true))} \n        inputType={\"text\"}\n        name=\"title\"\n        PlaceholderValue={\"City\"}\n        widthValue={\"184px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={\"FOCUS\"} \n        borderRadiusValue= {\"7px\"}\n        backGroundColorValue={props.RecieveColor.UserInputBGC}\n        FontColorValue={props.RecieveColor.UserInputFC}\n        PlaceHolderColorValue={props.RecieveColor.UserInputPHC}\n        borderColorValue={props.RecieveColor.BorderColor}\n        BorderValue={\"solid\"}\n        borderWidthValue=\"thin\"\n        marginRightValue={\"10px\"}\n        marginTopValue={\"10px\"}\n        marginLeftValue={\"34px\"}\n    /></FadeIn>\n\n    /*********************** ZipCode ************************************/  \n    const ZipCode = <FadeIn><UserInput \n        InputValue={ZipCodeValue}\n        onchangeValue={(v)=>(ChangeZipCode(v.target.value),ChangeZipCodeValid(true))} \n        inputType={\"text\"}\n        name=\"title\"\n        PlaceholderValue={\"ZipCode\"}\n        widthValue={\"184px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={\"FOCUS\"} \n        borderRadiusValue= {\"7px\"}\n        backGroundColorValue={props.RecieveColor.UserInputBGC}\n        FontColorValue={props.RecieveColor.UserInputFC}\n        PlaceHolderColorValue={props.RecieveColor.UserInputPHC}\n        borderColorValue={props.RecieveColor.BorderColor}\n        BorderValue={\"solid\"}\n        borderWidthValue=\"thin\"\n        marginTopValue={\"10px\"}\n        marginRightValue={\"10px\"}\n    /></FadeIn>\n\n    /*********************** location ************************************/  \n    const Location = <InfoContainer>\n        <FadeIn><HomeOutlined style={IconColor}/></FadeIn>\n        {Country}\n        {Province}\n        {City}\n        {ZipCode}\n    </InfoContainer>\n\n    /*********************** On handler Click ************************************/  \n    const [BEError, ChangeBEError]= useState(false)\n    const backEndError = \"Email is already been used before !\"\n    const TheBEMessage = <InfoContainer>\n        {<CloseOutlined style={InValidStyle}/>}\n        <span style={{\n            color: \"red\", \n            textAlign: \"center\", \n            fontSize: \"12px\",\n            fontFamily: \"Arial\"\n        }}\n        >{backEndError}</span>\n        </InfoContainer>\n    var SubmissionMessage = \"Please Fill the Empty Fields\"\n    const SubmitInValid = <InfoContainer>\n        {<CloseOutlined style={InValidStyle}/>}\n        <span style={{\n            color: \"red\", \n            textAlign: \"center\", \n            fontSize: \"12px\",\n            fontFamily: \"Arial\"\n        }}\n        >{SubmissionMessage}</span>\n        </InfoContainer>\n    let history = useHistory()\n    const SignUp = () => {\n        if(PassWordValue !== ConfirmPasswordValue) {\n            return (ChangepasswordSpecial(false), ChangeCPWPassValidation(false))\n        }\n        else if (\n            !FirstNameValid || !LastNamrValid || !usernameValid || !PWPassValidation || !CPWPassValidation ||\n            !CountryValid || !ProvinceValid || !CityValid || !ZipCodeValid\n        ){\n            return ChangeValidSubmission(true)\n        }\n        API.singUp(\n            FirstNameValue,\n            LastNameValue,\n            UserNameValue,\n            EmailValue,\n            PassWordValue,\n            CountryValue,\n            ProvinceValue,\n            CityValue,\n            ZipCodeValue,\n            ()=> history.push(\"/\"),\n            (err) => {\n                if (err) {\n                    console.log(err)\n                    ChangeBEError(true)\n                }\n            }\n        )\n    }\n\n    /*********************** Submission Button ************************************/  \n    const SignupButton = <FadeIn>\n        <Button\n        width={\"120px\"}\n        marginBottomValue={\"10px\"}\n        marginTopValue={\"5px\"}\n        marginLeftValue={\"40%\"}\n        fontSizeValue={\"20px\"}\n        borderRadiusValue={\"15px\"}\n        backGroundColorValue={props.RecieveColor.LogSignColor}\n        FontColorValue={props.RecieveColor.IconC}\n        borderColorValue={props.RecieveColor.BorderColor}\n        BorderValue=\"solid\"\n        borderWidthValue=\"thin\"\n        paddingInputValue=\"3px\"\n        text = {\"SignUp\"} \n        icon = {<LoginOutlined style={ButtonIconColor}/>}\n        onClick={SignUp}\n        />\n    </FadeIn>\n\nconst ReturnToLogin =<FadeIn>\n        <span style={{color: props.RecieveColor.UserInputFC , fontSize: \"1.2em\" }}>\n            Already have an acount ?  \n            <Link to={\"/login\"} style={{color : props.RecieveColor.IconC }}> Login</Link>\n        </span>\n    </FadeIn>\n\nreturn (\n    <div style={{height: \"800px\", overflow: \"auto\"}}>\n    <FadeIn>\n        <NoteContainer\n        position={\"relative\"}\n        width={\"480px\"}\n        heightValue={\"420px\"}\n        overflow={\"auto\"}\n        margin={\"140px auto 20px auto\"}\n        padding={\"15px\"}\n        boxShadowValue={\"0 1px 5px rgb(138, 137, 137)\"}\n        borderRadiusValue={\"20px\"}\n        resizeValue={\"both\"}\n        backGroundColorValue={props.RecieveColor.NotekBGC}\n        >\n        {PersonalInfo}\n        {Username}\n        {Email}\n        {emailValid ? inCorrectInput : null}\n        {PassWord}\n        {PasswordValid ? passwordLen : null}\n        {PasswordValid ? passwordMaxLen : null}\n        {PasswordValid ? passwordLetter : null}\n        {PasswordValid ? passwordNumber : null}\n        {ConfirmPassWord}\n        {ConfirmPasswordValid ? isConfirmPassword : null}\n        {Location}\n        {ValidSubmission ? SubmitInValid : null}\n        {BEError ? TheBEMessage : null}\n        {SignupButton}\n        <hr style={{marginBottom : \"10px\"}}></hr>\n        {ReturnToLogin}\n        </NoteContainer>\n    </FadeIn>\n  </div>\n\n);\n};\n\nexport default SignupForm; ","import React, {useEffect} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Nav from \"../../UI/NavBar\";\nimport SignupForm from \"./SignupForm\"; \nimport Imag from \"../../UI/Imag\"; \nimport API from \"../../API/API\";\n\n\nconst Signup = (props) => {\n  let history = useHistory()\n  useEffect( () => {\n    async function CheckingIsLoggedIn() {\n      const isLoggedIn = await API.isLoggedIn(()=>{});\n      if (isLoggedIn) {\n        history.push(\"/\");\n      }\n    }\n\n    CheckingIsLoggedIn()\n  } , []) \n\n  return (\n    <div>\n      <Nav ColorChanged={props.colorchanged} \n        RecieveColor={props.Color} \n        showLoginButton={true}\n        showSignUpButton={false}\n        showLogOutButton={false}\n        CallingPage={\"Signin\"}\n        username={null}\n        inCalendar={true}\n        inNotes={true}\n      />\n      <Imag/>  \n      <SignupForm \n        IsLocation={props.Location}\n        ColorChanged={props.colorchanged} \n        RecieveColor={props.Color}\n      />\n    </div>\n  );\n};\n\nexport default Signup;\n","import React, { Component } from 'react';\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport Notes from \"./Routes/Notes/Notes\" ;\nimport Calendar from \"./Routes/Calendar/Calendar\";\nimport {HashRouter, Route  } from \"react-router-dom\";\nimport Login from \"./Routes/Login/Login\";\nimport Signup from \"./Routes/Signup/Signup\"; \n\nconst ContainerDiv = styled.div`\n  font-family: \"Montserrat\", sans-serif;  \n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  // background-color: #282828;\n  background-color: ${(props) => ( props.BodyColorValue ? props.BodyColorValue : \"\")};\n  background-image: url(\"https://www.transparenttextures.com/patterns/cubes.png\");\n  // background-color: ${(props) => ( props.BodyColor ? props.BodyColor : \"\")};\n`;\n\nclass App extends Component {\n  state = {\n    Color: {\n      //Tggele button \n      ToggleButton: \"#999999\",\n      //calendar text color \n      CalendarTC : \"#6495ed\",\n      //Nav Icon color\n      NavIconColor : '#fff',\n      //Calender Color \n      CalendarColorTable: \"#C8C8C8\",\n      //Login/Signup color \n      LogSignColor : \"#999999\",\n      //BodyColor\n      BodyColor : \"#f2f2f2\",\n      //borderColor \n      BorderColor : \"#f5ba13\",\n      //IcionColor\n      IconC : \"#f5ba13\",\n      //UserIconColor\n      UserIconColor: \"#fff\",\n      UserIconTextColor: \"#999999\",\n      //ModelArea\n      NotekBGC : \"#282828\",\n      NoteFC : \"#F0F0F0\",\n      //userInput\n      UserInputBGC : \"#282828\",\n      UserInputFC : \"#F0F0F0\",\n      UserInputPHC : \"#C8C8C8\",\n      //TextArea\n      TextAreaBGC : \"#282828\",\n      TextAreaFC : \"#C8C8C8\",\n      TextAreaPHC : \"#C8C8C8\",\n    },\n    location: \"\", \n    UserName: \"\"\n  }\n   \n  ChangeColorsValue = (NewColor) => {\n    this.setState({\n      Color: NewColor\n    })\n  }\n\n  render() {\n    return ( \n      <HashRouter>\n        <ContainerDiv BodyColorValue={this.state.Color.BodyColor}> \n        <Route path=\"/calendar\" exact render={(props) => <Calendar Color={this.state.Color} colorchanged={this.ChangeColorsValue}/>}\n        />\n        <Route path=\"/login\" exact render={(props) => <Login Color={this.state.Color} colorchanged={this.ChangeColorsValue}/>}\n        />\n        <Route path=\"/signup\" exact render={(props) => <Signup Location={(value) =>this.setState({location: value})} Color={this.state.Color} colorchanged={this.ChangeColorsValue}/>}\n        />\n        <Route path=\"/\" exact render={(props) => <Notes Color={this.state.Color} colorchanged={this.ChangeColorsValue}/>}\n        /> \n        </ContainerDiv>\n      </HashRouter>  \n    )\n      }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const axios = require('axios');\n\nconst params = {\n    access_key: 'b5f9ccf619a080676d42d49c392a30c1',\n    units: 'm'\n}\n\nconst foreCast = (latitude, longitude, callback) => {\n  axios.get('http://api.weatherstack.com/current?query=' + encodeURIComponent(latitude)+','+encodeURIComponent(longitude), {params})\n  .then(response => {\n    if(response.data.error) {\n      callback('Unable to find Location !',undefined)\n    }else{\n      const ApiResponse = response.data; \n      const WeatherIcon = ApiResponse.current.weather_icons[0]\n      const message = `Current temperature in ${ApiResponse.location.name} is ${ApiResponse.current.temperature} ℃. \n        It Feels like ${ApiResponse.current.feelslike}`\n      const country = `${ApiResponse.location.country}`\n      const province = `${ApiResponse.location.region}`\n      const city = `${ApiResponse.location.name}`\n      const Location = `${country}/${province}/${city}`\n      callback(undefined, message, WeatherIcon, Location);\n      }\n    })\n    .catch(error => {\n      if(error) {\n        callback('Unable to connect to weather service!',undefined) \n        }\n    } \n    );\n}\n\nmodule.exports = foreCast","const axios = require('axios');\n\nconst GoeCode = ( city, province, country ,callback) => {\n  axios.get('https://api.mapbox.com/geocoding/v5/mapbox.places/,'+encodeURIComponent(city)+','+encodeURIComponent(province)+','+encodeURIComponent(country)+'.json?access_token=pk.eyJ1IjoiYXJzbW9oYW1lZCIsImEiOiJja2JydDBqZHcyNWx2MnJ0bW54d2kwOWtnIn0.jFqMm_liVWqdB7QKOa2uig&limit=1')\n  .then(response => {\n    if(response.data.features.length === 0){\n        callback(\"Unable to find location, Please try another One \");\n    }\n        const latitude = response.data.features[0].center[1]\n        const longitude = response.data.features[0].center[0]\n        const location = response.data.features[0].place_name\n        callback({latitude, longitude, location});\n    }).catch((e)=> {\n      if(e){\n        callback('Unable to connect to weather service!',undefined)\n      }\n    }) \n}\n\nmodule.exports = GoeCode"],"sourceRoot":""}