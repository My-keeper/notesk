[{"E:\\project\\notesk\\src\\index.js":"1","E:\\project\\notesk\\src\\App.js":"2","E:\\project\\notesk\\src\\serviceWorker.js":"3","E:\\project\\notesk\\src\\API\\Weather.js":"4","E:\\project\\notesk\\src\\Routes\\Login\\Login.js":"5","E:\\project\\notesk\\src\\Routes\\Signup\\Signup.js":"6","E:\\project\\notesk\\src\\Routes\\Notes\\Notes.js":"7","E:\\project\\notesk\\src\\Routes\\Calendar\\Calendar.js":"8","E:\\project\\notesk\\src\\API\\API.js":"9","E:\\project\\notesk\\src\\Routes\\Login\\LoginForm.js":"10","E:\\project\\notesk\\src\\Routes\\Signup\\SignupForm.js":"11","E:\\project\\notesk\\src\\UI\\BlurDiv.js":"12","E:\\project\\notesk\\src\\UI\\Footer.js":"13","E:\\project\\notesk\\src\\UI\\NavBar.js":"14","E:\\project\\notesk\\src\\Routes\\Notes\\Note\\Note.js":"15","E:\\project\\notesk\\src\\Routes\\Notes\\CreateNote\\CreateNote.js":"16","E:\\project\\notesk\\src\\Routes\\Calendar\\CalendarForm.js":"17","E:\\project\\notesk\\src\\UI\\UserInput.js":"18","E:\\project\\notesk\\src\\UI\\Modal.js":"19","E:\\project\\notesk\\src\\UI\\Button.js":"20","E:\\project\\notesk\\src\\UI\\Switch.js":"21","E:\\project\\notesk\\src\\UI\\UserIcon.js":"22","E:\\project\\notesk\\src\\UI\\TextArea.js":"23","E:\\project\\notesk\\src\\Routes\\Calendar\\event-utils.js":"24","E:\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\ScheduleForm.js":"25","E:\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\submitButtonContainer.js":"26"},{"size":497,"mtime":1612312056076,"results":"27","hashOfConfig":"28"},{"size":2567,"mtime":1612312161946,"results":"29","hashOfConfig":"28"},{"size":5227,"mtime":1612312056076,"results":"30","hashOfConfig":"28"},{"size":389,"mtime":1612312056070,"results":"31","hashOfConfig":"28"},{"size":479,"mtime":1612312056072,"results":"32","hashOfConfig":"28"},{"size":484,"mtime":1612312056073,"results":"33","hashOfConfig":"28"},{"size":2053,"mtime":1612312161952,"results":"34","hashOfConfig":"28"},{"size":484,"mtime":1612400233181,"results":"35","hashOfConfig":"28"},{"size":327,"mtime":1612312056070,"results":"36","hashOfConfig":"28"},{"size":3822,"mtime":1612312056072,"results":"37","hashOfConfig":"28"},{"size":8915,"mtime":1612312161953,"results":"38","hashOfConfig":"28"},{"size":543,"mtime":1612312056074,"results":"39","hashOfConfig":"28"},{"size":521,"mtime":1612312056074,"results":"40","hashOfConfig":"28"},{"size":1832,"mtime":1612312161954,"results":"41","hashOfConfig":"28"},{"size":6058,"mtime":1612312161952,"results":"42","hashOfConfig":"28"},{"size":6099,"mtime":1612312056072,"results":"43","hashOfConfig":"28"},{"size":5232,"mtime":1612401673520,"results":"44","hashOfConfig":"28"},{"size":4362,"mtime":1612312161955,"results":"45","hashOfConfig":"28"},{"size":3030,"mtime":1612312056074,"results":"46","hashOfConfig":"28"},{"size":2970,"mtime":1612312161953,"results":"47","hashOfConfig":"28"},{"size":4458,"mtime":1612312056075,"results":"48","hashOfConfig":"28"},{"size":965,"mtime":1612312056076,"results":"49","hashOfConfig":"28"},{"size":3062,"mtime":1612312056075,"results":"50","hashOfConfig":"28"},{"size":398,"mtime":1612312056072,"results":"51","hashOfConfig":"28"},{"size":8835,"mtime":1612400801787,"results":"52","hashOfConfig":"28"},{"size":3764,"mtime":1612402134731,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"owmqeg",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\project\\notesk\\src\\index.js",[],["114","115"],"E:\\project\\notesk\\src\\App.js",["116"],"import React, { Component } from 'react';\r\nimport styled from \"styled-components\";\r\nimport \"./App.css\";\r\nimport Notes from \"./Routes/Notes/Notes\" ;\r\nimport Calendar from \"./Routes/Calendar/Calendar\";\r\nimport {BrowserRouter, Route,  } from \"react-router-dom\";\r\nimport Login from \"./Routes/Login/Login\";\r\nimport Signup from \"./Routes/Signup/Signup\";\r\nimport Weather from \"./API/Weather\";\r\n\r\nconst ContainerDiv = styled.div`\r\n  font-family: \"Montserrat\", sans-serif;  \r\n  position: fixed;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  // background-color: #282828;\r\n  background-color: ${(props) => ( props.BodyColorValue ? props.BodyColorValue : \"\")};\r\n  background-image: url(\"https://www.transparenttextures.com/patterns/cubes.png\");\r\n  // background-color: ${(props) => ( props.BodyColor ? props.BodyColor : \"\")};\r\n`;\r\n\r\nclass App extends Component {\r\n  state = {\r\n    Color: {\r\n      //Calender Coloe \r\n      CalendarColorTable: \"#C8C8C8\",\r\n      //Login/Signup color \r\n      LogSignColor : \"#999999\",\r\n      //BodyColor\r\n      BodyColor : \"#f2f2f2\",\r\n      //borderColor \r\n      BorderColor : \"#f5ba13\",\r\n      //IcionColor\r\n      IconC : \"#f5ba13\",\r\n      //UserIconColor\r\n      UserIconColor: \"#fff\",\r\n      UserIconTextColor: \"#999999\",\r\n      //ModelArea\r\n      NotekBGC : \"#282828\",\r\n      NoteFC : \"#F0F0F0\",\r\n      //userInput\r\n      UserInputBGC : \"#282828\",\r\n      UserInputFC : \"#F0F0F0\",\r\n      UserInputPHC : \"#C8C8C8\",\r\n      //TextArea\r\n      TextAreaBGC : \"#282828\",\r\n      TextAreaFC : \"#C8C8C8\",\r\n      TextAreaPHC : \"#C8C8C8\",\r\n    }\r\n  }\r\n   \r\n  ChangeColorsValue = (NewColor) => {\r\n    this.setState({\r\n      Color: NewColor\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return ( \r\n      <BrowserRouter>\r\n        <ContainerDiv BodyColorValue={this.state.Color.BodyColor}> \r\n        <Route \r\n          path=\"/calendar\" exact render={(props) =>\r\n            <Calendar Color={this.state.Color} colorchanged={this.ChangeColorsValue}/>}\r\n        />\r\n        <Route \r\n          path=\"/login\" exact render={(props) =>\r\n            <Login Color={this.state.Color} colorchanged={this.ChangeColorsValue}/>}\r\n        />\r\n        <Route \r\n          path=\"/signup\" exact render={(props) =>\r\n            <Signup Color={this.state.Color} colorchanged={this.ChangeColorsValue}/>}\r\n        />\r\n          <Route \r\n            path=\"/notes\" exact render={(props) =>\r\n              <Notes Color={this.state.Color} colorchanged={this.ChangeColorsValue}/>}\r\n          />\r\n        </ContainerDiv>\r\n      </BrowserRouter>  \r\n    )\r\n      }\r\n}\r\n\r\nexport default App;\r\n","E:\\project\\notesk\\src\\serviceWorker.js",[],"E:\\project\\notesk\\src\\API\\Weather.js",[],"E:\\project\\notesk\\src\\Routes\\Login\\Login.js",["117"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Nav from \"../../UI/NavBar\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport BlurDiv from \"../../UI/BlurDiv\";\r\n\r\nconst Login = (props) => {\r\n  return (\r\n    <div>\r\n      <BlurDiv blurDegree={\"1.4px\"}/>\r\n      <Nav ColorChanged={props.colorchanged} RecieveColor={props.Color}/>\r\n      <LoginForm ColorChanged={props.colorchanged} RecieveColor={props.Color}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","E:\\project\\notesk\\src\\Routes\\Signup\\Signup.js",["118"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Nav from \"../../UI/NavBar\";\r\nimport SignupForm from \"./SignupForm\";\r\nimport BlurDiv from \"../../UI/BlurDiv\";\r\n\r\nconst Signup = (props) => {\r\n  return (\r\n    <div>\r\n      <BlurDiv blurDegree={\"1.4px\"}/>\r\n      <Nav ColorChanged={props.colorchanged} RecieveColor={props.Color}/>\r\n      <SignupForm ColorChanged={props.colorchanged} RecieveColor={props.Color}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","E:\\project\\notesk\\src\\Routes\\Notes\\Notes.js",[],"E:\\project\\notesk\\src\\Routes\\Calendar\\Calendar.js",[],"E:\\project\\notesk\\src\\API\\API.js",[],"E:\\project\\notesk\\src\\Routes\\Login\\LoginForm.js",["119"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { MailOutlined, KeyOutlined, LoginOutlined, UserAddOutlined} from \"@ant-design/icons\";\r\nimport UserInput from \"../../UI/UserInput\";\r\nimport NoteContainer from '../../UI/Modal';\r\nimport Button from \"../../UI/Button\";\r\nimport FadeIn  from \"react-fade-in\";\r\n\r\n\r\nconst InfoContainer = styled.div`\r\n    width: 440px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    margin: 4px;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nconst SignupForm = (props) => {\r\n    const IconColor = { \r\n        color : props.RecieveColor.IconC, \r\n        fontSize:\"25px\", \r\n        marginRight:\"9px\", \r\n        marginTop:\"4px\" }\r\n    \r\n    const ButtonIconColor = { \r\n        color : props.RecieveColor.IconC, \r\n        fontSize:\"20px\", \r\n        marginRight:\"9px\", \r\n        marginTop:\"4px\" }\r\n\r\n    const Email = <InfoContainer>\r\n            <FadeIn><MailOutlined style={IconColor}/></FadeIn>\r\n            <FadeIn><UserInput \r\n            inputType={\"text\"}\r\n            name=\"title\"\r\n            PlaceholderValue={\"E-mail\"}\r\n            widthValue={\"380px\"}\r\n            paddingVale={\"4px\"}\r\n            outlineValue={\"none\"}\r\n            fontSizeValue={\"1.2em\"}\r\n            fontFamilyValue={\"inherit\"}\r\n            IsCalledValue={\"FOCUS\"} \r\n            borderRadiusValue= {\"7px\"}\r\n            backGroundColorValue={props.RecieveColor.UserInputBGC}\r\n            FontColorValue={props.RecieveColor.UserInputFC}\r\n            PlaceHolderColorValue={props.RecieveColor.UserInputPHC}\r\n            borderColorValue={props.RecieveColor.BorderColor}\r\n            BorderValue={\"solid\"}\r\n            borderWidthValue=\"thin\"\r\n            marginRightValue={\"10px\"}\r\n            /></FadeIn>\r\n        </InfoContainer>\r\n    \r\n    const PassWord = <InfoContainer>\r\n            <FadeIn><KeyOutlined style={IconColor}/></FadeIn>\r\n            <FadeIn><UserInput \r\n            inputType={\"text\"}\r\n            name=\"title\"\r\n            PlaceholderValue={\"Password\"}\r\n            widthValue={\"380px\"}\r\n            paddingVale={\"4px\"}\r\n            outlineValue={\"none\"}\r\n            fontSizeValue={\"1.2em\"}\r\n            fontFamilyValue={\"inherit\"}\r\n            IsCalledValue={\"FOCUS\"} \r\n            borderRadiusValue= {\"7px\"}\r\n            backGroundColorValue={props.RecieveColor.UserInputBGC}\r\n            FontColorValue={props.RecieveColor.UserInputFC}\r\n            PlaceHolderColorValue={props.RecieveColor.UserInputPHC}\r\n            borderColorValue={props.RecieveColor.BorderColor}\r\n            BorderValue={\"solid\"}\r\n            borderWidthValue=\"thin\"\r\n            marginRightValue={\"10px\"}\r\n            /></FadeIn>\r\n        </InfoContainer>\r\n   \r\n   const LoginButton = <FadeIn>\r\n            <Button\r\n            width={\"120px\"}\r\n            marginBottomValue={\"10px\"}\r\n            marginLeftValue={\"35%\"}\r\n            fontSizeValue={\"20px\"}\r\n            borderRadiusValue={\"15px\"}\r\n            backGroundColorValue={props.RecieveColor.LogSignColor}\r\n            FontColorValue={props.RecieveColor.IconC}\r\n            borderColorValue={props.RecieveColor.BorderColor}\r\n            BorderValue=\"solid\"\r\n            borderWidthValue=\"thin\"\r\n            paddingInputValue=\"2px\"\r\n            text = {\"Login\"} \r\n            icon = {<LoginOutlined style={ButtonIconColor}/>}\r\n            />\r\n        </FadeIn>\r\n\r\nreturn (\r\n    <FadeIn><NoteContainer\r\n    position= {\"relative\"}\r\n    width= {\"450px\"}\r\n    margin= {\"300px auto 20px auto\"}\r\n    padding= {\"15px\"}\r\n    boxShadowValue= {\"0 1px 5px rgb(138, 137, 137)\"}\r\n    borderRadiusValue= {\"20px\"}\r\n    resizeValue={\"both\"}\r\n    backGroundColorValue={props.RecieveColor.NotekBGC}\r\n    >\r\n        {Email}\r\n        {PassWord}\r\n        {LoginButton}\r\n    </NoteContainer></FadeIn>\r\n)\r\n};\r\n\r\nexport default SignupForm; ","E:\\project\\notesk\\src\\Routes\\Signup\\SignupForm.js",[],"E:\\project\\notesk\\src\\UI\\BlurDiv.js",["120"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\n{/* <BlurDiv style={{ height: \"100%\" }} blurDegree={\"3px\"}>\r\n<StyledImage src={backgroundImage} alt=\"oops\" />\r\n</BlurDiv> */}\r\n\r\n\r\nconst StyledBlurDiv = styled.div`\r\nbackdrop-filter: blur(${(props) => props.blurDegree});\r\nposition: absolute;\r\nheight: 100%;\r\nwidth: 100%;\r\n`;\r\n\r\nconst BlurDiv = (props) => {\r\n  return (\r\n    <StyledBlurDiv style={props.style} blurDegree={props.blurDegree}>\r\n      {props.children}\r\n    </StyledBlurDiv>\r\n  );\r\n};\r\n\r\nexport default BlurDiv;\r\n","E:\\project\\notesk\\src\\UI\\Footer.js",[],"E:\\project\\notesk\\src\\UI\\NavBar.js",["121","122","123"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SwitchIcon from './Switch'\r\nimport FadeIn from 'react-fade-in';\r\nimport UserIcon from \"./UserIcon\";\r\nimport { LoginOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\nimport AppButton from \"./Button\";\r\nimport NotesIcon from '@material-ui/icons/Notes';\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\n\r\nconst StyledNavBar = styled(FadeIn)` \r\n    align-items: center; \r\n    justify-content: space-between;\r\n    height: 50px;\r\n    background-color: #f5ba13;\r\n    margin: auto -16px;\r\n    padding: 16px 32px;\r\n    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.3);\r\n    display: flex;\r\n`;\r\nconst DisplayedUsername = styled.span`\r\n  align-items: center;\r\n  transform: translate(0, 30%);\r\n  color: ${(props) => ( props.TextColorInput ? props.TextColorInput : \"\")};\r\n  margin-top: 1px;\r\n`;\r\nconst RightNavBarItems = styled.div`\r\n  display: flex;\r\n  width: 500px;\r\n  justify-content: flex-end;\r\n`;\r\nconst LeftNavBarItems = styled.div`\r\n  display: flex;\r\n  width: 450px;\r\n  justify-content: flex-start;\r\n`;\r\nconst NavBar = (props) => {\r\n  const IconStyle = {\r\n    marginRight: \"3px\",\r\n    marginTop: \"15px\",\r\n    fontSize: \"25px\"\r\n  }\r\n\r\n  return(\r\n    <StyledNavBar>\r\n      <LeftNavBarItems>\r\n          Hi! \r\n      </LeftNavBarItems>\r\n\r\n      <RightNavBarItems>\r\n        <CalendarTodayIcon style={IconStyle}/>\r\n        <NotesIcon style={IconStyle}/>\r\n        <SwitchIcon OnChangedColor={props.ColorChanged}/>\r\n        <UserIcon username={\"Amr R. Mohamed\"} OnChangedColor={props.RecieveColor}/>\r\n        <DisplayedUsername \r\n          TextColorInput={props.RecieveColor.UserIconTextColor}>\r\n          <bold>{\"Amr R. Mohamed\"}</bold>\r\n        </DisplayedUsername>\r\n      </RightNavBarItems>\r\n    </StyledNavBar>\r\n  ) \r\n}\r\n\r\n\r\n\r\n\r\nexport default NavBar;","E:\\project\\notesk\\src\\Routes\\Notes\\Note\\Note.js",[],"E:\\project\\notesk\\src\\Routes\\Notes\\CreateNote\\CreateNote.js",[],"E:\\project\\notesk\\src\\Routes\\Calendar\\CalendarForm.js",["124","125","126","127","128","129","130","131","132","133","134"],"E:\\project\\notesk\\src\\UI\\UserInput.js",[],"E:\\project\\notesk\\src\\UI\\Modal.js",[],"E:\\project\\notesk\\src\\UI\\Button.js",[],"E:\\project\\notesk\\src\\UI\\Switch.js",[],"E:\\project\\notesk\\src\\UI\\UserIcon.js",[],"E:\\project\\notesk\\src\\UI\\TextArea.js",[],"E:\\project\\notesk\\src\\Routes\\Calendar\\event-utils.js",[],"E:\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\ScheduleForm.js",["135","136","137"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport NoteContainer from '../../../UI/Modal'; \r\nimport FadeIn  from 'react-fade-in'; \r\n// import {TitleContainer, DescriptionContainer, URLContainer} from './Containers/InputContainer';\r\n// import {CalenderContianer, TimerContainer} from './Containers/DropDownContainer';\r\n// import {FontColorContainer} from './Containers/ColorContainer';\r\nimport {SubmissionContainer} from './Containers/submitButtonContainer'; \r\n// import {RDContainer} from './Containers/DaysContainer';\r\nimport { CloseOutlined, CloseCircleOutlined} from \"@ant-design/icons\";\r\n\r\nconst InfoContainer = styled.div`\r\n    width: 440px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    margin: 4px;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nconst Schedule = (props) => {\r\n    //Close is not hovered on color style \r\n    const VisibilityStle1 = {\r\n        marginRight: \"4px\", \r\n        marginLeft:\"95%\",\r\n        marginBottom:\"15px\" , \r\n        fontSize: \"21px\", \r\n        color : props.ScheduleColor.IconC\r\n    }\r\n    //Close is hovered on color style \r\n    const VisibilityStle2 = {\r\n        marginRight: \"4px\", \r\n        marginLeft:\"95%\",\r\n        marginBottom:\"15px\" , \r\n        fontSize: \"26px\", \r\n        color : props.ScheduleColor.IconC\r\n    }\r\n    // //This is for submission once it is clicked there will be a toggel\r\n    const [getSubmitClicked, ChangeSubmitClicked] = useState(props.SubmitIsClicked)\r\n    // //Clicked Date in the calender\r\n    // const [getClickedStartDate, ChangeClickedStartDate] = useState(props.SelectedStartDateClicked)\r\n    // const [getClickedEndDate, ChangeClickedEndDate] = useState(props.SelectedEndDateClicked)\r\n    // //Id for each Event\r\n    // const [IdCounter, ChnageIdCounter] = useState(0)\r\n    // //Title Area\r\n    // const [getTitleValue, ChangeTitleValu] = useState()\r\n    // const [TitlePlaceHoldervalue,ChangeTitlePlaceHolder] = useState(\"Title ...\")\r\n    // //Description Area\r\n    // const [getDescriptionValue, ChangeDescriptionValu] = useState()\r\n    // const [DescriptionPlaceHoldervalue,ChangeDescriptionPlaceHolder] = useState(\"Description ...\")\r\n    // //URL Area\r\n    // const [getURLValue, ChangegetURLValue] = useState()\r\n    // const [URLPlaceHolder,ChangeURLPlaceHolder] = useState(\"Optional Attached Link For Description ...\")\r\n    // //Date Value Area From\r\n    // const [getFormDateValue, ChangeFormDateValue] = useState()\r\n    // //Date Value Area To\r\n    // const [getToDateValue, ChangeToDateValue] = useState()\r\n    // //Time Values Area Started\r\n    // const [GetStartHoursValue, ChangeGetStartHourValue ]= useState()\r\n    // const [GetStartMinutsValue, ChangeGetStartMinutsValue ]= useState()\r\n    // const [GetStartDayValue, ChangeGetStartDayValue ]= useState()\r\n    // //Time Values Area Ended\r\n    // const [GetEndHoursValue, ChangeGetEndHourValue ]= useState()\r\n    // const [GetEndMinutsValue, ChangeGetEndMinutsValue ]= useState()\r\n    // const [GetEndDayValue, ChangeGetEndDayValue ]= useState()\r\n    // //Values of Repeated Days\r\n    // const [getRDValue, ChangeRDValu] = useState()\r\n    // //The collection of Data to create the Event\r\n    // const [CreateEvent, ChnageEventInfo]=useState()\r\n    //     {\r\n    //         id: `$ChnageIdCounter(prevCount => prevCount + 1)`,  \r\n    //         title: 'Testoing for more ', \r\n    //         start: '2021-01-30T12:30:00Z',\r\n    //         textColor:\"pink\", \r\n    //         end: '2021-02-02T13:30:00Z',\r\n    //         description: 'lets play some game s', \r\n    //         display: 'list-item', \r\n    //         backgroundColor:`${props.backGroundColorInput ? props.backGroundColorInput : \"black\"}`,\r\n    //         daysOfWeek: [ '1','4','5' ], //https://fullcalendar.io/docs/recurring-events\r\n    //         startTime: '10:45:00',\r\n    //         endTime: '12:45:00', \r\n    //     }\r\n    // )\r\n\r\n    const [isClode, ChangeIsClosed] = useState(true)\r\n\r\n   return(\r\n    <FadeIn>\r\n        <NoteContainer\r\n            position= {\"relative\"}\r\n            width= {\"520px\"}\r\n            margin= {\"30px auto 20px auto\"}\r\n            padding= {\"15px\"}\r\n            boxShadowValue= {\"0 1px 5px rgb(138, 137, 137)\"}\r\n            borderRadiusValue= {\"7px\"}\r\n            resizeValue={\"both\"}\r\n            backGroundColorValue={props.ScheduleColor.NotekBGC}\r\n            FontColorValue={props.ScheduleColor.NoteFC}\r\n            >\r\n                {isClode ? \r\n                    <CloseOutlined onMouseEnter={() =>ChangeIsClosed(false)} style={VisibilityStle1}/> \r\n                : \r\n                    <CloseCircleOutlined onClick={()=> props.CloseIsCliced(false)} onMouseLeave={() =>ChangeIsClosed(true)} style={VisibilityStle2}/>\r\n                }\r\n                {/* {<TitleContainer \r\n                    SubmitTitle={(value) => ChangeTitleValu(value)}\r\n                    SubmitTitlePlaceHolder={TitlePlaceHoldervalue}\r\n                    ScheduleColor={props.ScheduleColor}\r\n                    />} */}\r\n                {/* {<DescriptionContainer \r\n                    Description={(value) => ChangeDescriptionValu(value)}\r\n                    SubmitDescriptionPlaceHolder={DescriptionPlaceHoldervalue}\r\n                    ScheduleColor={props.ScheduleColor}\r\n                    />}\r\n                {<URLContainer \r\n                    URLOption={(value) => ChangegetURLValue(value)}\r\n                    SubmitURLPlaceHolder={URLPlaceHolder}\r\n                    ScheduleColor={props.ScheduleColor}\r\n                    />}\r\n                {<CalenderContianer \r\n                    SubmitFromDateSelected={(value) => ChangeFormDateValue(value)} \r\n                    SubmitToDateSelected={(value) => ChangeToDateValue(value)} \r\n                    RetrunClickedDate={getClickedStartDate}\r\n                    RetrunClickedEndDate={getClickedEndDate}\r\n                    ScheduleColor={props.ScheduleColor}\r\n                    />}\r\n                {<TimerContainer\r\n                    SubmitFromHourSelected={(value) => ChangeGetStartHourValue(value)}\r\n                    SubmitToHourlected={(value) => ChangeGetEndHourValue(value)}\r\n                    SubmitFromMinutsSelected={(value) => ChangeGetStartMinutsValue(value)}\r\n                    SubmitToMinutsSelected={(value) => ChangeGetEndMinutsValue(value)}\r\n                    SubmitFromDayValueSelected={(value) => ChangeGetStartDayValue(value)}\r\n                    SubmitToDayValueSelected={(value) => ChangeGetEndDayValue(value)} \r\n                    ScheduleColor={props.ScheduleColor}/>}\r\n                {<RDContainer \r\n                    SubmitNumberOfRP={(value) => ChangeRDValu(value)} \r\n                    ScheduleColor={props.ScheduleColor}/>} */}\r\n                {<SubmissionContainer \r\n\r\n                    \r\n\r\n                    //the following props is what we recieve from submission when we click on the button and it is coming from calendar file\r\n                    SubmitisClicked={(value)=>(props.SubmitIsClicked(value))}\r\n                    // SubmissionEvent={(value)=> props.GetEventValues(value)}\r\n                    SendEvemt={(value) =>props.GetEventValues(value) }\r\n                    // //The following props is used to send data to the calender and we are checking that in the submission\r\n                    // PassIdCounter={IdCounter}\r\n                    // //Title part\r\n                    // PassTitleValue={getTitleValue}\r\n                    // ChangePassTitlePlaceHolder={(value) => (ChangeTitlePlaceHolder(value))}\r\n                    // //Description Par\r\n                    // PassDescriptionValue={getDescriptionValue}\r\n                    // ChangeDescriptionPlaceHolder={(value) => ChangeDescriptionPlaceHolder(value)}\r\n                    // //Url\r\n                    // PassURLValue={getURLValue}\r\n                    // //From Data\r\n                    // PassFromDateValue={getFormDateValue}\r\n                    // //To Data\r\n                    // PassToDateValue={getToDateValue}\r\n                    // //Start Time\r\n                    // PassStartHour={GetStartHoursValue}\r\n                    // PassStartMinut={GetStartMinutsValue}\r\n                    // PassStartDayValue={GetStartDayValue}\r\n                    // //EndTime\r\n                    // PassEndHour={GetEndHoursValue}\r\n                    // PassEndMinut={GetEndMinutsValue}\r\n                    // PassEndDayValue={GetEndDayValue}\r\n                    // //Repeated Days\r\n                    // PassRepeatedDaysValue={getRDValue}\r\n                    // // PassTextColor={}\r\n                    // // PassbackgroundColor={}\r\n                    // // Passdisplay={}\r\n                    // ScheduleColor={props.ScheduleColor}\r\n                    />} \r\n        </NoteContainer>\r\n    </FadeIn>\r\n    )\r\n}\r\n\r\nexport default Schedule;\r\n","E:\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\submitButtonContainer.js",["138","139","140"],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":9,"column":8,"nodeType":"147","messageId":"148","endLine":9,"endColumn":15},{"ruleId":"145","severity":1,"message":"149","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":14},{"ruleId":"145","severity":1,"message":"149","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":14},{"ruleId":"145","severity":1,"message":"150","line":3,"column":52,"nodeType":"147","messageId":"148","endLine":3,"endColumn":67},{"ruleId":"151","severity":1,"message":"152","line":3,"column":1,"nodeType":"153","messageId":"154","endLine":5,"endColumn":15},{"ruleId":"145","severity":1,"message":"155","line":6,"column":10,"nodeType":"147","messageId":"148","endLine":6,"endColumn":23},{"ruleId":"145","severity":1,"message":"156","line":6,"column":25,"nodeType":"147","messageId":"148","endLine":6,"endColumn":39},{"ruleId":"145","severity":1,"message":"157","line":7,"column":8,"nodeType":"147","messageId":"148","endLine":7,"endColumn":17},{"ruleId":"145","severity":1,"message":"158","line":2,"column":24,"nodeType":"147","messageId":"148","endLine":2,"endColumn":34},{"ruleId":"145","severity":1,"message":"159","line":8,"column":26,"nodeType":"147","messageId":"148","endLine":8,"endColumn":39},{"ruleId":"145","severity":1,"message":"160","line":21,"column":10,"nodeType":"147","messageId":"148","endLine":21,"endColumn":23},{"ruleId":"145","severity":1,"message":"161","line":21,"column":25,"nodeType":"147","messageId":"148","endLine":21,"endColumn":44},{"ruleId":"145","severity":1,"message":"162","line":28,"column":11,"nodeType":"147","messageId":"148","endLine":28,"endColumn":22},{"ruleId":"145","severity":1,"message":"163","line":29,"column":11,"nodeType":"147","messageId":"148","endLine":29,"endColumn":21},{"ruleId":"145","severity":1,"message":"164","line":30,"column":11,"nodeType":"147","messageId":"148","endLine":30,"endColumn":18},{"ruleId":"145","severity":1,"message":"165","line":31,"column":9,"nodeType":"147","messageId":"148","endLine":31,"endColumn":20},{"ruleId":"166","severity":1,"message":"167","line":89,"column":20,"nodeType":"168","messageId":"169","endLine":89,"endColumn":22},{"ruleId":"170","severity":1,"message":"171","line":92,"column":61,"nodeType":"172","messageId":"173","endLine":92,"endColumn":62},{"ruleId":"170","severity":1,"message":"171","line":93,"column":58,"nodeType":"172","messageId":"173","endLine":93,"endColumn":59},{"ruleId":"145","severity":1,"message":"174","line":12,"column":7,"nodeType":"147","messageId":"148","endLine":12,"endColumn":20},{"ruleId":"145","severity":1,"message":"175","line":39,"column":12,"nodeType":"147","messageId":"148","endLine":39,"endColumn":28},{"ruleId":"145","severity":1,"message":"176","line":39,"column":30,"nodeType":"147","messageId":"148","endLine":39,"endColumn":49},{"ruleId":"170","severity":1,"message":"171","line":60,"column":19,"nodeType":"172","messageId":"173","endLine":60,"endColumn":20},{"ruleId":"145","severity":1,"message":"177","line":66,"column":12,"nodeType":"147","messageId":"148","endLine":66,"endColumn":19},{"ruleId":"145","severity":1,"message":"178","line":66,"column":21,"nodeType":"147","messageId":"148","endLine":66,"endColumn":31},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'Weather' is defined but never used.","Identifier","unusedVar","'styled' is defined but never used.","'UserAddOutlined' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'LoginOutlined' is defined but never used.","'LogoutOutlined' is defined but never used.","'AppButton' is defined but never used.","'formatDate' is defined but never used.","'createEventId' is defined but never used.","'currentEvents' is assigned a value but never used.","'ChangecurrentEvents' is assigned a value but never used.","'getIsSubmit' is assigned a value but never used.","'getIsClose' is assigned a value but never used.","'isTitle' is assigned a value but never used.","'calendarApi' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'InfoContainer' is assigned a value but never used.","'getSubmitClicked' is assigned a value but never used.","'ChangeSubmitClicked' is assigned a value but never used.","'IsShown' is assigned a value but never used.","'setIsShown' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]