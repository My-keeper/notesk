[{"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\index.js":"1","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\App.js":"2","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\serviceWorker.js":"3","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\API\\Weather.js":"4","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Signup\\Signup.js":"5","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\Calendar.js":"6","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Login\\Login.js":"7","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Notes\\Notes.js":"8","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\API\\API.js":"9","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Login\\LoginForm.js":"10","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Signup\\SignupForm.js":"11","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\BlurDiv.js":"12","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\NavBar.js":"13","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Footer.js":"14","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Notes\\CreateNote\\CreateNote.js":"15","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Notes\\Note\\Note.js":"16","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\CalendarCollection1.js":"17","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\UserInput.js":"18","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Modal.js":"19","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Button.js":"20","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\UserIcon.js":"21","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Switch.js":"22","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\TextArea.js":"23","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\CalendarForm1.js":"24","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Schedule1.js":"25","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\event-utils.js":"26","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\InputContainer.js":"27","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DaysContainer.js":"28","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DropDownContainer.js":"29","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\SubmitButton1.js":"30","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\RepeatedDaysSelected.js":"31","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\DateSelected.js":"32","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\TimeSelected.js":"33","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Select.js":"34","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\OptionsForm.js":"35"},{"size":497,"mtime":1612966679861,"results":"36","hashOfConfig":"37"},{"size":2594,"mtime":1612967108995,"results":"38","hashOfConfig":"37"},{"size":5227,"mtime":1612966679862,"results":"39","hashOfConfig":"37"},{"size":1136,"mtime":1612967108994,"results":"40","hashOfConfig":"37"},{"size":484,"mtime":1612966679848,"results":"41","hashOfConfig":"37"},{"size":491,"mtime":1612967108996,"results":"42","hashOfConfig":"37"},{"size":479,"mtime":1612966679842,"results":"43","hashOfConfig":"37"},{"size":2053,"mtime":1612967109020,"results":"44","hashOfConfig":"37"},{"size":327,"mtime":1612966679834,"results":"45","hashOfConfig":"37"},{"size":3822,"mtime":1612966679843,"results":"46","hashOfConfig":"37"},{"size":8915,"mtime":1612967109021,"results":"47","hashOfConfig":"37"},{"size":543,"mtime":1612966679850,"results":"48","hashOfConfig":"37"},{"size":3249,"mtime":1612967109024,"results":"49","hashOfConfig":"37"},{"size":521,"mtime":1612966679854,"results":"50","hashOfConfig":"37"},{"size":6099,"mtime":1612966679845,"results":"51","hashOfConfig":"37"},{"size":6058,"mtime":1612967109018,"results":"52","hashOfConfig":"37"},{"size":2847,"mtime":1613049471612,"results":"53","hashOfConfig":"37"},{"size":4385,"mtime":1613049471649,"results":"54","hashOfConfig":"37"},{"size":3512,"mtime":1612967109023,"results":"55","hashOfConfig":"37"},{"size":2970,"mtime":1612967109022,"results":"56","hashOfConfig":"37"},{"size":965,"mtime":1612966679859,"results":"57","hashOfConfig":"37"},{"size":4700,"mtime":1612967109026,"results":"58","hashOfConfig":"37"},{"size":3062,"mtime":1612966679858,"results":"59","hashOfConfig":"37"},{"size":3558,"mtime":1612982622739,"results":"60","hashOfConfig":"37"},{"size":7783,"mtime":1613061605366,"results":"61","hashOfConfig":"37"},{"size":398,"mtime":1612966679840,"results":"62","hashOfConfig":"37"},{"size":4731,"mtime":1612967109011,"results":"63","hashOfConfig":"37"},{"size":1237,"mtime":1613062512037,"results":"64","hashOfConfig":"37"},{"size":9995,"mtime":1613049471635,"results":"65","hashOfConfig":"37"},{"size":1890,"mtime":1613049471638,"results":"66","hashOfConfig":"37"},{"size":3646,"mtime":1613062835731,"results":"67","hashOfConfig":"37"},{"size":4607,"mtime":1613049471617,"results":"68","hashOfConfig":"37"},{"size":4482,"mtime":1613049471626,"results":"69","hashOfConfig":"37"},{"size":3210,"mtime":1612967109025,"results":"70","hashOfConfig":"37"},{"size":3235,"mtime":1613049471619,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1u0q2q7",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"74"},"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\index.js",[],["155","156"],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\App.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\serviceWorker.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\API\\Weather.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Signup\\Signup.js",["157"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Nav from \"../../UI/NavBar\";\r\nimport SignupForm from \"./SignupForm\";\r\nimport BlurDiv from \"../../UI/BlurDiv\";\r\n\r\nconst Signup = (props) => {\r\n  return (\r\n    <div>\r\n      <BlurDiv blurDegree={\"1.4px\"}/>\r\n      <Nav ColorChanged={props.colorchanged} RecieveColor={props.Color}/>\r\n      <SignupForm ColorChanged={props.colorchanged} RecieveColor={props.Color}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\Calendar.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Login\\Login.js",["158"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Nav from \"../../UI/NavBar\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport BlurDiv from \"../../UI/BlurDiv\";\r\n\r\nconst Login = (props) => {\r\n  return (\r\n    <div>\r\n      <BlurDiv blurDegree={\"1.4px\"}/>\r\n      <Nav ColorChanged={props.colorchanged} RecieveColor={props.Color}/>\r\n      <LoginForm ColorChanged={props.colorchanged} RecieveColor={props.Color}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Notes\\Notes.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\API\\API.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Login\\LoginForm.js",["159"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { MailOutlined, KeyOutlined, LoginOutlined, UserAddOutlined} from \"@ant-design/icons\";\r\nimport UserInput from \"../../UI/UserInput\";\r\nimport NoteContainer from '../../UI/Modal';\r\nimport Button from \"../../UI/Button\";\r\nimport FadeIn  from \"react-fade-in\";\r\n\r\n\r\nconst InfoContainer = styled.div`\r\n    width: 440px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    margin: 4px;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nconst SignupForm = (props) => {\r\n    const IconColor = { \r\n        color : props.RecieveColor.IconC, \r\n        fontSize:\"25px\", \r\n        marginRight:\"9px\", \r\n        marginTop:\"4px\" }\r\n    \r\n    const ButtonIconColor = { \r\n        color : props.RecieveColor.IconC, \r\n        fontSize:\"20px\", \r\n        marginRight:\"9px\", \r\n        marginTop:\"4px\" }\r\n\r\n    const Email = <InfoContainer>\r\n            <FadeIn><MailOutlined style={IconColor}/></FadeIn>\r\n            <FadeIn><UserInput \r\n            inputType={\"text\"}\r\n            name=\"title\"\r\n            PlaceholderValue={\"E-mail\"}\r\n            widthValue={\"380px\"}\r\n            paddingVale={\"4px\"}\r\n            outlineValue={\"none\"}\r\n            fontSizeValue={\"1.2em\"}\r\n            fontFamilyValue={\"inherit\"}\r\n            IsCalledValue={\"FOCUS\"} \r\n            borderRadiusValue= {\"7px\"}\r\n            backGroundColorValue={props.RecieveColor.UserInputBGC}\r\n            FontColorValue={props.RecieveColor.UserInputFC}\r\n            PlaceHolderColorValue={props.RecieveColor.UserInputPHC}\r\n            borderColorValue={props.RecieveColor.BorderColor}\r\n            BorderValue={\"solid\"}\r\n            borderWidthValue=\"thin\"\r\n            marginRightValue={\"10px\"}\r\n            /></FadeIn>\r\n        </InfoContainer>\r\n    \r\n    const PassWord = <InfoContainer>\r\n            <FadeIn><KeyOutlined style={IconColor}/></FadeIn>\r\n            <FadeIn><UserInput \r\n            inputType={\"text\"}\r\n            name=\"title\"\r\n            PlaceholderValue={\"Password\"}\r\n            widthValue={\"380px\"}\r\n            paddingVale={\"4px\"}\r\n            outlineValue={\"none\"}\r\n            fontSizeValue={\"1.2em\"}\r\n            fontFamilyValue={\"inherit\"}\r\n            IsCalledValue={\"FOCUS\"} \r\n            borderRadiusValue= {\"7px\"}\r\n            backGroundColorValue={props.RecieveColor.UserInputBGC}\r\n            FontColorValue={props.RecieveColor.UserInputFC}\r\n            PlaceHolderColorValue={props.RecieveColor.UserInputPHC}\r\n            borderColorValue={props.RecieveColor.BorderColor}\r\n            BorderValue={\"solid\"}\r\n            borderWidthValue=\"thin\"\r\n            marginRightValue={\"10px\"}\r\n            /></FadeIn>\r\n        </InfoContainer>\r\n   \r\n   const LoginButton = <FadeIn>\r\n            <Button\r\n            width={\"120px\"}\r\n            marginBottomValue={\"10px\"}\r\n            marginLeftValue={\"35%\"}\r\n            fontSizeValue={\"20px\"}\r\n            borderRadiusValue={\"15px\"}\r\n            backGroundColorValue={props.RecieveColor.LogSignColor}\r\n            FontColorValue={props.RecieveColor.IconC}\r\n            borderColorValue={props.RecieveColor.BorderColor}\r\n            BorderValue=\"solid\"\r\n            borderWidthValue=\"thin\"\r\n            paddingInputValue=\"2px\"\r\n            text = {\"Login\"} \r\n            icon = {<LoginOutlined style={ButtonIconColor}/>}\r\n            />\r\n        </FadeIn>\r\n\r\nreturn (\r\n    <FadeIn><NoteContainer\r\n    position= {\"relative\"}\r\n    width= {\"450px\"}\r\n    margin= {\"300px auto 20px auto\"}\r\n    padding= {\"15px\"}\r\n    boxShadowValue= {\"0 1px 5px rgb(138, 137, 137)\"}\r\n    borderRadiusValue= {\"20px\"}\r\n    resizeValue={\"both\"}\r\n    backGroundColorValue={props.RecieveColor.NotekBGC}\r\n    >\r\n        {Email}\r\n        {PassWord}\r\n        {LoginButton}\r\n    </NoteContainer></FadeIn>\r\n)\r\n};\r\n\r\nexport default SignupForm; ","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Signup\\SignupForm.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\BlurDiv.js",["160"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\n{/* <BlurDiv style={{ height: \"100%\" }} blurDegree={\"3px\"}>\r\n<StyledImage src={backgroundImage} alt=\"oops\" />\r\n</BlurDiv> */}\r\n\r\n\r\nconst StyledBlurDiv = styled.div`\r\nbackdrop-filter: blur(${(props) => props.blurDegree});\r\nposition: absolute;\r\nheight: 100%;\r\nwidth: 100%;\r\n`;\r\n\r\nconst BlurDiv = (props) => {\r\n  return (\r\n    <StyledBlurDiv style={props.style} blurDegree={props.blurDegree}>\r\n      {props.children}\r\n    </StyledBlurDiv>\r\n  );\r\n};\r\n\r\nexport default BlurDiv;\r\n","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\NavBar.js",["161","162","163"],"import React, {useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SwitchIcon from './Switch'\r\nimport FadeIn from 'react-fade-in';\r\nimport UserIcon from \"./UserIcon\";\r\nimport { LoginOutlined, LogoutOutlined,AlipayOutlined } from \"@ant-design/icons\";\r\nimport AppButton from \"./Button\";\r\nimport NotesIcon from '@material-ui/icons/Notes';\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\r\nimport NoteAddOutlinedIcon from '@material-ui/icons/NoteAddOutlined';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst StyledNavBar = styled(FadeIn)` \r\n    align-items: center; \r\n    justify-content: space-between;\r\n    height: 50px;\r\n    background-color: #f5ba13;\r\n    margin: auto -16px;\r\n    padding: 16px 32px;\r\n    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.3);\r\n    display: flex;\r\n`;\r\nconst DisplayedUsername = styled.span`\r\n  align-items: center;\r\n  transform: translate(0, 30%);\r\n  color: ${(props) => ( props.TextColorInput ? props.TextColorInput : \"\")};\r\n  margin-top: 1px;\r\n`;\r\nconst RightNavBarItems = styled.div`\r\n  display: flex;\r\n  width: 500px;\r\n  justify-content: flex-end;\r\n`;\r\nconst LeftNavBarItems = styled.div`\r\n  display: flex;\r\n  width: 450px;\r\n  justify-content: flex-start;\r\n`;\r\nconst NavBar = (props) => {\r\n  const IconStyle = {\r\n    marginLeft: \"5px\",\r\n    fontSize: \"28px\" ,\r\n    color: props.RecieveColor.NavIconColor\r\n  }\r\n  //Close is not hovered on color style\r\n  const VisibilityStle1 = {\r\n    marginTop: \"13px\",\r\n    marginRight: \"8px\",\r\n    fontSize: \"28px\",\r\n    color: props.RecieveColor.NavIconColor\r\n };\r\n  //Close is hovered on color style\r\n  const VisibilityStle2 = {\r\n      marginTop: \"13px\",\r\n      marginRight: \"4px\",\r\n      fontSize: \"34px\",\r\n      color: props.RecieveColor.NavIconColor\r\n  };\r\n  //This is for change to calendar link\r\n  const [isCalendar, ChangeIsCalendar] = useState(true);\r\n  const GoToCalendar = isCalendar ? \r\n      (<CalendarTodayIcon onMouseEnter={() => ChangeIsCalendar(false)} style={VisibilityStle1} />)  \r\n      : \r\n      (<Link to={\"/calendar\"}> \r\n        <EventAvailableIcon  onMouseLeave={() => ChangeIsCalendar(true)} style={VisibilityStle2} />\r\n        </Link>)\r\n    \r\n  //This is for change to Notes link\r\n  const [isNote, ChangeIsNote] = useState(true);\r\n  const GoToNote = isNote ? \r\n      (<NoteAddOutlinedIcon onMouseEnter={() => ChangeIsNote(false)} style={VisibilityStle1} />)  \r\n      : \r\n      (<Link to={\"/notes\"} >\r\n      <NotesIcon   onMouseLeave={() => ChangeIsNote(true)} style={VisibilityStle2} />\r\n      </Link>)\r\n\r\n  return(\r\n    <StyledNavBar>\r\n      <LeftNavBarItems>\r\n        <FadeIn><AlipayOutlined style={IconStyle}/></FadeIn>\r\n      </LeftNavBarItems>\r\n\r\n      <RightNavBarItems>\r\n        {GoToCalendar}\r\n        {GoToNote}\r\n        <SwitchIcon OnChangedColor={props.ColorChanged}/>\r\n        <UserIcon username={\"Amr R. Mohamed\"} OnChangedColor={props.RecieveColor}/>\r\n        <DisplayedUsername \r\n          TextColorInput={props.RecieveColor.UserIconTextColor}>\r\n          <span style={{ fontWeight: \"bold\"}}>{\"Amr R. Mohamed\"}</span>\r\n        </DisplayedUsername>\r\n      </RightNavBarItems>\r\n    </StyledNavBar>\r\n  ) \r\n}\r\n\r\n\r\n\r\n\r\nexport default NavBar;","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Footer.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Notes\\CreateNote\\CreateNote.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Notes\\Note\\Note.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\CalendarCollection1.js",["164","165","166"],"import React, { useState } from \"react\"; \r\nimport CalendarForm from \"./CalendarForm1\";\r\nimport ScheduleForm from \"./ScheduleForm/Schedule1\";\r\nimport styled from \"styled-components\";\r\nimport BlurDiv from \"../../UI/BlurDiv\";\r\n\r\nconst CalenderContainer = styled.div`\r\n    margin: 10px;\r\n    font-family: Arial, Helvetica Neue, Helvetica, sans-serif;\r\n    font-size: 16px;\r\n    color: cornflowerblue;  \r\n`;\r\nconst CalendarCollection = (props) => {\r\n  //Collection of Events\r\n  const [currentEvents, ChangeEventList] = useState([\r\n    {\r\n      id: \"1\",\r\n      title: \"Testoing for more \",\r\n      start: \"2021-02-13T12:30:00Z\",\r\n      end: \"2021-02-14T13:30:00Z\",\r\n      textColor: \"pink\",\r\n      description: \"lets play some game s\",\r\n      display: \"list-item\",\r\n      backgroundColor: \"black\",\r\n    },\r\n    {\r\n      id: \"1\",\r\n      title: \"Doc appoinmnet \",\r\n      start: \"2021-02-13\",\r\n      end: \"2021-02-14\",\r\n      startTime: \"10:45:00\",\r\n      endTime: \"12:45:00\",\r\n      textColor: \"pink\",\r\n      daysOfWeek: [\"1\"], //https://fullcalendar.io/docs/recurring-events\r\n      // daysOfWeek: [ '1','4','5' ], //https://fullcalendar.io/docs/recurring-events\r\n      display: \"list-item\",\r\n      textColor: \"black\",\r\n    },\r\n  ]);\r\n\r\n  const [showSchedule, ChangeShowSchedule ] =useState(false) // to show the shedule model \r\n  const [SelectedStartedData, ChangeStartedData] = useState() //started selected data \r\n  const [SelectedEndedData, ChangeEndedData] = useState(); // ended slected data  \r\n  const calendarForm = (\r\n    <CalendarForm\r\n      SendingEvents={currentEvents}\r\n      CallingSchedule={(value) => ChangeShowSchedule(value)}\r\n      GetStartDate={(value) => ChangeStartedData(value)}\r\n      GetEndDate={(value) => ChangeEndedData(value)}\r\n    />\r\n  );\r\n    const scheduleForm = (\r\n      <ScheduleForm\r\n        ScheduleColor={props.RecieveColor}\r\n        CallingCalendar={(value) => ChangeShowSchedule(value)}\r\n        SendSelectedSD={SelectedStartedData} //Selected Start Data\r\n        SendSelectedED={SelectedEndedData} //Selected End Data\r\n      />\r\n    );\r\n  return (\r\n    <CalenderContainer>\r\n      <div\r\n        style={{\r\n          zIndex: \"10\",\r\n          position: \"absolute\",\r\n          left: \"35%\",\r\n          transition: \" all 0.3s easee-out\",\r\n          transform: showSchedule ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n          opacity: showSchedule ? \"1\" : \"0\",\r\n          backdropFilter: \"blur(1.4)\"\r\n        }}\r\n      >\r\n        {scheduleForm}\r\n      </div>\r\n      <div\r\n        onClick={() => (showSchedule ? ChangeShowSchedule(false) : null)}\r\n        style={{\r\n          zIndex: \"1\",\r\n          filter: showSchedule ? \"blur(1px)\" : null,\r\n          opacity: showSchedule ? \"0.2\" : \"1\",\r\n        }}\r\n      >\r\n        {calendarForm}\r\n      </div>\r\n    </CalenderContainer>\r\n  );\r\n};\r\nexport default CalendarCollection;\r\n","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\UserInput.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Modal.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Button.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\UserIcon.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Switch.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\TextArea.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\CalendarForm1.js",["167","168","169"],"import React, { useState } from \"react\";\r\nimport FullCalendar, { formatDate } from \"@fullcalendar/react\";\r\nimport listPlugin from \"@fullcalendar/list\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport { INITIAL_EVENTS, createEventId } from \"./event-utils\";\r\nconst CalendarForm1 = (props) => {\r\n  const weekendsVisible = true;\r\n  const [getEvent, ChangegetEvent] = useState(props.SendingEvents ? props.SendingEvents :[]); \r\n  const [StartDate ,ChangeStartData ]=useState(\"\")  // Save Selected Start Data\r\n  const [EndDate ,ChangeEndData ]=useState(\"\") // Save Selected End Data\r\n  props.GetStartDate(StartDate); // Send Selected Start Data\r\n  props.GetEndDate(EndDate); // Send Selected End Data\r\n  const handleDateSelect = (selectInfo) => {\r\n    ChangeStartData(selectInfo.startStr); // Selected Start Data \r\n    ChangeEndData(selectInfo.endStr); // Selected End Data\r\n    props.CallingSchedule(true);\r\n  };\r\n   \r\n  const FullCalendarForm = <FullCalendar\r\n    plugins= {[dayGridPlugin, timeGridPlugin, interactionPlugin, listPlugin]}\r\n    headerToolbar= {{\r\n      left: \"prev,next today\",\r\n      center: \"title\",\r\n      right: \"dayGridMonth,timeGridWeek,timeGridDay,list\",\r\n    }}\r\n    initialView=\"dayGridMonth\"\r\n    titleFormat={{ month: \"short\", year: \"numeric\", day: \"numeric\" }} //this is for the tile what should be there for the user\r\n    height=\"850px\" //get fixed height for the calendar\r\n    contentHeight=\"800px\" //get the content height for the calendar \r\n    handleWindowResize=\"true\"\r\n    locale=\"En\" //this is for the languages option\r\n    timeZone=\"canada/nl\" //to get the time zone of your location that is why we will be using the location in the sigup or make the browser detecte it\r\n    editable={true} //to edit the info\r\n    selectable={true} //to enable selection\r\n    selectMirror={true}\r\n    dayMaxEvents={true}\r\n    weekends={weekendsVisible}\r\n    eventDisplay=\"block\" //this is used to high light the event that are created\r\n    eventTextColor=\"black\" //this is for the styling of the text for each event\r\n    eventBackgroundColor=\"cornflowerblue\" //This is for the background of each event\r\n    eventBorderColor=\"pink\" //The border color\r\n    initialEvents={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\r\n    select={handleDateSelect}\r\n    events={getEvent}\r\n    // eventContent={renderEventContent} // custom render function\r\n    // eventClick={handleEventClick}\r\n    // eventsSet={handleEvents} // called after events are initialized/added/changed/removed\r\n  /> \r\n  \r\n  return  FullCalendarForm;\r\n};\r\n\r\nexport default CalendarForm1;\r\n\r\n// handleWeekendsToggle = () => {\r\n//   setState({\r\n//     weekendsVisible: !state.weekendsVisible\r\n//   })\r\n// }\r\n\r\n// const handleEventClick = (clickInfo) => {\r\n//   if (alert(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\r\n//     clickInfo.event.remove()\r\n//   }\r\n// }\r\n\r\n//   handleEvents = (events) => {\r\n//     setState({\r\n//       currentEvents: events\r\n//     })\r\n//   }\r\n\r\n// }\r\n\r\n// function renderEventContent(eventInfo) {\r\n//   return (\r\n//     <>\r\n//       <b>{eventInfo.timeText}</b>\r\n//       <i>{eventInfo.event.title}</i>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// function renderSidebarEvent(event) {\r\n//   return (\r\n//     <li key={event.id}>\r\n//       <b>{formatDate(event.start, {year: 'numeric', month: 'short', day: 'numeric'})}</b>\r\n//       <i>{event.title}</i>\r\n//     </li>\r\n//   )\r\n// }\r\n","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Schedule1.js",["170","171","172","173","174","175","176","177","178","179","180","181","182","183"],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\event-utils.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\InputContainer.js",["184"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport UserInput from '../../../../UI/UserInput'\r\nimport TextArea from '../../../../UI/TextArea';\r\nimport FadeIn  from 'react-fade-in';\r\nimport { LinkOutlined} from \"@ant-design/icons\";\r\nimport { Title } from '@material-ui/icons';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nconst InfoContainer = styled.div`\r\n    width: 440px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    margin: 4px;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nconst TitleContainer = (props) => {\r\n    const IconColor = { \r\n        color : props.ScheduleColor.IconC, \r\n        fontSize:\"25px\", \r\n        marginRight:\"15px\", \r\n        marginTop:\"4px\" \r\n    } \r\n    const title = <InfoContainer>\r\n        <FadeIn><Title style={IconColor}/></FadeIn>\r\n        <FadeIn><UserInput \r\n        key={`title` + 1}\r\n        // This is to change the Value of Title based on the input coming from schedule\r\n        onchangeValue={(event)=>props.SubmitTitle(event.target.value)}\r\n        //This is the Props that is coming from Schedule From once I click on submit\r\n        PlaceholderValue={props.SubmitTitlePlaceHolder}\r\n        name=\"title\"\r\n        inputType={\"text\"} \r\n        widthValue={\"425px\"}\r\n        paddingVale={\"4px\"}\r\n        outlineValue={\"none\"}\r\n        fontSizeValue={\"1.2em\"}\r\n        fontFamilyValue={\"inherit\"}\r\n        IsCalledValue={\"FOCUS\"} \r\n        borderRadiusValue= {\"7px\"}\r\n        backGroundColorValue={props.ScheduleColor.UserInputBGC}\r\n        FontColorValue={props.ScheduleColor.UserInputFC}\r\n        PlaceHolderColorValue={props.ScheduleColor.UserInputPHC}\r\n        borderColorValue={props.ScheduleColor.BorderColor}  \r\n        BorderValue={\"solid\"}\r\n        borderWidthValue=\"thin\"\r\n        marginRightValue={\"10px\"}\r\n        /></FadeIn>\r\n    </InfoContainer>\r\n\r\n    return(title)\r\n}\r\n\r\nconst DescriptionContainer = (props) => {\r\n    const IconColor = { \r\n        color : props.ScheduleColor.IconC, \r\n        fontSize:\"25px\", \r\n        marginRight:\"15px\", \r\n        marginTop:\"4px\" \r\n    }\r\n    const Description = <InfoContainer>\r\n        <FadeIn><DescriptionIcon style={IconColor}/></FadeIn>\r\n        <FadeIn><TextArea\r\n        key={`Description`+1} \r\n        // This is to change the Value of Title based on the input \r\n        onchangeValue={(event)=>props.SubmitDescription(event.target.value)}\r\n        //This is the Props that is coming from Schedule From once I click on submit\r\n        PlaceholderValue={props.SubmitDescriptionPlaceHolder}\r\n        rows={3}\r\n        name=\"Description\"\r\n        inputType={\"text\"} \r\n        widthValue={\"425px\"}\r\n        paddingVale={\"4px\"}\r\n        outlineValue={\"none\"}\r\n        fontSizeValue={\"1.2em\"}\r\n        fontFamilyValue={\"inherit\"}\r\n        IsCalledValue={\"FOCUS\"} \r\n        borderRadiusValue= {\"7px\"}\r\n        backGroundColorValue={props.ScheduleColor.UserInputBGC}\r\n        FontColorValue={props.ScheduleColor.UserInputFC}\r\n        PlaceHolderColorValue={props.ScheduleColor.UserInputPHC}\r\n        borderColorValue={props.ScheduleColor.BorderColor}  \r\n        BorderValue={\"solid\"}\r\n        resizeValue={\"vertical\"}\r\n        borderWidthValue=\"thin\"\r\n        marginRightValue={\"10px\"}\r\n        /></FadeIn>\r\n    </InfoContainer>\r\n\r\n\r\n    return (Description)\r\n}\r\n\r\nconst URLContainer = (props) => {\r\n    const IconColor = { \r\n        color : props.ScheduleColor.IconC, \r\n        fontSize:\"25px\", \r\n        marginRight:\"15px\", \r\n        marginTop:\"4px\" \r\n    }\r\n    const URL = <InfoContainer>\r\n        <FadeIn><LinkOutlined style={IconColor}/></FadeIn>\r\n        <FadeIn><UserInput \r\n        key={`AttachedLinkDescription` }\r\n        // This is to change the Value of Title based on the input \r\n        onchangeValue={(event)=>props.URLOption(event.target.value)}\r\n        //This is the Props that is coming from Schedule From once I click on submit\r\n        PlaceholderValue={props.SubmitURLPH}\r\n        name=\"Url\"\r\n        inputType={\"text\"} \r\n        widthValue={\"425px\"}\r\n        paddingVale={\"4px\"}\r\n        outlineValue={\"none\"}\r\n        fontSizeValue={\"1.2em\"}\r\n        fontFamilyValue={\"inherit\"}\r\n        IsCalledValue={\"FOCUS\"} \r\n        borderRadiusValue= {\"7px\"}\r\n        backGroundColorValue={props.ScheduleColor.UserInputBGC}\r\n        FontColorValue={props.ScheduleColor.UserInputFC}\r\n        PlaceHolderColorValue={props.ScheduleColor.UserInputPHC}\r\n        borderColorValue={props.ScheduleColor.BorderColor}    \r\n        BorderValue={\"solid\"}\r\n        borderWidthValue=\"thin\"\r\n        marginRightValue={\"10px\"}\r\n        /></FadeIn>\r\n    </InfoContainer>\r\n\r\n\r\n    return (URL)\r\n}\r\n\r\nexport  {TitleContainer, DescriptionContainer, URLContainer};","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DaysContainer.js",["185"],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DropDownContainer.js",["186"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\"; \r\nimport FadeIn  from 'react-fade-in'; \r\nimport { CalendarOutlined , ClockCircleOutlined} from \"@ant-design/icons\"; \r\nimport DateSelected from './DataCollection/DateSelected';\r\nimport TimeSelected from './DataCollection/TimeSelected';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility'\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport { createEventId } from \"../../event-utils\";\r\n\r\nconst InfoContainer = styled.div`\r\n    width: 440px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    margin: 4px;\r\n    margin-bottom: 10px;\r\n`\r\nconst EachateContainer = styled.div`\r\n    width: 400px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: ${props => props.JustifyContentCalue};\r\n    margin: 4px;\r\n`\r\nconst DateContainer = styled.div`\r\n    width: 400px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n`\r\nconst CalenderContianer = (props) => {\r\n    //All Component Color Stle\r\n    const IconColor = { \r\n        color : props.ScheduleColor.IconC, \r\n        fontSize:\"25px\", \r\n        marginRight:\"15px\", \r\n        marginTop:\"4px\" \r\n    }\r\n\r\n    //Visable and unvisable color style \r\n    const VisibilityStle = {\r\n        marginRight: \"4px\", \r\n        marginLeft:\"4px\",\r\n        marginTop:\"6px\" , \r\n        fontSize: \"21px\", \r\n        color : props.ScheduleColor.IconC\r\n    }\r\n    \r\n    // This is a togole to change the state of the disabled and to change the icion as well \r\n    const isStartedData = props.SendIsStarted\r\n    const StartingDataIcion = <FadeIn><div  onClick={()=>props.SendChangeIsStarted(!isStartedData)}>\r\n            {isStartedData ?  \r\n                <VisibilityOffIcon style={VisibilityStle} /> \r\n            : \r\n                <VisibilityIcon style={VisibilityStle} />}\r\n        </div></FadeIn>\r\n    const isEndedData = props.SendIsEnded\r\n    const EndingDataIcion = <FadeIn><div  onClick={()=>props.SendChangeIsEnded(!isEndedData)}>\r\n            {isEndedData ?  <VisibilityOffIcon style={VisibilityStle} /> : <VisibilityIcon style={VisibilityStle} />}\r\n        </div></FadeIn>\r\n\r\n    const InconArea = <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-start\"}}>\r\n            <FadeIn><CalendarOutlined style={IconColor}/> </FadeIn>\r\n            {StartingDataIcion}\r\n            {EndingDataIcion}\r\n        </div>\r\n\r\n    //This is for the layout for Year Month Days\r\n    const Layout = ['','Year','Month','Day'] \r\n    const InfoArea = <EachateContainer JustifyContentCalue={\"space-between\" }>\r\n            {(isStartedData || isEndedData ) ? Layout.map((value, index) => \r\n                <FadeIn key={index+ createEventId()} ><span  style={{ padding: \"1px\" ,paddingTop: \"1px\" , fontSize: \"1.2em\", marginRight: \"30px\"}}>{value}</span></FadeIn> \r\n            ) : <FadeIn><span style={{ padding: \"1px\" ,paddingTop: \"1px\" , fontSize: \"1.2em\", marginRight: \"30px\"}}></span></FadeIn>}\r\n        </EachateContainer>\r\n\r\n    //Starting Data Area\r\n    const [fromData, ChangeFromDate] = useState(\"\") \r\n    const StartingData = <EachateContainer JustifyContentCalue={isStartedData ? \"space-between\" : \"\"}>\r\n        <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"1px\"}}>From</span></FadeIn>\r\n        {!isStartedData ? \r\n            <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"1px\", color:props.ScheduleColor.IconC}}>{props.SendSD}</span></FadeIn>\r\n        :\r\n            <DateSelected   \r\n                //The incoming dating is used to chagne the format of the date and then send that number to submission button\r\n                submitDateValue={(value) => ChangeFromDate(value)} \r\n                RecievedColor={props.ScheduleColor}\r\n        />}\r\n    </EachateContainer>\r\n    \r\n    // End Data Area\r\n    const [ToData, ChangeToDate] = useState()\r\n    const EndingingData = <EachateContainer JustifyContentCalue={isEndedData ? \"space-between\" : \"\"}>\r\n        <FadeIn><span style={{  padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"25px\"}}>To</span></FadeIn>\r\n        {!isEndedData ? \r\n            <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"1px\", color:props.ScheduleColor.IconC }}>{props.SendED}</span></FadeIn>\r\n        :\r\n            <DateSelected   \r\n                //The incoming dating is used to chagne the format of the date and then send that number to submission button\r\n                submitDateValue={(value) => ChangeToDate(value)} \r\n                RecievedColor={props.ScheduleColor}\r\n        />}\r\n    </EachateContainer>\r\n    \r\n    //This is the returned Date to the calendar\r\n    const calendar = <InfoContainer>\r\n            {InconArea}\r\n            <DateContainer>\r\n                {InfoArea}\r\n                {StartingData}\r\n                {EndingingData}\r\n            </DateContainer>\r\n        </InfoContainer>\r\n\r\n    //To recieve a prop that will change the value from and to inside the schedule form to the value of From/to Date that has been created here  \r\n    props.GetFromDate(!isStartedData ?  props.SendSD : fromData) //Return either the selected data from the calendar form or the changed data by the user\r\n    props.GetToDate(!isEndedData ? props.SendED :ToData) //Return either the selected data from the calendar form or the changed data by the user\r\n    \r\n    return(calendar)\r\n}\r\n\r\nconst TimerContainer = (props) => {\r\n    //All Component Color Stle\r\n    const IconColor = { \r\n        color : props.ScheduleColor.IconC, \r\n        fontSize:\"25px\", \r\n        marginRight:\"15px\", \r\n        marginTop:\"4px\"\r\n    }\r\n    \r\n    //Visable and unvisable color style \r\n    const VisibilityStle = {\r\n        marginRight: \"4px\", \r\n        marginLeft:\"4px\",\r\n        marginTop:\"6px\" , \r\n        fontSize: \"21px\", \r\n        color : props.ScheduleColor.IconC\r\n    }\r\n\r\n    \r\n    const isClicked = props.SendIsShowTime // This is a togole to change the state of the disabled and to change the icion as well \r\n    \r\n    //this is the part where we change the icon based on clicking the div \r\n    const ShowData = <div onClick={()=>props.SendChangeIsShowTime(!isClicked)}>\r\n        {isClicked ?  <VisibilityOffIcon style={VisibilityStle} /> : <VisibilityIcon style={VisibilityStle} />}\r\n    </div>\r\n    const IcionArea = <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-start\"}}>\r\n            <FadeIn><ClockCircleOutlined style={IconColor}/>  </FadeIn>\r\n            <FadeIn>{ShowData}</FadeIn>\r\n        </div>\r\n\r\n    //This is for the layout for Hour Minuts Day system\r\n    const Layout = ['','Hour','Minuts','AM / PM']\r\n    const InfoArea = (<EachateContainer JustifyContentCalue={\"space-between\" }>\r\n        { isClicked ? \r\n            <FadeIn><span style={{ padding: \"1px\" ,paddingTop: \"1px\" , fontSize: \"1.2em\", marginLeft: \"150px\"}}>Optional Time Area</span></FadeIn> \r\n        :\r\n            Layout.map((value, index) =>\r\n                <FadeIn key={index+ createEventId()} ><span style={{ padding: \"1px\" ,paddingTop: \"1px\" , fontSize: \"1.2em\", marginRight: \"1px\"}}>{value}</span></FadeIn> ) }\r\n    </EachateContainer>\r\n    );\r\n    \r\n    //collection of stating time for event\r\n    const [StartHoursValue, ChangeStartHourValue ]= useState() //save the Starting Hour\r\n    const [StartMinutsValue, ChangeStartMinutsValue ]= useState() //save the starting Minuts\r\n    const [StartDayValue, ChangeStartDayValue ]= useState() //save starting if it is AM or PM\r\n    const StartingTime = <EachateContainer JustifyContentCalue={\"space-between\" }>\r\n            <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"5px\"}}>Start</span></FadeIn>\r\n            <TimeSelected \r\n                submitHourValue={(value) => ChangeStartHourValue(value)}\r\n                submitMinutsValue={(value) => ChangeStartMinutsValue(value)}\r\n                submitDayValue={(value) => ChangeStartDayValue(value)}\r\n                RecievedColor={props.ScheduleColor}\r\n                //this is to disable the values that are inside and it is going to DataSelected\r\n                DisabledisClicked={isClicked} \r\n                />\r\n        </EachateContainer>\r\n\r\n    //collection of ending time for event\r\n    const [EndHoursValue, ChangeEndHourValue ]= useState() //save the ending Hour\r\n    const [EndMinutsValue, ChangeEndMinutsValue ]= useState() //save the ending Minuts\r\n    const [EndDayValue, ChangeEndDayValue ]= useState() //save ending if it is AM or PM\r\n    const EndingTime = <EachateContainer JustifyContentCalue={\"space-between\" }>\r\n            <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"12px\"}}>End</span></FadeIn>\r\n            <TimeSelected \r\n                submitHourValue={(value) => ChangeEndHourValue(value)}\r\n                submitMinutsValue={(value) => ChangeEndMinutsValue(value)}\r\n                submitDayValue={(value) => ChangeEndDayValue(value)}\r\n                RecievedColor={props.ScheduleColor}\r\n                //this is to disable the values that are inside and it is going to DataSelected\r\n                DisabledisClicked={isClicked} \r\n                />\r\n        </EachateContainer>\r\n        \r\n    const time =<InfoContainer>\r\n        {IcionArea}\r\n        <DateContainer> \r\n            {InfoArea}\r\n            {StartingTime}\r\n            {EndingTime}\r\n        </DateContainer>\r\n        </InfoContainer>\r\n\r\n    props.FromHourSelected(StartDayValue === \"PM\" ? String(parseInt(StartHoursValue,10) + 12) : StartHoursValue) //this where we convert the returned hour from 12 hour system to 24 hour system \r\n    props.ToHourlected(StartDayValue === \"PM\" ? String(parseInt(EndHoursValue,10) + 12) : EndHoursValue) //this where we convert the returned hour from 12 hour system to 24 hour system \r\n    props.FromMinutsSelected(StartMinutsValue)\r\n    props.ToMinutsSelected(EndMinutsValue) \r\n\r\n    return (time)\r\n}\r\n\r\nexport  {CalenderContianer, TimerContainer};","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\SubmitButton1.js",["187","188","189","190"],"import React, { useState, useEffect } from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport { LoginOutlined } from \"@ant-design/icons\";\r\nimport Button from \"../../../../UI/Button\";\r\nimport { createEventId } from \"../../event-utils\";\r\nimport { Title } from \"@material-ui/icons\";\r\n\r\nconst SubmitButton = (props) => {\r\n  const ButtonIconColor = {\r\n    fontSize: \"20px\",\r\n    marginRight: \"9px\",\r\n    marginTop: \"4px\",\r\n  };\r\n  // // const CreateEvent = { \r\n    //   id: createEventId(),\r\n    //   title: isSubmit ? props.isTitle : \"\",\r\n    //   description: isSubmit ? props.isDescription : \"\",\r\n    //   Url: isSubmit ? props.isURL : \"\",\r\n    //   start: isSubmit ? props.isFromData : \"\",\r\n    //     end: \"2021-02-14\",\r\n    //     startTime: \"10:45:00\",\r\n    //     endTime: \"12:45:00\", \r\n    //   display: \"list-item\",\r\n    //   textColor: \"red\",\r\n    //     daysOfWeek: [\"1\"], //https://fullcalendar.io/docs/recurring-events\r\n    //     // daysOfWeek: [ '1','4','5' ], //https://fullcalendar.io/docs/recurring-events\r\n    // };\r\n\r\n  const SubmitEvent = () => { \r\n    return(\r\n        props.isCallingCalendar(false), \r\n        props.SendChangeIsStarted(false), \r\n        props.SendChangeIsEnded(false))\r\n  };\r\n\r\n  const SubmitButton = (\r\n    <FadeIn>\r\n      <Button\r\n        width={\"120px\"}\r\n        marginBottomValue={\"10px\"}\r\n        marginLeftValue={\"35%\"}\r\n        fontSizeValue={\"20px\"}\r\n        borderRadiusValue={\"15px\"}\r\n        IsCalledValue={\"hover\"}\r\n        BorderValue=\"solid\"\r\n        borderWidthValue=\"thin\"\r\n        paddingInputValue=\"2px\"\r\n        onClick={SubmitEvent}\r\n        text={\"Submit\"}\r\n        icon={<LoginOutlined style={ButtonIconColor} />}\r\n      />\r\n    </FadeIn>\r\n  );\r\n\r\n  // props.IsSubmistClicked(isSubmit); //This is values is used to send value that the submit button has been clicked\r\n\r\n  return SubmitButton;\r\n};\r\n\r\nexport default SubmitButton;\r\n","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\RepeatedDaysSelected.js",["191","192","193"],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\DateSelected.js",["194","195","196","197","198","199"],"import React, { useState } from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport SelectData from \"../../../../../UI/Select\";\r\nimport {\r\n  NumberOfYearsValue,\r\n  NumberOfMonthsValue,\r\n  NumberOfDaysValue,\r\n} from \"./OptionsForm\";\r\nimport { createEventId } from \"../../../event-utils\";\r\n\r\nconst DateSelected = (props) => {\r\n  /*\r\n        This part is chicking if the input that the user entered is what is wanted or not \r\n        Once the select is clicked then it will change to normal dropdown with input number \r\n    */\r\n  const [YearsValueInput, ChangeYearsValueInput] = useState(\"\");\r\n  const handleYears = (e) => (\r\n    ChangeYearsValueInput(e.target.value)\r\n    )\r\n  const Years = (\r\n    <FadeIn>\r\n      <SelectData\r\n        key={YearsValueInput + createEventId()}\r\n        value=\"as\"\r\n        PlaceholderValue=\"asdfas\"\r\n        inputType={\"text\"}\r\n        name={props.name == \"start\" ? \"start\" : \"end\"}\r\n        widthValue={\"112px\"}\r\n        paddingVale={\"4px\"}\r\n        outlineValue={\"none\"}\r\n        fontSizeValue={\"1.2em\"}\r\n        fontFamilyValue={\"inherit\"}\r\n        IsCalledValue={\"FOCUS\"}\r\n        borderRadiusValue={\"7px\"}\r\n        backGroundColorValue={props.RecievedColor.UserInputBGC}\r\n        FontColorValue={props.RecievedColor.UserInputFC}\r\n        PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\r\n        borderColorValue={props.RecievedColor.BorderColor}\r\n        BorderValue={\"solid\"}\r\n        borderWidthValue={\"thin\"}\r\n        marginRightValue={\"15px\"}\r\n        onchangeValue={handleYears}\r\n        InputValue={YearsValueInput}\r\n      >\r\n        {\r\n          <NumberOfYearsValue/>\r\n        }\r\n      </SelectData>\r\n    </FadeIn>\r\n  );\r\n\r\n  /*\r\n        This part is chicking if the input that the user entered is what is wanted or not \r\n        Once the select is clicked then it will change to normal dropdown with input number \r\n    */\r\n  const [MonthsValueInput, ChangeMonthsValue] = useState(\"\");\r\n  const handleMonths = (e) => (\r\n    ChangeMonthsValue(e.target.value) \r\n  );\r\n  const Months = (\r\n    <FadeIn>\r\n      <SelectData\r\n        key={MonthsValueInput.id + createEventId()}\r\n        inputType={\"text\"}\r\n        name={props.name == \"start\" ? \"start\" : \"end\"}\r\n        widthValue={\"112px\"}\r\n        paddingVale={\"4px\"}\r\n        outlineValue={\"none\"}\r\n        fontSizeValue={\"1.2em\"}\r\n        fontFamilyValue={\"inherit\"}\r\n        IsCalledValue={props.DisabledisClicked ? \"\" : \"FOCUS\"}\r\n        borderRadiusValue={\"7px\"}\r\n        backGroundColorValue={props.RecievedColor.UserInputBGC}\r\n        FontColorValue={props.RecievedColor.UserInputFC}\r\n        PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\r\n        borderColorValue={props.RecievedColor.BorderColor}\r\n        BorderValue={\"solid\"}\r\n        borderWidthValue={\"thin\"}\r\n        marginRightValue={\"15px\"}\r\n        onchangeValue={handleMonths}\r\n        InputValue={MonthsValueInput}\r\n      >\r\n        {\r\n          <NumberOfMonthsValue/>\r\n        }\r\n      </SelectData>\r\n    </FadeIn>\r\n  );\r\n\r\n  /*\r\n        This part is chicking if the input that the user entered is what is wanted or not \r\n        Once the select is clicked then it will change to normal dropdown with input number \r\n    */\r\n  const [DayValueInput, ChangeDayValue] = useState(\"\");\r\n  const handleDays = (e) => (\r\n    console.log(e.target),\r\n    ChangeDayValue(e.target.value) \r\n  );\r\n  const name = props.name == \"start\" ? \"start\" : \"end\"\r\n  const Days = (\r\n    <FadeIn>\r\n      <SelectData\r\n        key={DayValueInput.id  + createEventId()}\r\n        inputType={\"text\"}\r\n        name={props.name == \"start\" ? \"start\" : \"end\"}\r\n        widthValue={\"112px\"}\r\n        paddingVale={\"4px\"}\r\n        outlineValue={\"none\"}\r\n        fontSizeValue={\"1.2em\"}\r\n        fontFamilyValue={\"inherit\"}\r\n        IsCalledValue={props.DisabledisClicked ? \"\" : \"FOCUS\"}\r\n        borderRadiusValue={\"7px\"}\r\n        backGroundColorValue={props.RecievedColor.UserInputBGC}\r\n        FontColorValue={props.RecievedColor.UserInputFC}\r\n        PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\r\n        borderColorValue={props.RecievedColor.BorderColor}\r\n        BorderValue={\"solid\"}\r\n        borderWidthValue={\"thin\"}\r\n        marginRightValue={\"15px\"}\r\n        onchangeValue={handleDays}\r\n        InputValue={DayValueInput}\r\n      >\r\n        {\r\n          <NumberOfDaysValue/>\r\n        }\r\n      </SelectData>\r\n    </FadeIn>\r\n  );\r\n\r\n  //this is submitted to DropDownContainer\r\n  props.submitDateValue(\r\n    YearsValueInput + \"-\" + MonthsValueInput + \"-\" + DayValueInput\r\n  );\r\n\r\n  return [Years, Months, Days];\r\n};\r\n\r\nexport default DateSelected;\r\n","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\TimeSelected.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Select.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\OptionsForm.js",["200"],"import React, { useState } from \"react\";\r\nimport { createEventId } from \"../../../event-utils\";\r\n\r\n//this is for the hour input \r\nconst HourValue = (props) => {\r\n\r\n    const Hours = ['01','02','03','04','05','06','07','08','09','10','11','12']\r\n    const DailyHours = (\r\n        [Hours.map((Hour, index) => \r\n            <option disabled={props.DisabledHour}  key={index.id + createEventId()} value={Hour}>{Hour}</option>)]\r\n        )\r\n    return(DailyHours)\r\n}\r\nconst MinutsValue = (props) => {\r\n\r\n    //this is for the hour input \r\n    const Minuts = ['05','10','15','20','25','30','35','40','45','50','55']\r\n    const DailyMinut =(\r\n        [Minuts.map((Minut, index) => \r\n            <option disabled={props.DisabledMinuts} key={index.id + createEventId()} value={Minut}>{Minut}</option>)]\r\n        )\r\n    return(DailyMinut)\r\n}\r\nconst TwelveHourSystemValue = (props) => {\r\n\r\n    //this for either AM or PM\r\n    const TwelveHourSystem = ['AM','PM']\r\n    const DayDivided =(\r\n        [TwelveHourSystem.map((DayTime, index) => \r\n            <option disabled={props.DisabledHourSystem} key={index.id + createEventId()} value={DayTime}>{DayTime}</option>)]\r\n        )\r\n    return(DayDivided)\r\n}\r\nconst NumberOfYearsValue = (props) => { \r\n    //this is for the years from this year \r\n    const NumberOfYears = [ '2020','2021', '2022', '2023', '2024','2025', '2026', \r\n                            '2027', '2028', '2029', '2030', '2031', '2032','2033', \r\n                            '2034','2035', '2036', '2037', '2038', '2039','2040']\r\n    const YearContainer = (\r\n        [NumberOfYears.map((year, index) => <option    key={index.id + createEventId()} value={year}>{year}</option>)]\r\n    )\r\n    \r\n    return(\r\n        YearContainer\r\n        )\r\n}\r\nconst NumberOfMonthsValue = (props) => { \r\n    //this is for the months in a year \r\n    const NumberOfMonths = ['01','02','03','04','05','06','07','08','09','10','11','12']\r\n    const MonthContainer = (\r\n        [NumberOfMonths.map((month, index) => <option  key={index.id + createEventId()}  value={month}>{month}</option>)]\r\n        )\r\n    return(MonthContainer)\r\n}\r\nconst NumberOfDaysValue = (props) => { \r\n    //this is for the days in a Month \r\n    const NumberOfDays = ['01','02','03','04','05','06','07','08','09','10',\r\n                        '11','12','13','14','15','16','17','18','19','20',\r\n                        '21','22','23','24','25','26','27','28','29','30','31']\r\n    const DayContainer = (\r\n        [NumberOfDays.map((days,index ) => <option  key={index.id + createEventId()} value={days}>{days}</option>)]\r\n        )\r\n    return(DayContainer)\r\n}\r\nconst ColorOptionsValue = () => {\r\n\r\n    //this is for the days in a Month \r\n    const ColorChoose = ['Choose Color','BlueViolet','Black','CornflowerBlue','DarkMagenta','DimGrey',\r\n                            'DodgerBlue','Fuchsia','MidnightBlue','Purple','Salmon']\r\n    const ColorContainer = (\r\n        [ColorChoose.map((Colors,index ) => <option  key={index.id + createEventId()} value={Colors}>{Colors}</option>)]\r\n        )\r\n    return(ColorContainer)\r\n}\r\n\r\nexport {HourValue, MinutsValue, TwelveHourSystemValue, \r\n        NumberOfYearsValue, NumberOfMonthsValue, NumberOfDaysValue, \r\n        ColorOptionsValue};\r\n",{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":2,"column":8,"nodeType":"207","messageId":"208","endLine":2,"endColumn":14},{"ruleId":"205","severity":1,"message":"206","line":2,"column":8,"nodeType":"207","messageId":"208","endLine":2,"endColumn":14},{"ruleId":"205","severity":1,"message":"209","line":3,"column":52,"nodeType":"207","messageId":"208","endLine":3,"endColumn":67},{"ruleId":"210","severity":1,"message":"211","line":3,"column":1,"nodeType":"212","messageId":"213","endLine":5,"endColumn":15},{"ruleId":"205","severity":1,"message":"214","line":6,"column":10,"nodeType":"207","messageId":"208","endLine":6,"endColumn":23},{"ruleId":"205","severity":1,"message":"215","line":6,"column":25,"nodeType":"207","messageId":"208","endLine":6,"endColumn":39},{"ruleId":"205","severity":1,"message":"216","line":7,"column":8,"nodeType":"207","messageId":"208","endLine":7,"endColumn":17},{"ruleId":"205","severity":1,"message":"217","line":5,"column":8,"nodeType":"207","messageId":"208","endLine":5,"endColumn":15},{"ruleId":"205","severity":1,"message":"218","line":15,"column":25,"nodeType":"207","messageId":"208","endLine":15,"endColumn":40},{"ruleId":"219","severity":1,"message":"220","line":37,"column":7,"nodeType":"221","messageId":"222","endLine":37,"endColumn":16},{"ruleId":"205","severity":1,"message":"223","line":2,"column":24,"nodeType":"207","messageId":"208","endLine":2,"endColumn":34},{"ruleId":"205","severity":1,"message":"224","line":7,"column":26,"nodeType":"207","messageId":"208","endLine":7,"endColumn":39},{"ruleId":"205","severity":1,"message":"225","line":10,"column":20,"nodeType":"207","messageId":"208","endLine":10,"endColumn":34},{"ruleId":"205","severity":1,"message":"226","line":10,"column":7,"nodeType":"207","messageId":"208","endLine":10,"endColumn":20},{"ruleId":"227","severity":1,"message":"228","line":30,"column":37,"nodeType":"229","messageId":"230","endLine":30,"endColumn":38},{"ruleId":"205","severity":1,"message":"231","line":49,"column":12,"nodeType":"207","messageId":"208","endLine":49,"endColumn":20},{"ruleId":"205","severity":1,"message":"232","line":50,"column":21,"nodeType":"207","messageId":"208","endLine":50,"endColumn":34},{"ruleId":"205","severity":1,"message":"233","line":58,"column":12,"nodeType":"207","messageId":"208","endLine":58,"endColumn":26},{"ruleId":"205","severity":1,"message":"234","line":59,"column":27,"nodeType":"207","messageId":"208","endLine":59,"endColumn":46},{"ruleId":"205","severity":1,"message":"235","line":69,"column":12,"nodeType":"207","messageId":"208","endLine":69,"endColumn":18},{"ruleId":"205","severity":1,"message":"236","line":70,"column":19,"nodeType":"207","messageId":"208","endLine":70,"endColumn":30},{"ruleId":"205","severity":1,"message":"237","line":80,"column":12,"nodeType":"207","messageId":"208","endLine":80,"endColumn":23},{"ruleId":"205","severity":1,"message":"238","line":81,"column":12,"nodeType":"207","messageId":"208","endLine":81,"endColumn":21},{"ruleId":"205","severity":1,"message":"239","line":99,"column":12,"nodeType":"207","messageId":"208","endLine":99,"endColumn":22},{"ruleId":"205","severity":1,"message":"240","line":100,"column":12,"nodeType":"207","messageId":"208","endLine":100,"endColumn":23},{"ruleId":"205","severity":1,"message":"241","line":101,"column":12,"nodeType":"207","messageId":"208","endLine":101,"endColumn":20},{"ruleId":"205","severity":1,"message":"242","line":102,"column":12,"nodeType":"207","messageId":"208","endLine":102,"endColumn":21},{"ruleId":"205","severity":1,"message":"243","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":25},{"ruleId":"205","severity":1,"message":"244","line":19,"column":12,"nodeType":"207","messageId":"208","endLine":19,"endColumn":25},{"ruleId":"205","severity":1,"message":"245","line":182,"column":12,"nodeType":"207","messageId":"208","endLine":182,"endColumn":23},{"ruleId":"205","severity":1,"message":"243","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":25},{"ruleId":"205","severity":1,"message":"246","line":1,"column":27,"nodeType":"207","messageId":"208","endLine":1,"endColumn":36},{"ruleId":"205","severity":1,"message":"224","line":5,"column":10,"nodeType":"207","messageId":"208","endLine":5,"endColumn":23},{"ruleId":"205","severity":1,"message":"247","line":6,"column":10,"nodeType":"207","messageId":"208","endLine":6,"endColumn":15},{"ruleId":"248","severity":1,"message":"249","line":25,"column":65,"nodeType":"250","messageId":"251","endLine":25,"endColumn":67},{"ruleId":"252","severity":2,"message":"253","line":29,"column":6,"nodeType":"254","messageId":"255","endLine":31,"endColumn":33},{"ruleId":"248","severity":1,"message":"249","line":29,"column":89,"nodeType":"250","messageId":"251","endLine":29,"endColumn":91},{"ruleId":"256","severity":1,"message":"257","line":27,"column":26,"nodeType":"258","messageId":"222","endLine":27,"endColumn":28},{"ruleId":"256","severity":1,"message":"257","line":65,"column":26,"nodeType":"258","messageId":"222","endLine":65,"endColumn":28},{"ruleId":"227","severity":1,"message":"228","line":96,"column":26,"nodeType":"229","messageId":"230","endLine":96,"endColumn":27},{"ruleId":"205","severity":1,"message":"259","line":99,"column":9,"nodeType":"207","messageId":"208","endLine":99,"endColumn":13},{"ruleId":"256","severity":1,"message":"257","line":99,"column":27,"nodeType":"258","messageId":"222","endLine":99,"endColumn":29},{"ruleId":"256","severity":1,"message":"257","line":105,"column":26,"nodeType":"258","messageId":"222","endLine":105,"endColumn":28},{"ruleId":"205","severity":1,"message":"243","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":25},"no-native-reassign",["260"],"no-negated-in-lhs",["261"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'UserAddOutlined' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'LoginOutlined' is defined but never used.","'LogoutOutlined' is defined but never used.","'AppButton' is defined but never used.","'BlurDiv' is defined but never used.","'ChangeEventList' is assigned a value but never used.","no-dupe-keys","Duplicate key 'textColor'.","ObjectExpression","unexpected","'formatDate' is defined but never used.","'createEventId' is defined but never used.","'ChangegetEvent' is assigned a value but never used.","'InfoContainer' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'getTitle' is assigned a value but never used.","'ChangeTitlePH' is assigned a value but never used.","'getDescription' is assigned a value but never used.","'ChangeDescriptionPH' is assigned a value but never used.","'getURL' is assigned a value but never used.","'ChangeURLPH' is assigned a value but never used.","'getFormDate' is assigned a value but never used.","'getToDate' is assigned a value but never used.","'StartHours' is assigned a value but never used.","'StartMinuts' is assigned a value but never used.","'EndHours' is assigned a value but never used.","'EndMinuts' is assigned a value but never used.","'useState' is defined but never used.","'GetNumberOfRD' is assigned a value but never used.","'EndDayValue' is assigned a value but never used.","'useEffect' is defined but never used.","'Title' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'name' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]