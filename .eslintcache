[{"/Users/mero/Project/mero/notesk/src/index.js":"1","/Users/mero/Project/mero/notesk/src/App.js":"2","/Users/mero/Project/mero/notesk/src/serviceWorker.js":"3","/Users/mero/Project/mero/notesk/src/API/Weather.js":"4","/Users/mero/Project/mero/notesk/src/Routes/Notes/Notes.js":"5","/Users/mero/Project/mero/notesk/src/Routes/Calendar/Calendar.js":"6","/Users/mero/Project/mero/notesk/src/Routes/Login/Login.js":"7","/Users/mero/Project/mero/notesk/src/Routes/Signup/Signup.js":"8","/Users/mero/Project/mero/notesk/src/API/API.js":"9","/Users/mero/Project/mero/notesk/src/Routes/Login/LoginForm.js":"10","/Users/mero/Project/mero/notesk/src/Routes/Signup/SignupForm.js":"11","/Users/mero/Project/mero/notesk/src/UI/NavBar.js":"12","/Users/mero/Project/mero/notesk/src/UI/BlurDiv.js":"13","/Users/mero/Project/mero/notesk/src/UI/Footer.js":"14","/Users/mero/Project/mero/notesk/src/Routes/Notes/Note/Note.js":"15","/Users/mero/Project/mero/notesk/src/Routes/Notes/CreateNote/CreateNote.js":"16","/Users/mero/Project/mero/notesk/src/UI/Modal.js":"17","/Users/mero/Project/mero/notesk/src/UI/UserInput.js":"18","/Users/mero/Project/mero/notesk/src/UI/Button.js":"19","/Users/mero/Project/mero/notesk/src/UI/Switch.js":"20","/Users/mero/Project/mero/notesk/src/UI/UserIcon.js":"21","/Users/mero/Project/mero/notesk/src/UI/TextArea.js":"22","/Users/mero/Project/mero/notesk/src/Routes/Calendar/event-utils.js":"23","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/ScheduleForm.js":"24","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Schedule.js":"25","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/SubmitButton.js":"26","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/InputContainer.js":"27","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DropDownContainer.js":"28","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/DateSelected.js":"29","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/TimeSelected.js":"30","/Users/mero/Project/mero/notesk/src/UI/Select.js":"31","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/OptionsForm.js":"32","/Users/mero/Project/mero/notesk/src/Routes/Calendar/CalendarCollection.js":"33","/Users/mero/Project/mero/notesk/src/Routes/Calendar/CalendarForm.js":"34"},{"size":481,"mtime":1612050645018,"results":"35","hashOfConfig":"36"},{"size":2512,"mtime":1612644397016,"results":"37","hashOfConfig":"36"},{"size":5086,"mtime":1612050645018,"results":"38","hashOfConfig":"36"},{"size":1102,"mtime":1612646524682,"results":"39","hashOfConfig":"36"},{"size":1980,"mtime":1612173981263,"results":"40","hashOfConfig":"36"},{"size":469,"mtime":1612708538109,"results":"41","hashOfConfig":"36"},{"size":462,"mtime":1612050645013,"results":"42","hashOfConfig":"36"},{"size":467,"mtime":1612050645015,"results":"43","hashOfConfig":"36"},{"size":313,"mtime":1612657488319,"results":"44","hashOfConfig":"36"},{"size":3709,"mtime":1612050645013,"results":"45","hashOfConfig":"36"},{"size":8660,"mtime":1612050816120,"results":"46","hashOfConfig":"36"},{"size":3149,"mtime":1612717340097,"results":"47","hashOfConfig":"36"},{"size":520,"mtime":1612050645015,"results":"48","hashOfConfig":"36"},{"size":521,"mtime":1612050645016,"results":"49","hashOfConfig":"36"},{"size":6058,"mtime":1612050816119,"results":"50","hashOfConfig":"36"},{"size":6099,"mtime":1612050645014,"results":"51","hashOfConfig":"36"},{"size":3439,"mtime":1612717817973,"results":"52","hashOfConfig":"36"},{"size":4250,"mtime":1612050816121,"results":"53","hashOfConfig":"36"},{"size":2896,"mtime":1612050816120,"results":"54","hashOfConfig":"36"},{"size":4575,"mtime":1612632910700,"results":"55","hashOfConfig":"36"},{"size":929,"mtime":1612050645017,"results":"56","hashOfConfig":"36"},{"size":2995,"mtime":1612050645017,"results":"57","hashOfConfig":"36"},{"size":378,"mtime":1612050645013,"results":"58","hashOfConfig":"36"},{"size":9333,"mtime":1612634870203,"results":"59","hashOfConfig":"36"},{"size":5809,"mtime":1612728200377,"results":"60","hashOfConfig":"36"},{"size":2302,"mtime":1612718813649,"results":"61","hashOfConfig":"36"},{"size":4599,"mtime":1612626555000,"results":"62","hashOfConfig":"36"},{"size":9023,"mtime":1612718353139,"results":"63","hashOfConfig":"36"},{"size":6087,"mtime":1612718815001,"results":"64","hashOfConfig":"36"},{"size":4288,"mtime":1612718815002,"results":"65","hashOfConfig":"36"},{"size":3140,"mtime":1612050816121,"results":"66","hashOfConfig":"36"},{"size":3092,"mtime":1612718749262,"results":"67","hashOfConfig":"36"},{"size":3448,"mtime":1612728300862,"results":"68","hashOfConfig":"36"},{"size":3646,"mtime":1612728349062,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"x9zsk2",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mero/Project/mero/notesk/src/index.js",[],["148","149"],"/Users/mero/Project/mero/notesk/src/App.js",[],"/Users/mero/Project/mero/notesk/src/serviceWorker.js",[],"/Users/mero/Project/mero/notesk/src/API/Weather.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Notes/Notes.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Calendar/Calendar.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Login/Login.js",["150"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport Nav from \"../../UI/NavBar\";\nimport LoginForm from \"./LoginForm\";\nimport BlurDiv from \"../../UI/BlurDiv\";\n\nconst Login = (props) => {\n  return (\n    <div>\n      <BlurDiv blurDegree={\"1.4px\"}/>\n      <Nav ColorChanged={props.colorchanged} RecieveColor={props.Color}/>\n      <LoginForm ColorChanged={props.colorchanged} RecieveColor={props.Color}/>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/mero/Project/mero/notesk/src/Routes/Signup/Signup.js",["151"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport Nav from \"../../UI/NavBar\";\nimport SignupForm from \"./SignupForm\";\nimport BlurDiv from \"../../UI/BlurDiv\";\n\nconst Signup = (props) => {\n  return (\n    <div>\n      <BlurDiv blurDegree={\"1.4px\"}/>\n      <Nav ColorChanged={props.colorchanged} RecieveColor={props.Color}/>\n      <SignupForm ColorChanged={props.colorchanged} RecieveColor={props.Color}/>\n    </div>\n  );\n};\n\nexport default Signup;\n","/Users/mero/Project/mero/notesk/src/API/API.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Login/LoginForm.js",["152"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { MailOutlined, KeyOutlined, LoginOutlined, UserAddOutlined} from \"@ant-design/icons\";\nimport UserInput from \"../../UI/UserInput\";\nimport NoteContainer from '../../UI/Modal';\nimport Button from \"../../UI/Button\";\nimport FadeIn  from \"react-fade-in\";\n\n\nconst InfoContainer = styled.div`\n    width: 440px;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    margin: 4px;\n    margin-bottom: 10px;\n`\n\nconst SignupForm = (props) => {\n    const IconColor = { \n        color : props.RecieveColor.IconC, \n        fontSize:\"25px\", \n        marginRight:\"9px\", \n        marginTop:\"4px\" }\n    \n    const ButtonIconColor = { \n        color : props.RecieveColor.IconC, \n        fontSize:\"20px\", \n        marginRight:\"9px\", \n        marginTop:\"4px\" }\n\n    const Email = <InfoContainer>\n            <FadeIn><MailOutlined style={IconColor}/></FadeIn>\n            <FadeIn><UserInput \n            inputType={\"text\"}\n            name=\"title\"\n            PlaceholderValue={\"E-mail\"}\n            widthValue={\"380px\"}\n            paddingVale={\"4px\"}\n            outlineValue={\"none\"}\n            fontSizeValue={\"1.2em\"}\n            fontFamilyValue={\"inherit\"}\n            IsCalledValue={\"FOCUS\"} \n            borderRadiusValue= {\"7px\"}\n            backGroundColorValue={props.RecieveColor.UserInputBGC}\n            FontColorValue={props.RecieveColor.UserInputFC}\n            PlaceHolderColorValue={props.RecieveColor.UserInputPHC}\n            borderColorValue={props.RecieveColor.BorderColor}\n            BorderValue={\"solid\"}\n            borderWidthValue=\"thin\"\n            marginRightValue={\"10px\"}\n            /></FadeIn>\n        </InfoContainer>\n    \n    const PassWord = <InfoContainer>\n            <FadeIn><KeyOutlined style={IconColor}/></FadeIn>\n            <FadeIn><UserInput \n            inputType={\"text\"}\n            name=\"title\"\n            PlaceholderValue={\"Password\"}\n            widthValue={\"380px\"}\n            paddingVale={\"4px\"}\n            outlineValue={\"none\"}\n            fontSizeValue={\"1.2em\"}\n            fontFamilyValue={\"inherit\"}\n            IsCalledValue={\"FOCUS\"} \n            borderRadiusValue= {\"7px\"}\n            backGroundColorValue={props.RecieveColor.UserInputBGC}\n            FontColorValue={props.RecieveColor.UserInputFC}\n            PlaceHolderColorValue={props.RecieveColor.UserInputPHC}\n            borderColorValue={props.RecieveColor.BorderColor}\n            BorderValue={\"solid\"}\n            borderWidthValue=\"thin\"\n            marginRightValue={\"10px\"}\n            /></FadeIn>\n        </InfoContainer>\n   \n   const LoginButton = <FadeIn>\n            <Button\n            width={\"120px\"}\n            marginBottomValue={\"10px\"}\n            marginLeftValue={\"35%\"}\n            fontSizeValue={\"20px\"}\n            borderRadiusValue={\"15px\"}\n            backGroundColorValue={props.RecieveColor.LogSignColor}\n            FontColorValue={props.RecieveColor.IconC}\n            borderColorValue={props.RecieveColor.BorderColor}\n            BorderValue=\"solid\"\n            borderWidthValue=\"thin\"\n            paddingInputValue=\"2px\"\n            text = {\"Login\"} \n            icon = {<LoginOutlined style={ButtonIconColor}/>}\n            />\n        </FadeIn>\n\nreturn (\n    <FadeIn><NoteContainer\n    position= {\"relative\"}\n    width= {\"450px\"}\n    margin= {\"300px auto 20px auto\"}\n    padding= {\"15px\"}\n    boxShadowValue= {\"0 1px 5px rgb(138, 137, 137)\"}\n    borderRadiusValue= {\"20px\"}\n    resizeValue={\"both\"}\n    backGroundColorValue={props.RecieveColor.NotekBGC}\n    >\n        {Email}\n        {PassWord}\n        {LoginButton}\n    </NoteContainer></FadeIn>\n)\n};\n\nexport default SignupForm; ","/Users/mero/Project/mero/notesk/src/Routes/Signup/SignupForm.js",[],"/Users/mero/Project/mero/notesk/src/UI/NavBar.js",["153","154","155"],"/Users/mero/Project/mero/notesk/src/UI/BlurDiv.js",["156"],"import React from \"react\";\nimport styled from \"styled-components\";\n{/* <BlurDiv style={{ height: \"100%\" }} blurDegree={\"3px\"}>\n<StyledImage src={backgroundImage} alt=\"oops\" />\n</BlurDiv> */}\n\n\nconst StyledBlurDiv = styled.div`\nbackdrop-filter: blur(${(props) => props.blurDegree});\nposition: absolute;\nheight: 100%;\nwidth: 100%;\n`;\n\nconst BlurDiv = (props) => {\n  return (\n    <StyledBlurDiv style={props.style} blurDegree={props.blurDegree}>\n      {props.children}\n    </StyledBlurDiv>\n  );\n};\n\nexport default BlurDiv;\n","/Users/mero/Project/mero/notesk/src/UI/Footer.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Notes/Note/Note.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Notes/CreateNote/CreateNote.js",[],"/Users/mero/Project/mero/notesk/src/UI/Modal.js",[],"/Users/mero/Project/mero/notesk/src/UI/UserInput.js",[],"/Users/mero/Project/mero/notesk/src/UI/Button.js",[],"/Users/mero/Project/mero/notesk/src/UI/Switch.js",[],"/Users/mero/Project/mero/notesk/src/UI/UserIcon.js",[],"/Users/mero/Project/mero/notesk/src/UI/TextArea.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Calendar/event-utils.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/ScheduleForm.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Schedule.js",["157","158","159","160","161","162","163","164","165","166","167","168"],"/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/SubmitButton.js",["169","170","171"],"import React, { useState,useEffect } from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport { LoginOutlined } from \"@ant-design/icons\";\nimport Button from \"../../../../UI/Button\";\nimport { createEventId } from \"../../event-utils\";\nimport { Title } from \"@material-ui/icons\";\n\nconst SubmitButton = (props) => {\n  const ButtonIconColor = {\n    fontSize: \"20px\",\n    marginRight: \"9px\",\n    marginTop: \"4px\",\n  }; \n  const [isSubmit, ChangeIsSubmit] = useState(true); //This is values is used to send value that the submit button has been clicked \n  const CreateEvent= { \n    id:  createEventId(),\n    title:  isSubmit ? props.isTitle : \"\",\n    description: isSubmit ? props.isDescription : \"\",\n    Url: isSubmit ? props.isURL : \"\",\n    start: isSubmit ? props.isFromData :\"\",\n    // startTime: \"10:45:00\",\n    // endTime: \"12:45:00\", \n    display: \"list-item\",\n    textColor: \"red\"\n  } \n  \n  const subNote = () => { \n    if(props.isTitle === \"\" && props.isDescription === \"\" ) {\n        <FadeIn>{props.CheckTitlePH(\"Please Enter A Title ....(-_-)\") \n        , props.CheckDescriptionPH(\"Please Enter A Description ....(-_-)\")} </FadeIn> \n      }\n      else if (props.isTitle === \"\") {\n          <FadeIn>{props.CheckTitlePH(\"Please Enter A Title ....(-_-)\") }</FadeIn>\n        }\n        else if (props.isDescription === \"\") {\n            <FadeIn>{props.CheckDescriptionPH(\"Please Enter A Description ....(-_-)\") }</FadeIn>\n          }\n          else {\n            // props.CheckTitlePH(\"\") \n            // props.CheckDescriptionPH(\"\")\n            props.GetEvent(oldarr => [...oldarr,CreateEvent]) \n            ChangeIsSubmit(false)\n            }\n          }  \n\n  const SubmitButton = (\n    <FadeIn>\n      <Button\n        width={\"120px\"}\n        marginBottomValue={\"10px\"}\n        marginLeftValue={\"35%\"}\n        fontSizeValue={\"20px\"}\n        borderRadiusValue={\"15px\"}\n        IsCalledValue={\"hover\"}\n        BorderValue=\"solid\"\n        borderWidthValue=\"thin\"\n        paddingInputValue=\"2px\"\n        onClick={ subNote}\n        text={\"Submit\"}\n        icon={<LoginOutlined style={ButtonIconColor} />}\n      />\n    </FadeIn>\n  );\n\n  props.IsSubmistClicked(isSubmit); //This is values is used to send value that the submit button has been clicked \n\n  return SubmitButton;\n};\n\nexport default SubmitButton;\n","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/InputContainer.js",["172"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport UserInput from '../../../../UI/UserInput'\nimport TextArea from '../../../../UI/TextArea';\nimport FadeIn  from 'react-fade-in';\nimport { LinkOutlined} from \"@ant-design/icons\";\nimport { Title } from '@material-ui/icons';\nimport DescriptionIcon from '@material-ui/icons/Description';\nconst InfoContainer = styled.div`\n    width: 440px;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    margin: 4px;\n    margin-bottom: 10px;\n`\n\nconst TitleContainer = (props) => {\n    const IconColor = { \n        color : props.ScheduleColor.IconC, \n        fontSize:\"25px\", \n        marginRight:\"15px\", \n        marginTop:\"4px\" \n    } \n    const title = <InfoContainer>\n        <FadeIn><Title style={IconColor}/></FadeIn>\n        <FadeIn><UserInput \n        key={`title` + 1}\n        // This is to change the Value of Title based on the input coming from schedule\n        onchangeValue={(event)=>props.SubmitTitle(event.target.value)}\n        //This is the Props that is coming from Schedule From once I click on submit\n        PlaceholderValue={props.SubmitTitlePlaceHolder}\n        name=\"title\"\n        inputType={\"text\"} \n        widthValue={\"425px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={\"FOCUS\"} \n        borderRadiusValue= {\"7px\"}\n        backGroundColorValue={props.ScheduleColor.UserInputBGC}\n        FontColorValue={props.ScheduleColor.UserInputFC}\n        PlaceHolderColorValue={props.ScheduleColor.UserInputPHC}\n        borderColorValue={props.ScheduleColor.BorderColor}  \n        BorderValue={\"solid\"}\n        borderWidthValue=\"thin\"\n        marginRightValue={\"10px\"}\n        /></FadeIn>\n    </InfoContainer>\n\n    return(title)\n}\n\nconst DescriptionContainer = (props) => {\n    const IconColor = { \n        color : props.ScheduleColor.IconC, \n        fontSize:\"25px\", \n        marginRight:\"15px\", \n        marginTop:\"4px\" \n    }\n    const Description = <InfoContainer>\n        <FadeIn><DescriptionIcon style={IconColor}/></FadeIn>\n        <FadeIn><TextArea\n        key={`Description`+1} \n        // This is to change the Value of Title based on the input \n        onchangeValue={(event)=>props.SubmitDescription(event.target.value)}\n        //This is the Props that is coming from Schedule From once I click on submit\n        PlaceholderValue={props.SubmitDescriptionPlaceHolder}\n        rows={3}\n        name=\"Description\"\n        inputType={\"text\"} \n        widthValue={\"425px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={\"FOCUS\"} \n        borderRadiusValue= {\"7px\"}\n        backGroundColorValue={props.ScheduleColor.UserInputBGC}\n        FontColorValue={props.ScheduleColor.UserInputFC}\n        PlaceHolderColorValue={props.ScheduleColor.UserInputPHC}\n        borderColorValue={props.ScheduleColor.BorderColor}  \n        BorderValue={\"solid\"}\n        resizeValue={\"vertical\"}\n        borderWidthValue=\"thin\"\n        marginRightValue={\"10px\"}\n        /></FadeIn>\n    </InfoContainer>\n\n\n    return (Description)\n}\n\nconst URLContainer = (props) => {\n    const IconColor = { \n        color : props.ScheduleColor.IconC, \n        fontSize:\"25px\", \n        marginRight:\"15px\", \n        marginTop:\"4px\" \n    }\n    const URL = <InfoContainer>\n        <FadeIn><LinkOutlined style={IconColor}/></FadeIn>\n        <FadeIn><UserInput \n        key={`AttachedLinkDescription` }\n        // This is to change the Value of Title based on the input \n        onchangeValue={(event)=>props.URLOption(event.target.value)}\n        //This is the Props that is coming from Schedule From once I click on submit\n        PlaceholderValue={props.SubmitURLPH}\n        name=\"Url\"\n        inputType={\"text\"} \n        widthValue={\"425px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={\"FOCUS\"} \n        borderRadiusValue= {\"7px\"}\n        backGroundColorValue={props.ScheduleColor.UserInputBGC}\n        FontColorValue={props.ScheduleColor.UserInputFC}\n        PlaceHolderColorValue={props.ScheduleColor.UserInputPHC}\n        borderColorValue={props.ScheduleColor.BorderColor}    \n        BorderValue={\"solid\"}\n        borderWidthValue=\"thin\"\n        marginRightValue={\"10px\"}\n        /></FadeIn>\n    </InfoContainer>\n\n\n    return (URL)\n}\n\nexport  {TitleContainer, DescriptionContainer, URLContainer};","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DropDownContainer.js",["173","174"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\"; \nimport FadeIn  from 'react-fade-in'; \nimport { CalendarOutlined , ClockCircleOutlined} from \"@ant-design/icons\"; \nimport DateSelected from './DataCollection/DateSelected';\nimport TimeSelected from './DataCollection/TimeSelected';\nimport VisibilityIcon from '@material-ui/icons/Visibility'\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nconst InfoContainer = styled.div`\n    width: 440px;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    margin: 4px;\n    margin-bottom: 10px;\n`\nconst EachateContainer = styled.div`\n    width: 400px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    margin: 4px;\n`\nconst DateContainer = styled.div`\n    width: 400px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n`\n\n\nconst CalenderContianer = (props) => {\n    //All Component Color Stle\n    const IconColor = { \n        color : props.ScheduleColor.IconC, \n        fontSize:\"25px\", \n        marginRight:\"15px\", \n        marginTop:\"4px\" \n    }\n\n    //Visable and unvisable color style \n    const VisibilityStle = {\n        marginRight: \"4px\", \n        marginLeft:\"4px\",\n        marginTop:\"6px\" , \n        fontSize: \"21px\", \n        color : props.ScheduleColor.IconC\n    }\n    \n    // This is a togole to change the state of the disabled and to change the icion as well \n    const [isClicked, ChangeisClicked] = useState(true)\n\n    //This is for the layout for Year Month Days\n    const Layout = ['','Year','Month','Day']\n\n    //the date that the user clicked on to have it go to the data collection and have the same number \n    const [recievedClickedDate, ChangeRecievedClickedDate] = useState(props.RetrunClickedDate)\n    //Dividing the Recieved Date to Year Month Day and Send them to DateSelected\n    const RecievedYear = recievedClickedDate[0]\n    const RecievedMonth = recievedClickedDate[1]\n    const RecievedDay = recievedClickedDate[2]\n    // =====> TO\n    //the date that the user clicked on to have it go to the data collection and have the same number \n    const [recievedClickedDateTo, ChangeRecievedClickedDateTo] = useState(props.RetrunClickedEndDate)\n    //Dividing the Recieved Date to Year Month Day and Send them to DateSelected\n    const RecievedToYear = recievedClickedDateTo[0]\n    const RecievedToMonth = recievedClickedDateTo[1]\n    const RecievedToDay = recievedClickedDateTo[2]\n\n    //All the needed information for craeting the date From \n    const [fromData, ChangeFromDate] = useState(\"\") \n    const [ToData, ChangeToDate] = useState()\n\n    //This is the returned Date to the calendar\n    const calendar = <InfoContainer>\n        <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-start\"}}>\n        <FadeIn><CalendarOutlined style={IconColor}/>  </FadeIn>\n        <FadeIn><div style={{marginTop: \"40px\"}} onClick={()=>ChangeisClicked(!isClicked)}>\n                    {isClicked ?  <VisibilityOffIcon style={VisibilityStle} /> : <VisibilityIcon style={VisibilityStle} />}\n                </div></FadeIn>\n        </div>\n        <DateContainer>\n            <EachateContainer>\n                {Layout.map((value, index) => <FadeIn><span key={index+1} style={{ padding: \"1px\" ,paddingTop: \"1px\" , fontSize: \"1.2em\", marginRight: \"30px\"}}>{value}</span></FadeIn> ) }\n            </EachateContainer>\n            <EachateContainer>\n                <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"1px\"}}>From</span></FadeIn>\n                <DateSelected\n                    //These are used to send these data to DataSlected to be used for Year, Month, Day \n                    ReturnFrom=\"From\"\n                    ReturnClickedFromYear={RecievedYear}\n                    ReturnClickedFromMonth={RecievedMonth} \n                    ReturnClickedFromDay={RecievedDay}\n                    name=\"start\"\n                    // gethandler={props.test}\n                    //The incoming dating is used to chagne the format of the date and then send that number to submission button\n                    submitDateValue={(value) => ChangeFromDate(value)} \n                    RecievedColor={props.ScheduleColor}\n                />\n            </EachateContainer>\n            <EachateContainer>\n                <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"25px\"}}>To </span></FadeIn>\n\n                <DateSelected \n                    //These are used to send these data to DataSlected to be used for Year, Month, Day \n                    ReturnFrom=\"To\"\n                    ReturnClickedToYear={RecievedToYear} \n                    ReturnClickedToMonth={RecievedToMonth} \n                    ReturnClickedToDay={RecievedToDay}\n                    name=\"end\"\n                    //this is to disable the values that are inside and it is going to DataSelected\n                    DisabledisClicked={isClicked} \n                    submitDateValue={(value) => ChangeToDate(value)} \n                    RecievedColor={props.ScheduleColor}\n                />\n            </EachateContainer>\n        </DateContainer>\n    </InfoContainer>\n\n    //To recieve a prop that will change the value from and to inside the schedule form to the value of From/to Date that has been created here  \n    props.GetFromDate(fromData)\n    props.GetToDate(ToData)\n    \n    return(calendar)\n}\n\nconst TimerContainer = (props) => {\n    //All Component Color Stle\n    const IconColor = { \n        color : props.ScheduleColor.IconC, \n        fontSize:\"25px\", \n        marginRight:\"15px\", \n        marginTop:\"4px\"\n    }\n    \n    //Visable and unvisable color style \n    const VisibilityStle = {\n        marginRight: \"4px\", \n        marginLeft:\"4px\",\n        marginTop:\"6px\" , \n        fontSize: \"21px\", \n        color : props.ScheduleColor.IconC\n    }\n\n    // This is a togole to change the state of the disabled and to change the icion as well \n    const [isClicked, ChangeisClicked] = useState(true)\n    \n    //this is the part where we change the icon based on clicking the div \n    const ShowData = <div onClick={()=>ChangeisClicked(!isClicked)}>\n        {isClicked ?  <VisibilityOffIcon style={VisibilityStle} /> : <VisibilityIcon style={VisibilityStle} />}\n    </div>\n    //This is for the layout for Hour Minuts Day system\n    const Layout = ['','Hour','Minuts','AM / PM']\n\n    const [StartHoursValue, ChangeStartHourValue ]= useState()\n    const [StartMinutsValue, ChangeStartMinutsValue ]= useState()\n    const [StartDayValue, ChangeStartDayValue ]= useState()\n    const [EndHoursValue, ChangeEndHourValue ]= useState()\n    const [EndMinutsValue, ChangeEndMinutsValue ]= useState()\n    const [EndDayValue, ChangeEndDayValue ]= useState()\n    \n    const time =<InfoContainer>\n        <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-start\"}}>\n            <FadeIn><ClockCircleOutlined style={IconColor}/>  </FadeIn>\n            <FadeIn>{ShowData}</FadeIn>\n        </div>\n        <DateContainer>\n            <EachateContainer>\n                {Layout.map(value =><FadeIn><span style={{ padding: \"1px\" ,paddingTop: \"1px\" , fontSize: \"1.2em\", marginRight: \"1px\"}}>{value}</span></FadeIn> ) }\n            </EachateContainer>\n            <EachateContainer>\n                <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"5px\"}}>Start</span></FadeIn>\n                <TimeSelected \n                    submitHourValue={(value) => ChangeStartHourValue(value)}\n                    submitMinutsValue={(value) => ChangeStartMinutsValue(value)}\n                    submitDayValue={(value) => ChangeStartDayValue(value)}\n                    RecievedColor={props.ScheduleColor}\n                    //this is to disable the values that are inside and it is going to DataSelected\n                    DisabledisClicked={isClicked} \n                    />\n            </EachateContainer>\n            <EachateContainer>\n                <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"12px\"}}>End</span></FadeIn>\n                <TimeSelected \n                    submitHourValue={(value) => ChangeEndHourValue(value)}\n                    submitMinutsValue={(value) => ChangeEndMinutsValue(value)}\n                    submitDayValue={(value) => ChangeEndDayValue(value)}\n                    RecievedColor={props.ScheduleColor}\n                    //this is to disable the values that are inside and it is going to DataSelected\n                    DisabledisClicked={isClicked} \n                    />\n            </EachateContainer>\n        </DateContainer>\n        </InfoContainer>\n\n    props.FromHourSelected(StartHoursValue)\n    props.ToHourlected(EndHoursValue)\n    props.FromMinutsSelected(StartMinutsValue)\n    props.ToMinutsSelected(EndMinutsValue)\n    props.FromDayValueSelected(StartDayValue)\n    props.ToDayValueSelected(EndDayValue)\n\n    return (time)\n}\n\nexport  {CalenderContianer, TimerContainer};","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/DateSelected.js",["175","176","177","178","179","180","181","182"],"import React, { useState } from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport SelectData from \"../../../../../UI/Select\";\nimport {\n  NumberOfYearsValue,\n  NumberOfMonthsValue,\n  NumberOfDaysValue,\n} from \"./OptionsForm\";\n\nconst DateSelected = (props) => {\n  //This part is changed once the user click on the drop down to see other options\n  const [GetUserChangeYear, ChnageUserChangedYear] = useState(true);\n  /*\n        This part is chicking if the input that the user entered is what is wanted or not \n        Once the select is clicked then it will change to normal dropdown with input number \n    */\n  const [YearsValueInput, ChangeYearsValueInput] = useState(\n    GetUserChangeYear\n      ? props.ReturnFrom === \"From\"\n        ? props.ReturnClickedFromYear\n        : props.ReturnClickedToYear\n      : \"\"\n  );\n  const handleYears = (e) => (\n    ChangeYearsValueInput(e.target.value), ChnageUserChangedYear(false)\n  );\n  const Years = (\n    <FadeIn>\n      <SelectData\n        value=\"as\"\n        PlaceholderValue=\"asdfas\"\n        inputType={\"text\"}\n        name={props.name == \"start\" ? \"start\" : \"end\"}\n        widthValue={\"112px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={props.DisabledisClicked ? \"\" : \"FOCUS\"}\n        borderRadiusValue={\"7px\"}\n        backGroundColorValue={props.RecievedColor.UserInputBGC}\n        FontColorValue={props.RecievedColor.UserInputFC}\n        PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\n        borderColorValue={\n          props.DisabledisClicked ? \"#A9A9A9\" : props.RecievedColor.BorderColor\n        }\n        BorderValue={\"solid\"}\n        borderWidthValue={\"thin\"}\n        marginRightValue={\"15px\"}\n        onchangeValue={handleYears}\n        InputValue={YearsValueInput}\n      >\n        {\n          <NumberOfYearsValue\n            //this is the DisabledisClicked that is coming from DropDown to change every time we click on the icion\n            DisabledYear={props.DisabledisClicked}\n          />\n        }\n      </SelectData>\n    </FadeIn>\n  );\n\n  // This part is changed once the user click on the drop down to see other options\n  const [GetUserChangeMonth, ChnageUserChangedMonth] = useState(true);\n  /*\n        This part is chicking if the input that the user entered is what is wanted or not \n        Once the select is clicked then it will change to normal dropdown with input number \n    */\n  const [MonthsValueInput, ChangeMonthsValue] = useState(\n    GetUserChangeMonth\n      ? props.ReturnFrom === \"From\"\n        ? props.ReturnClickedFromMonth\n        : props.ReturnClickedToMonth\n      : \"\"\n  );\n  const handleMonths = (e) => (\n    ChangeMonthsValue(e.target.value), ChnageUserChangedMonth(false)\n  );\n  const Months = (\n    <FadeIn>\n      <SelectData\n        // key={MonthsValueInput.id}\n        inputType={\"text\"}\n        name={props.name == \"start\" ? \"start\" : \"end\"}\n        widthValue={\"112px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={props.DisabledisClicked ? \"\" : \"FOCUS\"}\n        borderRadiusValue={\"7px\"}\n        backGroundColorValue={props.RecievedColor.UserInputBGC}\n        FontColorValue={props.RecievedColor.UserInputFC}\n        PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\n        borderColorValue={\n          props.DisabledisClicked ? \"#A9A9A9\" : props.RecievedColor.BorderColor\n        }\n        BorderValue={\"solid\"}\n        borderWidthValue={\"thin\"}\n        marginRightValue={\"15px\"}\n        onchangeValue={handleMonths}\n        InputValue={MonthsValueInput}\n      >\n        {\n          <NumberOfMonthsValue\n            //this is the DisabledisClicked that is coming from DropDown to change every time we click on the icion\n            DisabledMonth={props.DisabledisClicked}\n          />\n        }\n      </SelectData>\n    </FadeIn>\n  );\n\n  // This part is changed once the user click on the drop down to see other options\n  const [GetUserChangeDay, ChnageUserChangedDay] = useState(true);\n  /*\n        This part is chicking if the input that the user entered is what is wanted or not \n        Once the select is clicked then it will change to normal dropdown with input number \n    */\n  const [DayValueInput, ChangeDayValue] = useState(\n    GetUserChangeDay\n      ? props.ReturnFrom === \"From\"\n        ? props.ReturnClickedFromDay\n        : props.ReturnClickedToDay\n      : \"\"\n  );\n  const handleDays = (e) => (\n    console.log(e.target),\n    ChangeDayValue(e.target.value), ChnageUserChangedDay(false)\n  );\n  const name = props.name == \"start\" ? \"start\" : \"end\"\n  const Days = (\n    <FadeIn>\n      <SelectData\n        // key={DayValueInput.id}\n        inputType={\"text\"}\n        name={props.name == \"start\" ? \"start\" : \"end\"}\n        widthValue={\"112px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={props.DisabledisClicked ? \"\" : \"FOCUS\"}\n        borderRadiusValue={\"7px\"}\n        backGroundColorValue={props.RecievedColor.UserInputBGC}\n        FontColorValue={props.RecievedColor.UserInputFC}\n        PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\n        borderColorValue={\n          props.DisabledisClicked ? \"#A9A9A9\" : props.RecievedColor.BorderColor\n        }\n        BorderValue={\"solid\"}\n        borderWidthValue={\"thin\"}\n        marginRightValue={\"15px\"}\n        onchangeValue={handleDays}\n        InputValue={DayValueInput}\n      >\n        {\n          <NumberOfDaysValue\n            //this is the DisabledisClicked that is coming from DropDown to change every time we click on the icion\n            DisabledDay={props.DisabledisClicked}\n          />\n        }\n      </SelectData>\n    </FadeIn>\n  );\n\n  //this is submitted to DropDownContainer\n  props.submitDateValue(\n    YearsValueInput + \"-\" + MonthsValueInput + \"-\" + DayValueInput\n  );\n\n  return [Years, Months, Days];\n};\n\nexport default DateSelected;\n","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/TimeSelected.js",[],"/Users/mero/Project/mero/notesk/src/UI/Select.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/OptionsForm.js",["183"],"import React, { useState } from \"react\";\n\n//this is for the hour input \nconst HourValue = (props) => {\n\n    const Hours = ['01','02','03','04','05','06','07','08','09','10','11','12']\n    const DailyHours = (\n        [Hours.map((Hour, index) => \n            <option disabled={props.DisabledHour}  key={index.id + 1} value={Hour}>{Hour}</option>)]\n        )\n    return(DailyHours)\n}\nconst MinutsValue = (props) => {\n\n    //this is for the hour input \n    const Minuts = ['05','10','15','20','25','30','35','40','45','50','55']\n    const DailyMinut =(\n        [Minuts.map((Minut, index) => \n            <option disabled={props.DisabledMinuts} key={index.id + 1} value={Minut}>{Minut}</option>)]\n        )\n    return(DailyMinut)\n}\nconst TwelveHourSystemValue = (props) => {\n\n    //this for either AM or PM\n    const TwelveHourSystem = ['AM','PM']\n    const DayDivided =(\n        [TwelveHourSystem.map((DayTime, index) => \n            <option disabled={props.DisabledHourSystem} key={index.id + 1} value={DayTime}>{DayTime}</option>)]\n        )\n    return(DayDivided)\n}\nconst NumberOfYearsValue = (props) => { \n    //this is for the years from this year \n    const NumberOfYears = [ '2020','2021', '2022', '2023', '2024','2025', '2026', \n                            '2027', '2028', '2029', '2030', '2031', '2032','2033', \n                            '2034','2035', '2036', '2037', '2038', '2039','2040']\n    const YearContainer = (\n        [NumberOfYears.map((year, index) => <option  disabled={props.DisabledYear}  key={index.id + 1} value={year}>{year}</option>)]\n    )\n    \n    return(\n        YearContainer\n        )\n}\nconst NumberOfMonthsValue = (props) => { \n    //this is for the months in a year \n    const NumberOfMonths = ['01','02','03','04','05','06','07','08','09','10','11','12']\n    const MonthContainer = (\n        [NumberOfMonths.map((month, index) => <option disabled={props.DisabledMonth} key={index.id + 1}  value={month}>{month}</option>)]\n        )\n    return(MonthContainer)\n}\nconst NumberOfDaysValue = (props) => { \n    //this is for the days in a Month \n    const NumberOfDays = ['01','02','03','04','05','06','07','08','09','10',\n                        '11','12','13','14','15','16','17','18','19','20',\n                        '21','22','23','24','25','26','27','28','29','30','31']\n    const DayContainer = (\n        [NumberOfDays.map((days,index ) => <option disabled={props.DisabledDay} key={index.id + 1} value={days}>{days}</option>)]\n        )\n    return(DayContainer)\n}\nconst ColorOptionsValue = () => {\n\n    //this is for the days in a Month \n    const ColorChoose = ['Choose Color','BlueViolet','Black','CornflowerBlue','DarkMagenta','DimGrey',\n                            'DodgerBlue','Fuchsia','MidnightBlue','Purple','Salmon']\n    const ColorContainer = (\n        [ColorChoose.map((Colors,index ) => <option  key={index.id + 1} value={Colors}>{Colors}</option>)]\n        )\n    return(ColorContainer)\n}\n\nexport {HourValue, MinutsValue, TwelveHourSystemValue, \n        NumberOfYearsValue, NumberOfMonthsValue, NumberOfDaysValue, \n        ColorOptionsValue};\n","/Users/mero/Project/mero/notesk/src/Routes/Calendar/CalendarCollection.js",["184","185","186","187","188"],"/Users/mero/Project/mero/notesk/src/Routes/Calendar/CalendarForm.js",["189","190","191","192"],{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":2,"column":8,"nodeType":"199","messageId":"200","endLine":2,"endColumn":14},{"ruleId":"197","severity":1,"message":"198","line":2,"column":8,"nodeType":"199","messageId":"200","endLine":2,"endColumn":14},{"ruleId":"197","severity":1,"message":"201","line":3,"column":52,"nodeType":"199","messageId":"200","endLine":3,"endColumn":67},{"ruleId":"197","severity":1,"message":"202","line":6,"column":10,"nodeType":"199","messageId":"200","endLine":6,"endColumn":23},{"ruleId":"197","severity":1,"message":"203","line":6,"column":25,"nodeType":"199","messageId":"200","endLine":6,"endColumn":39},{"ruleId":"197","severity":1,"message":"204","line":7,"column":8,"nodeType":"199","messageId":"200","endLine":7,"endColumn":17},{"ruleId":"205","severity":1,"message":"206","line":3,"column":1,"nodeType":"207","messageId":"208","endLine":5,"endColumn":15},{"ruleId":"197","severity":1,"message":"209","line":9,"column":7,"nodeType":"199","messageId":"200","endLine":9,"endColumn":20},{"ruleId":"197","severity":1,"message":"210","line":72,"column":21,"nodeType":"199","messageId":"200","endLine":72,"endColumn":43},{"ruleId":"197","severity":1,"message":"211","line":73,"column":19,"nodeType":"199","messageId":"200","endLine":73,"endColumn":39},{"ruleId":"197","severity":1,"message":"212","line":74,"column":9,"nodeType":"199","messageId":"200","endLine":74,"endColumn":13},{"ruleId":"197","severity":1,"message":"213","line":83,"column":10,"nodeType":"199","messageId":"200","endLine":83,"endColumn":20},{"ruleId":"197","severity":1,"message":"214","line":84,"column":10,"nodeType":"199","messageId":"200","endLine":84,"endColumn":21},{"ruleId":"197","severity":1,"message":"215","line":85,"column":10,"nodeType":"199","messageId":"200","endLine":85,"endColumn":18},{"ruleId":"197","severity":1,"message":"216","line":86,"column":10,"nodeType":"199","messageId":"200","endLine":86,"endColumn":18},{"ruleId":"197","severity":1,"message":"217","line":87,"column":10,"nodeType":"199","messageId":"200","endLine":87,"endColumn":19},{"ruleId":"197","severity":1,"message":"218","line":88,"column":10,"nodeType":"199","messageId":"200","endLine":88,"endColumn":16},{"ruleId":"197","severity":1,"message":"219","line":89,"column":9,"nodeType":"199","messageId":"200","endLine":89,"endColumn":13},{"ruleId":"197","severity":1,"message":"220","line":100,"column":10,"nodeType":"199","messageId":"200","endLine":100,"endColumn":26},{"ruleId":"197","severity":1,"message":"221","line":1,"column":26,"nodeType":"199","messageId":"200","endLine":1,"endColumn":35},{"ruleId":"197","severity":1,"message":"222","line":6,"column":10,"nodeType":"199","messageId":"200","endLine":6,"endColumn":15},{"ruleId":"223","severity":1,"message":"224","line":30,"column":9,"nodeType":"225","messageId":"226","endLine":30,"endColumn":10},{"ruleId":"197","severity":1,"message":"227","line":1,"column":17,"nodeType":"199","messageId":"200","endLine":1,"endColumn":25},{"ruleId":"197","severity":1,"message":"228","line":58,"column":33,"nodeType":"199","messageId":"200","endLine":58,"endColumn":58},{"ruleId":"197","severity":1,"message":"229","line":65,"column":35,"nodeType":"199","messageId":"200","endLine":65,"endColumn":62},{"ruleId":"223","severity":1,"message":"224","line":25,"column":42,"nodeType":"225","messageId":"226","endLine":25,"endColumn":43},{"ruleId":"230","severity":1,"message":"231","line":33,"column":26,"nodeType":"232","messageId":"233","endLine":33,"endColumn":28},{"ruleId":"223","severity":1,"message":"224","line":77,"column":38,"nodeType":"225","messageId":"226","endLine":77,"endColumn":39},{"ruleId":"230","severity":1,"message":"231","line":84,"column":26,"nodeType":"232","messageId":"233","endLine":84,"endColumn":28},{"ruleId":"223","severity":1,"message":"224","line":128,"column":26,"nodeType":"225","messageId":"226","endLine":128,"endColumn":27},{"ruleId":"197","severity":1,"message":"234","line":131,"column":9,"nodeType":"199","messageId":"200","endLine":131,"endColumn":13},{"ruleId":"230","severity":1,"message":"231","line":131,"column":27,"nodeType":"232","messageId":"233","endLine":131,"endColumn":29},{"ruleId":"230","severity":1,"message":"231","line":137,"column":26,"nodeType":"232","messageId":"233","endLine":137,"endColumn":28},{"ruleId":"197","severity":1,"message":"227","line":1,"column":17,"nodeType":"199","messageId":"200","endLine":1,"endColumn":25},{"ruleId":"197","severity":1,"message":"235","line":16,"column":10,"nodeType":"199","messageId":"200","endLine":16,"endColumn":21},{"ruleId":"197","severity":1,"message":"236","line":16,"column":23,"nodeType":"199","messageId":"200","endLine":16,"endColumn":37},{"ruleId":"197","severity":1,"message":"237","line":17,"column":10,"nodeType":"199","messageId":"200","endLine":17,"endColumn":20},{"ruleId":"238","severity":1,"message":"239","line":41,"column":7,"nodeType":"240","messageId":"233","endLine":41,"endColumn":16},{"ruleId":"223","severity":1,"message":"224","line":53,"column":52,"nodeType":"225","messageId":"226","endLine":53,"endColumn":53},{"ruleId":"197","severity":1,"message":"241","line":2,"column":24,"nodeType":"199","messageId":"200","endLine":2,"endColumn":34},{"ruleId":"197","severity":1,"message":"242","line":7,"column":26,"nodeType":"199","messageId":"200","endLine":7,"endColumn":39},{"ruleId":"197","severity":1,"message":"243","line":10,"column":20,"nodeType":"199","messageId":"200","endLine":10,"endColumn":34},{"ruleId":"197","severity":1,"message":"244","line":13,"column":16,"nodeType":"199","messageId":"200","endLine":13,"endColumn":22},"no-native-reassign",["245"],"no-negated-in-lhs",["246"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'UserAddOutlined' is defined but never used.","'LoginOutlined' is defined but never used.","'LogoutOutlined' is defined but never used.","'AppButton' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'InfoContainer' is assigned a value but never used.","'ChangeClickedStartDate' is assigned a value but never used.","'ChangeClickedEndDate' is assigned a value but never used.","'Data' is assigned a value but never used.","'StartHours' is assigned a value but never used.","'StartMinuts' is assigned a value but never used.","'StartDay' is assigned a value but never used.","'EndHours' is assigned a value but never used.","'EndMinuts' is assigned a value but never used.","'EndDay' is assigned a value but never used.","'Time' is assigned a value but never used.","'getSubmitClicked' is assigned a value but never used.","'useEffect' is defined but never used.","'Title' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'useState' is defined but never used.","'ChangeRecievedClickedDate' is assigned a value but never used.","'ChangeRecievedClickedDateTo' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'name' is assigned a value but never used.","'getIsSubmit' is assigned a value but never used.","'ChangeIsSubmit' is assigned a value but never used.","'getIsClose' is assigned a value but never used.","no-dupe-keys","Duplicate key 'textColor'.","ObjectExpression","'formatDate' is defined but never used.","'createEventId' is defined but never used.","'ChangegetEvent' is assigned a value but never used.","'istest' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]