[{"/Users/mero/Project/mero/notesk/src/index.js":"1","/Users/mero/Project/mero/notesk/src/App.js":"2","/Users/mero/Project/mero/notesk/src/serviceWorker.js":"3","/Users/mero/Project/mero/notesk/src/API/Weather.js":"4","/Users/mero/Project/mero/notesk/src/Routes/Login/Login.js":"5","/Users/mero/Project/mero/notesk/src/Routes/Signup/Signup.js":"6","/Users/mero/Project/mero/notesk/src/Routes/Notes/Notes.js":"7","/Users/mero/Project/mero/notesk/src/Routes/Calendar/Calendar.js":"8","/Users/mero/Project/mero/notesk/src/API/API.js":"9","/Users/mero/Project/mero/notesk/src/Routes/Login/LoginForm.js":"10","/Users/mero/Project/mero/notesk/src/Routes/Signup/SignupForm.js":"11","/Users/mero/Project/mero/notesk/src/UI/BlurDiv.js":"12","/Users/mero/Project/mero/notesk/src/UI/NavBar.js":"13","/Users/mero/Project/mero/notesk/src/UI/Footer.js":"14","/Users/mero/Project/mero/notesk/src/Routes/Notes/Note/Note.js":"15","/Users/mero/Project/mero/notesk/src/Routes/Notes/CreateNote/CreateNote.js":"16","/Users/mero/Project/mero/notesk/src/Routes/Calendar/CalendarForm.js":"17","/Users/mero/Project/mero/notesk/src/UI/UserInput.js":"18","/Users/mero/Project/mero/notesk/src/UI/Button.js":"19","/Users/mero/Project/mero/notesk/src/UI/Modal.js":"20","/Users/mero/Project/mero/notesk/src/UI/Switch.js":"21","/Users/mero/Project/mero/notesk/src/UI/UserIcon.js":"22","/Users/mero/Project/mero/notesk/src/UI/TextArea.js":"23","/Users/mero/Project/mero/notesk/src/Routes/Calendar/event-utils.js":"24","/Users/mero/Project/mero/notesk/src/Routes/Calendar/CalenderForm.js":"25","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/ScheduleForm.js":"26","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/InputContainer.js":"27","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DropDownContainer.js":"28","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/ColorContainer.js":"29","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/submitButtonContainer.js":"30","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DaysContainer.js":"31","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/DateSelected.js":"32","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/TimeSelected.js":"33","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/ColorSelected.js":"34","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/RepeatedDaysSelected.js":"35","/Users/mero/Project/mero/notesk/src/UI/Select.js":"36","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/OptionsForm.js":"37"},{"size":481,"mtime":1612050645018,"results":"38","hashOfConfig":"39"},{"size":2481,"mtime":1612050816114,"results":"40","hashOfConfig":"39"},{"size":5086,"mtime":1612050645018,"results":"41","hashOfConfig":"39"},{"size":369,"mtime":1612050645011,"results":"42","hashOfConfig":"39"},{"size":462,"mtime":1612050645013,"results":"43","hashOfConfig":"39"},{"size":467,"mtime":1612050645015,"results":"44","hashOfConfig":"39"},{"size":1980,"mtime":1612173981263,"results":"45","hashOfConfig":"39"},{"size":463,"mtime":1612349820640,"results":"46","hashOfConfig":"39"},{"size":313,"mtime":1612050645011,"results":"47","hashOfConfig":"39"},{"size":3709,"mtime":1612050645013,"results":"48","hashOfConfig":"39"},{"size":8660,"mtime":1612050816120,"results":"49","hashOfConfig":"39"},{"size":520,"mtime":1612050645015,"results":"50","hashOfConfig":"39"},{"size":1766,"mtime":1612052313555,"results":"51","hashOfConfig":"39"},{"size":521,"mtime":1612050645016,"results":"52","hashOfConfig":"39"},{"size":6058,"mtime":1612050816119,"results":"53","hashOfConfig":"39"},{"size":6099,"mtime":1612050645014,"results":"54","hashOfConfig":"39"},{"size":4882,"mtime":1612351136016,"results":"55","hashOfConfig":"39"},{"size":4250,"mtime":1612050816121,"results":"56","hashOfConfig":"39"},{"size":2896,"mtime":1612050816120,"results":"57","hashOfConfig":"39"},{"size":2965,"mtime":1612050645017,"results":"58","hashOfConfig":"39"},{"size":4339,"mtime":1612050645017,"results":"59","hashOfConfig":"39"},{"size":929,"mtime":1612050645017,"results":"60","hashOfConfig":"39"},{"size":2995,"mtime":1612050645017,"results":"61","hashOfConfig":"39"},{"size":378,"mtime":1612050645013,"results":"62","hashOfConfig":"39"},{"size":6282,"mtime":1612347486654,"results":"63","hashOfConfig":"39"},{"size":8584,"mtime":1612351024525,"results":"64","hashOfConfig":"39"},{"size":4811,"mtime":1612177003761,"results":"65","hashOfConfig":"39"},{"size":9009,"mtime":1612347110457,"results":"66","hashOfConfig":"39"},{"size":1364,"mtime":1612050816116,"results":"67","hashOfConfig":"39"},{"size":3616,"mtime":1612350392564,"results":"68","hashOfConfig":"39"},{"size":1052,"mtime":1612108032397,"results":"69","hashOfConfig":"39"},{"size":5652,"mtime":1612347417946,"results":"70","hashOfConfig":"39"},{"size":4136,"mtime":1612115953406,"results":"71","hashOfConfig":"39"},{"size":1291,"mtime":1612050816116,"results":"72","hashOfConfig":"39"},{"size":7832,"mtime":1612108262914,"results":"73","hashOfConfig":"39"},{"size":3140,"mtime":1612050816121,"results":"74","hashOfConfig":"39"},{"size":3064,"mtime":1612125272018,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"x9zsk2",{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"92"},"/Users/mero/Project/mero/notesk/src/index.js",[],"/Users/mero/Project/mero/notesk/src/App.js",["158"],"/Users/mero/Project/mero/notesk/src/serviceWorker.js",[],"/Users/mero/Project/mero/notesk/src/API/Weather.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Login/Login.js",["159"],"/Users/mero/Project/mero/notesk/src/Routes/Signup/Signup.js",["160"],"/Users/mero/Project/mero/notesk/src/Routes/Notes/Notes.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Calendar/Calendar.js",[],["161","162"],"/Users/mero/Project/mero/notesk/src/API/API.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Login/LoginForm.js",["163"],"/Users/mero/Project/mero/notesk/src/Routes/Signup/SignupForm.js",[],"/Users/mero/Project/mero/notesk/src/UI/BlurDiv.js",["164"],"/Users/mero/Project/mero/notesk/src/UI/NavBar.js",["165","166","167"],"/Users/mero/Project/mero/notesk/src/UI/Footer.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Notes/Note/Note.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Notes/CreateNote/CreateNote.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Calendar/CalendarForm.js",["168","169","170","171","172","173","174","175","176"],"/Users/mero/Project/mero/notesk/src/UI/UserInput.js",[],"/Users/mero/Project/mero/notesk/src/UI/Button.js",[],"/Users/mero/Project/mero/notesk/src/UI/Modal.js",[],"/Users/mero/Project/mero/notesk/src/UI/Switch.js",[],"/Users/mero/Project/mero/notesk/src/UI/UserIcon.js",[],"/Users/mero/Project/mero/notesk/src/UI/TextArea.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Calendar/event-utils.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Calendar/CalenderForm.js",["177","178","179","180","181","182","183","184","185","186","187","188","189"],"/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/ScheduleForm.js",["190","191","192"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport NoteContainer from '../../../UI/Modal'; \nimport FadeIn  from 'react-fade-in'; \n// import {TitleContainer, DescriptionContainer, URLContainer} from './Containers/InputContainer';\n// import {CalenderContianer, TimerContainer} from './Containers/DropDownContainer';\n// import {FontColorContainer} from './Containers/ColorContainer';\nimport {SubmissionContainer} from './Containers/submitButtonContainer'; \n// import {RDContainer} from './Containers/DaysContainer';\nimport { CloseOutlined, CloseCircleOutlined} from \"@ant-design/icons\";\n\nconst InfoContainer = styled.div`\n    width: 440px;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    margin: 4px;\n    margin-bottom: 10px;\n`\n\nconst Schedule = (props) => {\n    //Close is not hovered on color style \n    const VisibilityStle1 = {\n        marginRight: \"4px\", \n        marginLeft:\"95%\",\n        marginBottom:\"15px\" , \n        fontSize: \"21px\", \n        color : props.ScheduleColor.IconC\n    }\n    //Close is hovered on color style \n    const VisibilityStle2 = {\n        marginRight: \"4px\", \n        marginLeft:\"95%\",\n        marginBottom:\"15px\" , \n        fontSize: \"26px\", \n        color : props.ScheduleColor.IconC\n    }\n    // //This is for submission once it is clicked there will be a toggel\n    const [getSubmitClicked, ChangeSubmitClicked] = useState(props.SubmitIsClicked)\n    // //Clicked Date in the calender\n    // const [getClickedStartDate, ChangeClickedStartDate] = useState(props.SelectedStartDateClicked)\n    // const [getClickedEndDate, ChangeClickedEndDate] = useState(props.SelectedEndDateClicked)\n    // //Id for each Event\n    // const [IdCounter, ChnageIdCounter] = useState(0)\n    // //Title Area\n    // const [getTitleValue, ChangeTitleValu] = useState()\n    // const [TitlePlaceHoldervalue,ChangeTitlePlaceHolder] = useState(\"Title ...\")\n    // //Description Area\n    // const [getDescriptionValue, ChangeDescriptionValu] = useState()\n    // const [DescriptionPlaceHoldervalue,ChangeDescriptionPlaceHolder] = useState(\"Description ...\")\n    // //URL Area\n    // const [getURLValue, ChangegetURLValue] = useState()\n    // const [URLPlaceHolder,ChangeURLPlaceHolder] = useState(\"Optional Attached Link For Description ...\")\n    // //Date Value Area From\n    // const [getFormDateValue, ChangeFormDateValue] = useState()\n    // //Date Value Area To\n    // const [getToDateValue, ChangeToDateValue] = useState()\n    // //Time Values Area Started\n    // const [GetStartHoursValue, ChangeGetStartHourValue ]= useState()\n    // const [GetStartMinutsValue, ChangeGetStartMinutsValue ]= useState()\n    // const [GetStartDayValue, ChangeGetStartDayValue ]= useState()\n    // //Time Values Area Ended\n    // const [GetEndHoursValue, ChangeGetEndHourValue ]= useState()\n    // const [GetEndMinutsValue, ChangeGetEndMinutsValue ]= useState()\n    // const [GetEndDayValue, ChangeGetEndDayValue ]= useState()\n    // //Values of Repeated Days\n    // const [getRDValue, ChangeRDValu] = useState()\n    // //The collection of Data to create the Event\n    // const [CreateEvent, ChnageEventInfo]=useState()\n    //     {\n    //         id: `$ChnageIdCounter(prevCount => prevCount + 1)`,  \n    //         title: 'Testoing for more ', \n    //         start: '2021-01-30T12:30:00Z',\n    //         textColor:\"pink\", \n    //         end: '2021-02-02T13:30:00Z',\n    //         description: 'lets play some game s', \n    //         display: 'list-item', \n    //         backgroundColor:`${props.backGroundColorInput ? props.backGroundColorInput : \"black\"}`,\n    //         daysOfWeek: [ '1','4','5' ], //https://fullcalendar.io/docs/recurring-events\n    //         startTime: '10:45:00',\n    //         endTime: '12:45:00', \n    //     }\n    // )\n\n    const [isClode, ChangeIsClosed] = useState(true)\n\n   return(\n    <FadeIn>\n        <NoteContainer\n            position= {\"relative\"}\n            width= {\"520px\"}\n            margin= {\"30px auto 20px auto\"}\n            padding= {\"15px\"}\n            boxShadowValue= {\"0 1px 5px rgb(138, 137, 137)\"}\n            borderRadiusValue= {\"7px\"}\n            resizeValue={\"both\"}\n            backGroundColorValue={props.ScheduleColor.NotekBGC}\n            FontColorValue={props.ScheduleColor.NoteFC}\n            >\n                {isClode ? \n                    <CloseOutlined onMouseEnter={() =>ChangeIsClosed(false)} style={VisibilityStle1}/> \n                : \n                    <CloseCircleOutlined onClick={()=> props.CloseIsCliced(false)} onMouseLeave={() =>ChangeIsClosed(true)} style={VisibilityStle2}/>\n                }\n                {/* {<TitleContainer \n                    SubmitTitle={(value) => ChangeTitleValu(value)}\n                    SubmitTitlePlaceHolder={TitlePlaceHoldervalue}\n                    ScheduleColor={props.ScheduleColor}\n                    />} */}\n                {/* {<DescriptionContainer \n                    Description={(value) => ChangeDescriptionValu(value)}\n                    SubmitDescriptionPlaceHolder={DescriptionPlaceHoldervalue}\n                    ScheduleColor={props.ScheduleColor}\n                    />}\n                {<URLContainer \n                    URLOption={(value) => ChangegetURLValue(value)}\n                    SubmitURLPlaceHolder={URLPlaceHolder}\n                    ScheduleColor={props.ScheduleColor}\n                    />}\n                {<CalenderContianer \n                    SubmitFromDateSelected={(value) => ChangeFormDateValue(value)} \n                    SubmitToDateSelected={(value) => ChangeToDateValue(value)} \n                    RetrunClickedDate={getClickedStartDate}\n                    RetrunClickedEndDate={getClickedEndDate}\n                    ScheduleColor={props.ScheduleColor}\n                    />}\n                {<TimerContainer\n                    SubmitFromHourSelected={(value) => ChangeGetStartHourValue(value)}\n                    SubmitToHourlected={(value) => ChangeGetEndHourValue(value)}\n                    SubmitFromMinutsSelected={(value) => ChangeGetStartMinutsValue(value)}\n                    SubmitToMinutsSelected={(value) => ChangeGetEndMinutsValue(value)}\n                    SubmitFromDayValueSelected={(value) => ChangeGetStartDayValue(value)}\n                    SubmitToDayValueSelected={(value) => ChangeGetEndDayValue(value)} \n                    ScheduleColor={props.ScheduleColor}/>}\n                {<RDContainer \n                    SubmitNumberOfRP={(value) => ChangeRDValu(value)} \n                    ScheduleColor={props.ScheduleColor}/>} */}\n                {<SubmissionContainer \n\n                    \n\n                    //the following props is what we recieve from submission when we click on the button and it is coming from calendar file\n                    SubmitisClicked={(value)=>(props.SubmitIsClicked(value))}\n                    // SubmissionEvent={(value)=> props.GetEventValues(value)}\n                    // //The following props is used to send data to the calender and we are checking that in the submission\n                    // PassIdCounter={IdCounter}\n                    // //Title part\n                    // PassTitleValue={getTitleValue}\n                    // ChangePassTitlePlaceHolder={(value) => (ChangeTitlePlaceHolder(value))}\n                    // //Description Par\n                    // PassDescriptionValue={getDescriptionValue}\n                    // ChangeDescriptionPlaceHolder={(value) => ChangeDescriptionPlaceHolder(value)}\n                    // //Url\n                    // PassURLValue={getURLValue}\n                    // //From Data\n                    // PassFromDateValue={getFormDateValue}\n                    // //To Data\n                    // PassToDateValue={getToDateValue}\n                    // //Start Time\n                    // PassStartHour={GetStartHoursValue}\n                    // PassStartMinut={GetStartMinutsValue}\n                    // PassStartDayValue={GetStartDayValue}\n                    // //EndTime\n                    // PassEndHour={GetEndHoursValue}\n                    // PassEndMinut={GetEndMinutsValue}\n                    // PassEndDayValue={GetEndDayValue}\n                    // //Repeated Days\n                    // PassRepeatedDaysValue={getRDValue}\n                    // // PassTextColor={}\n                    // // PassbackgroundColor={}\n                    // // Passdisplay={}\n                    // ScheduleColor={props.ScheduleColor}\n                    />} \n        </NoteContainer>\n    </FadeIn>\n    )\n}\n\nexport default Schedule;\n","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/InputContainer.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DropDownContainer.js",["193"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\"; \nimport FadeIn  from 'react-fade-in'; \nimport { CalendarOutlined , ClockCircleOutlined} from \"@ant-design/icons\"; \nimport DateSelected from './DataCollection/DateSelected';\nimport TimeSelected from './DataCollection/TimeSelected';\nimport VisibilityIcon from '@material-ui/icons/Visibility'\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nconst InfoContainer = styled.div`\n    width: 440px;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    margin: 4px;\n    margin-bottom: 10px;\n`\nconst EachateContainer = styled.div`\n    width: 400px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    margin: 4px;\n`\nconst DateContainer = styled.div`\n    width: 400px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n`\n\n\nconst CalenderContianer = (props) => {\n    //All Component Color Stle\n    const IconColor = { \n        color : props.ScheduleColor.IconC, \n        fontSize:\"25px\", \n        marginRight:\"15px\", \n        marginTop:\"4px\" \n    }\n\n    //Visable and unvisable color style \n    const VisibilityStle = {\n        marginRight: \"4px\", \n        marginLeft:\"4px\",\n        marginTop:\"6px\" , \n        fontSize: \"21px\", \n        color : props.ScheduleColor.IconC\n    }\n    \n    // This is a togole to change the state of the disabled and to change the icion as well \n    const [isClicked, ChangeisClicked] = useState(true)\n\n    //This is for the layout for Year Month Days\n    const Layout = ['','Year','Month','Day']\n\n    //the date that the user clicked on to have it go to the data collection and have the same number \n    const [recievedClickedDate, ChangeRecievedClickedDate] = useState(props.RetrunClickedDate)\n    //Dividing the Recieved Date to Year Month Day and Send them to DateSelected\n    const RecievedYear = recievedClickedDate[0]\n    const RecievedMonth = recievedClickedDate[1]\n    const RecievedDay = recievedClickedDate[2]\n    // =====> TO\n    //the date that the user clicked on to have it go to the data collection and have the same number \n    const [recievedClickedDateTo, ChangeRecievedClickedDateTo] = useState(props.RetrunClickedEndDate)\n    //Dividing the Recieved Date to Year Month Day and Send them to DateSelected\n    const RecievedToYear = recievedClickedDateTo[0]\n    const RecievedToMonth = recievedClickedDateTo[1]\n    const RecievedToDay = recievedClickedDateTo[2]\n\n    //All the needed information for craeting the date From \n    const [fromData, ChangeFromDate] = useState()\n\n    //All the needed information for craeting the date To \n    const [ToData, ChangeToDate] = useState()\n\n    //This is the returned Date to the calendar\n    const calendar = <InfoContainer>\n        <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-start\"}}>\n        <FadeIn><CalendarOutlined style={IconColor}/>  </FadeIn>\n        <FadeIn><div style={{marginTop: \"40px\"}} onClick={()=>ChangeisClicked(!isClicked)}>\n                    {isClicked ?  <VisibilityOffIcon style={VisibilityStle} /> : <VisibilityIcon style={VisibilityStle} />}\n                </div></FadeIn>\n        </div>\n        <DateContainer>\n            <EachateContainer>\n                {Layout.map(value =><FadeIn><span style={{ padding: \"1px\" ,paddingTop: \"1px\" , fontSize: \"1.2em\", marginRight: \"30px\"}}>{value}</span></FadeIn> ) }\n            </EachateContainer>\n            <EachateContainer>\n                <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"1px\"}}>From</span></FadeIn>\n                <DateSelected\n                    //These are used to send these data to DataSlected to be used for Year, Month, Day \n                    ReturnFrom=\"From\"\n                    ReturnClickedFromYear={RecievedYear}\n                    ReturnClickedFromMonth={RecievedMonth} \n                    ReturnClickedFromDay={RecievedDay}\n                    //The incoming dating is used to chagne the format of the date and then send that number to submission button\n                    submitDateValue={(value) => ChangeFromDate(value)} \n                    RecievedColor={props.ScheduleColor}\n                />\n            </EachateContainer>\n            <EachateContainer>\n                <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"25px\"}}>To </span></FadeIn>\n\n                <DateSelected \n                    //These are used to send these data to DataSlected to be used for Year, Month, Day \n                    ReturnFrom=\"To\"\n                    ReturnClickedToYear={RecievedToYear} \n                    ReturnClickedToMonth={recievedClickedDateTo} \n                    ReturnClickedToDay={recievedClickedDateTo}\n                    //this is to disable the values that are inside and it is going to DataSelected\n                    DisabledisClicked={isClicked} \n                    submitDateValue={(value) => ChangeToDate(value)} \n                    RecievedColor={props.ScheduleColor}\n                />\n            </EachateContainer>\n        </DateContainer>\n    </InfoContainer>\n\n    //To recieve a prop that will change the value from and to inside the schedule form to the value of From/to Date that has been created here  \n    props.SubmitFromDateSelected(fromData)\n    props.SubmitToDateSelected(ToData)\n    \n    return(calendar)\n}\n\nconst TimerContainer = (props) => {\n    //All Component Color Stle\n    const IconColor = { \n        color : props.ScheduleColor.IconC, \n        fontSize:\"25px\", \n        marginRight:\"15px\", \n        marginTop:\"4px\"\n    }\n    \n    //Visable and unvisable color style \n    const VisibilityStle = {\n        marginRight: \"4px\", \n        marginLeft:\"4px\",\n        marginTop:\"6px\" , \n        fontSize: \"21px\", \n        color : props.ScheduleColor.IconC\n    }\n\n    // This is a togole to change the state of the disabled and to change the icion as well \n    const [isClicked, ChangeisClicked] = useState(true)\n    \n    //this is the part where we change the icon based on clicking the div \n    const mero = <div onClick={()=>ChangeisClicked(!isClicked)}>\n        {isClicked ?  <VisibilityOffIcon style={VisibilityStle} /> : <VisibilityIcon style={VisibilityStle} />}\n    </div>\n    //This is for the layout for Hour Minuts Day system\n    const Layout = ['','Hour','Minuts','AM / PM']\n\n    const [StartHoursValue, ChangeStartHourValue ]= useState()\n    const [StartMinutsValue, ChangeStartMinutsValue ]= useState()\n    const [StartDayValue, ChangeStartDayValue ]= useState()\n    const [EndHoursValue, ChangeEndHourValue ]= useState()\n    const [EndMinutsValue, ChangeEndMinutsValue ]= useState()\n    const [EndDayValue, ChangeEndDayValue ]= useState()\n    \n    const time =<InfoContainer>\n        <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-start\"}}>\n            <FadeIn><ClockCircleOutlined style={IconColor}/>  </FadeIn>\n            <FadeIn>{mero}</FadeIn>\n        </div>\n        <DateContainer>\n            <EachateContainer>\n                {Layout.map(value =><FadeIn><span style={{ padding: \"1px\" ,paddingTop: \"1px\" , fontSize: \"1.2em\", marginRight: \"1px\"}}>{value}</span></FadeIn> ) }\n            </EachateContainer>\n            <EachateContainer>\n                <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"5px\"}}>Start</span></FadeIn>\n                <TimeSelected \n                    submitHourValue={(value) => ChangeStartHourValue(value)}\n                    submitMinutsValue={(value) => ChangeStartMinutsValue(value)}\n                    submitDayValue={(value) => ChangeStartDayValue(value)}\n                    RecievedColor={props.ScheduleColor}\n                    //this is to disable the values that are inside and it is going to DataSelected\n                    DisabledisClicked={isClicked} \n                    />\n            </EachateContainer>\n            <EachateContainer>\n                <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"12px\"}}>End</span></FadeIn>\n                <TimeSelected \n                    submitHourValue={(value) => ChangeEndHourValue(value)}\n                    submitMinutsValue={(value) => ChangeEndMinutsValue(value)}\n                    submitDayValue={(value) => ChangeEndDayValue(value)}\n                    RecievedColor={props.ScheduleColor}\n                    //this is to disable the values that are inside and it is going to DataSelected\n                    DisabledisClicked={isClicked} \n                    />\n            </EachateContainer>\n        </DateContainer>\n        </InfoContainer>\n\n    props.SubmitFromHourSelected(StartHoursValue)\n    props.SubmitToHourlected(EndHoursValue)\n    props.SubmitFromMinutsSelected(StartMinutsValue)\n    props.SubmitToMinutsSelected(EndMinutsValue)\n    props.SubmitFromDayValueSelected(StartDayValue)\n    props.SubmitToDayValueSelected(EndDayValue)\n\n    return (time)\n}\n\nexport  {CalenderContianer, TimerContainer};","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/ColorContainer.js",["194"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\"; \nimport FadeIn  from 'react-fade-in'; \nimport {BgColorsOutlined} from \"@ant-design/icons\"; \nimport ColorLensIcon from '@material-ui/icons/ColorLens';\nimport ColorSelected from './DataCollection/ColorSelected';\n\n\nconst InfoContainer = styled.div`\n    width: 440px;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    margin: 4px;\n    margin-bottom: 10px;\n`\nconst EachateContainer = styled.div`\n    width: 350px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    margin: 4px;\n`\n\nconst FontColorContainer = (props) => {\n\n    const FontColor = <InfoContainer>\n            <EachateContainer>\n                <FadeIn><BgColorsOutlined style={{fontSize:\"32px\",color : props.ScheduleColor.IconC,marginRight:\"9px\",marginTop:\"4px\"}}/></FadeIn>\n                <FadeIn><ColorSelected RecievedColor={props.ScheduleColor}/></FadeIn>\n            </EachateContainer>\n            <EachateContainer>\n                <FadeIn><ColorLensIcon style={{fontSize:\"32px\",color : props.ScheduleColor.IconC,marginRight:\"9px\",marginTop:\"4px\"}}/></FadeIn>\n                <FadeIn><ColorSelected RecievedColor={props.ScheduleColor}/></FadeIn>\n            </EachateContainer>\n    </InfoContainer>\n\n    return(FontColor)\n}\nexport  {FontColorContainer};","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/submitButtonContainer.js",["195","196","197","198","199"],"\n\nimport React, { useState } from \"react\";\nimport FadeIn  from 'react-fade-in'; \nimport {LoginOutlined} from \"@ant-design/icons\"; \nimport Button from '../../../../UI/Button';\n\nconst SubmissionContainer = (props) => {\n    const [CreateEvent, ChanageEventInfo] = useState()\n    //     {\n    //         Id: '',  \n    //         title: '', \n    //         description: '', \n    //         Url: '',\n    //         // textColor:\"pink\", \n    //         start: '',\n    //         end: '',\n    //         display: '', \n    //         // backgroundColor:`${props.backGroundColorInput ? props.backGroundColorInput : \"black\"}`,\n    //         // daysOfWeek: [ '1','4','5' ], //https://fullcalendar.io/docs/recurring-events\n    //         start: '2021-02-12T10:30:00',\n    //         end: '2021-02-12T11:30:00',\n    //     }\n    // )\n    // props.SubmissionEvent(CreateEvent)\n    const subNote = (event) => {\n        event.preventDefault(props.PassDescriptionValue);\n        // (props.PassTitleValue === \"\" && props.PassDescriptionValue === \"\" ) ?\n        //     ( <FadeIn>\n        //         {props.ChangePassTitlePlaceHolder(\"Please Enter A Title ....(-_-)\") \n        //         , props.ChangeDescriptionPlaceHolder(\"Please Enter A Title ....(-_-)\")}\n        //     </FadeIn> )\n        // : (props.PassTitleValue === \"\") ? \n        //     ( <FadeIn>\n        //         {props.ChangePassTitlePlaceHolder(\"Please Enter A Title ....(-_-)\")}\n        //     </FadeIn>)\n        // : (props.PassDescriptionValue === \"\" )?\n        //     ( <FadeIn>\n        //         {props.ChangeDescriptionPlaceHolder(\"Please Enter A Title ....(-_-)\")}\n        //     </FadeIn>)\n        // : (\n            <FadeIn>{\n                ChanageEventInfo(\n                    {\n                        \n                            start: '2021-02-13',textColor:\"pink\", end: '2021-02-14',\n                        // daysOfWeek: [ '1','4','5' ], //https://fullcalendar.io/docs/recurring-events\n                        startTime: '10:45:00',\n                          endTime: '12:45:00'\n                          , display: 'list-item'\n                      \n                      }\n                //     { \n                //     Id: props.PassIdCounter + 1 , \n                //     titles: props.PassTitleValue,\n                //     description: props.PassDescriptionValue,\n                //     Url: props.PassURLValue,\n                // }\n                ) ,\n                props.SubmitisClicked(false)\n\n            }</FadeIn>\n        // )\n    }\n    const [IsShown, setIsShown] = useState(false)\n    const ButtonIconColor = { \n        // color : props.ScheduleColor.IconC, \n        fontSize:\"20px\", \n        marginRight:\"9px\", \n        marginTop:\"4px\" \n    }\n    const SubmitButton = <FadeIn>\n        <Button\n        width={\"120px\"}\n        marginBottomValue={\"10px\"}\n        marginLeftValue={\"35%\"}\n        fontSizeValue={\"20px\"}\n        borderRadiusValue={\"15px\"}\n        // backGroundColorValue={IsShown ? props.ScheduleColor.LogSignColor : props.ScheduleColor.UserInputBGC }\n        // FontColorValue={props.ScheduleColor.IconC}\n        // borderColorValue={props.ScheduleColor.BorderColor}\n        IsCalledValue={\"hover\"} \n        BorderValue=\"solid\"\n        borderWidthValue=\"thin\"\n        paddingInputValue=\"2px\"\n        // onMouseEnter={() => setIsShown(true)}\n        // onMouseLeave={() => setIsShown(false)}\n        onClick={()=>props.SubmitisClicked(false)} \n        text = {\"Submit\"} \n        icon = {<LoginOutlined style={ButtonIconColor}/>}\n        />\n    </FadeIn>\n    \n    return (SubmitButton)\n}\n\nexport  {SubmissionContainer};\n","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DaysContainer.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/DateSelected.js",["200","201","202"],"\nimport React, { useState } from \"react\";\nimport FadeIn  from 'react-fade-in';\nimport SelectData from '../../../../../UI/Select';\nimport {NumberOfYearsValue, NumberOfMonthsValue, NumberOfDaysValue} from './OptionsForm'\n\nconst DateSelected = (props) => {\n\n    //This part is changed once the user click on the drop down to see other options \n    const [GetUserChangeYear, ChnageUserChangedYear] = useState(true)\n    /*\n        This part is chicking if the input that the user entered is what is wanted or not \n        Once the select is clicked then it will change to normal dropdown with input number \n    */\n    const [YearsValueInput, ChangeYearsValueInput] = useState(GetUserChangeYear ? (props.ReturnFrom===\"From\" ? props.ReturnClickedFromYear : props.ReturnClickedToYear) : \"\")\n    const handleYears = (e) =>(\n        ChangeYearsValueInput(e.target.value ),\n        ChnageUserChangedYear(false)\n    )\n    const Years = <FadeIn><SelectData \n        value=\"as\"\n        PlaceholderValue=\"asdfas\"\n        inputType={\"text\"}\n        name=\"title\"\n        widthValue={\"112px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={props.DisabledisClicked? \"\" :\"FOCUS\"} \n        borderRadiusValue= {\"7px\"}\n        backGroundColorValue={ props.RecievedColor.UserInputBGC}\n        FontColorValue={props.RecievedColor.UserInputFC}\n        PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\n        borderColorValue={props.DisabledisClicked ? \"#A9A9A9\" :props.RecievedColor.BorderColor}  \n        BorderValue={\"solid\"}\n        borderWidthValue={\"thin\"}\n        marginRightValue={\"15px\"}\n        onchangeValue = {handleYears}\n        InputValue = {YearsValueInput}\n       >\n       {<NumberOfYearsValue \n            //this is the DisabledisClicked that is coming from DropDown to change every time we click on the icion\n            DisabledYear={props.DisabledisClicked}\n        />} \n    </SelectData></FadeIn>\n\n    // This part is changed once the user click on the drop down to see other options\n    const [GetUserChangeMonth, ChnageUserChangedMonth] = useState(true)\n    /*\n        This part is chicking if the input that the user entered is what is wanted or not \n        Once the select is clicked then it will change to normal dropdown with input number \n    */\n    const [MonthsValueInput, ChangeMonthsValue] = useState(GetUserChangeMonth ? (props.ReturnFrom===\"From\" ? props.ReturnClickedFromMonth : props.ReturnClickedToMonth) : \"\")\n    const handleMonths = (e) =>(\n        ChangeMonthsValue(e.target.value ),\n        ChnageUserChangedMonth(false)\n    )\n    const Months = <FadeIn><SelectData \n        // key={MonthsValueInput.id}\n        inputType={\"text\"}\n        name=\"title\"\n        widthValue={\"112px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={props.DisabledisClicked? \"\" :\"FOCUS\"} \n        borderRadiusValue= {\"7px\"}\n        backGroundColorValue={ props.RecievedColor.UserInputBGC}\n        FontColorValue={props.RecievedColor.UserInputFC}\n        PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\n        borderColorValue={props.DisabledisClicked ? \"#A9A9A9\" :props.RecievedColor.BorderColor}  \n        BorderValue={\"solid\"}\n        borderWidthValue={\"thin\"}\n        marginRightValue={\"15px\"}\n        onchangeValue = {handleMonths}\n        InputValue = {MonthsValueInput}\n        >\n        {<NumberOfMonthsValue   \n            //this is the DisabledisClicked that is coming from DropDown to change every time we click on the icion\n            DisabledMonth={props.DisabledisClicked}/>}\n    </SelectData></FadeIn>\n\n    \n    // This part is changed once the user click on the drop down to see other options\n    const [GetUserChangeDay, ChnageUserChangedDay] = useState(true)\n    /*\n        This part is chicking if the input that the user entered is what is wanted or not \n        Once the select is clicked then it will change to normal dropdown with input number \n    */\n    const [DayValueInput, ChangeDayValue] = useState(GetUserChangeDay ? (props.ReturnFrom===\"From\" ? props.ReturnClickedFromDay : props.ReturnClickedToDay) : \"\")\n    const handleDays = (e) =>(\n        ChangeDayValue(e.target.value ),\n        ChnageUserChangedDay(false)\n    )\n    const Days = <FadeIn><SelectData \n        // key={DayValueInput.id}\n        inputType={\"text\"}\n        name=\"title\"\n        widthValue={\"112px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={props.DisabledisClicked? \"\" :\"FOCUS\"} \n        borderRadiusValue= {\"7px\"}\n        backGroundColorValue={ props.RecievedColor.UserInputBGC}\n        FontColorValue={props.RecievedColor.UserInputFC}\n        PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\n        borderColorValue={props.DisabledisClicked ? \"#A9A9A9\" :props.RecievedColor.BorderColor}  \n        BorderValue={\"solid\"}\n        borderWidthValue={\"thin\"}\n        marginRightValue={\"15px\"}\n        onchangeValue = {handleDays}\n        InputValue = {DayValueInput}\n        >\n        {<NumberOfDaysValue \n            //this is the DisabledisClicked that is coming from DropDown to change every time we click on the icion\n            DisabledDay={props.DisabledisClicked}\n        />}\n    </SelectData></FadeIn>\n    \n    //this is submitted to DropDownContainer\n    props.submitDateValue(YearsValueInput+ '-'+ MonthsValueInput + '-' + DayValueInput)\n    \n    return ([ Years, Months, Days])\n}\n\nexport default DateSelected;","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/TimeSelected.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/ColorSelected.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/RepeatedDaysSelected.js",["203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229"],"import React, { useState } from \"react\";\nimport FadeIn  from 'react-fade-in';\nimport Inputdata from '../../../../../UI/UserInput';\n\n\nconst RepeatDaySelected = (props) => {\n    const [NumberOfRepeatedDays,ChangeNumberOfRepeatedDays] = useState([])\n    const [isMonday,ChangeisMonday]= useState(false)\n    const [isTuesday,ChangeisTuesday]= useState(false)\n    const [isWednesday,ChangeisWednesday]= useState(false)\n    const [isThursday,ChangeisThursday]= useState(false)\n    const [isFriday,ChangeisFriday]= useState(false)\n    const [isSaturday,ChangeisSaturday]= useState(false)\n    const [isSunday,ChangeisSunday]= useState(false)\n    const ChoosenDay = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday']\n\n    //This is to check The value that is clicked is which day \n    const handleRepeatedDays = (e) =>{\n        const onchangeValue = e.target.value\n        return ( \n            onchangeValue == \"Monday\" ? (\n                isMonday == false ? \n                    (ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.concat('0')), ChangeisMonday(true)) \n                    :\n                    (NumberOfRepeatedDays.length == 0 ? \n                        (ChangeisMonday(false)) \n                        : \n                        ( onchangeValue != \"Monday\" ? \n                            ChangeisMonday(false) \n                            : \n                            (ChangeisMonday(false), ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.filter(Value => Value !== \"0\")))\n                        ) \n                    ) \n            ) :\n            onchangeValue == \"Tuesday\" ? (\n                isTuesday == false ? \n                    (ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.concat('1')), ChangeisTuesday(true)) \n                    :\n                    (NumberOfRepeatedDays.length == 0 ? \n                        (ChangeisTuesday(false)) \n                        : \n                        ( onchangeValue != \"Tuesday\" ? \n                            ChangeisTuesday(false) \n                            : \n                            (ChangeisTuesday(false), ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.filter(Value => Value !== \"1\")))\n                        ) \n                    )\n                ) :\n            onchangeValue == \"Wednesday\" ? (\n                isWednesday == false ? \n                    (ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.concat('2')), ChangeisWednesday(true)) \n                    :\n                    (NumberOfRepeatedDays.length == 0 ? \n                        (ChangeisWednesday(false)) \n                        : \n                        ( onchangeValue != \"Wednesday\" ? \n                            ChangeisWednesday(false) \n                            : \n                            (ChangeisWednesday(false), ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.filter(Value => Value !== \"2\")))\n                        ) \n                    )\n                ) :\n            onchangeValue == \"Thursday\" ? (\n                isThursday == false ? \n                    (ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.concat('3')), ChangeisThursday(true)) \n                    :\n                    (NumberOfRepeatedDays.length == 0 ? \n                        (ChangeisThursday(false)) \n                        : \n                        ( onchangeValue != \"Thursday\" ? \n                            ChangeisThursday(false) \n                            : \n                            (ChangeisThursday(false), ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.filter(Value => Value !== \"3\")))\n                        ) \n                    )\n                ) :\n            onchangeValue == \"Friday\" ? (\n                isFriday == false ? \n                     (ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.concat('4')), ChangeisFriday(true)) \n                    :\n                    (NumberOfRepeatedDays.length == 0 ? \n                        (ChangeisFriday(false)) \n                        : \n                        ( onchangeValue != \"Friday\" ? \n                            ChangeisFriday(false) \n                            : \n                            (ChangeisFriday(false), ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.filter(Value => Value !== \"4\")))\n                        ) \n                    ) \n                ) :\n            onchangeValue == \"Saturday\" ? (\n                isSaturday == false ? \n                    (ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.concat('5')), ChangeisSaturday(true)) \n                    :\n                    (NumberOfRepeatedDays.length == 0 ? \n                        (ChangeisSaturday(false)) \n                        : \n                        ( onchangeValue != \"Saturday\" ? \n                            ChangeisSaturday(false) \n                            : \n                            (ChangeisSaturday(false), ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.filter(Value => Value !== \"5\")))\n                        ) \n                    )  \n                ):\n            ( \n                isSunday == false ? \n                    (ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.concat('6')), ChangeisSunday(true)) \n                    :\n                    (NumberOfRepeatedDays.length == 0 ? \n                        (ChangeisSunday(false)) \n                        : \n                        (onchangeValue != \"Sunday\" ? \n                            ChangeisSunday(false) \n                            : \n                            (ChangeisSunday(false), ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.filter(Value => Value !== \"6\")))\n                        )\n                    )\n            )\n        )\n    }\n\n    const RepeatedDayContainer = (DayValue,OnChangeInputValue) => {\n        return [<Inputdata \n            key={NumberOfRepeatedDays.id}\n            inputType={\"checkbox\"}\n            name=\"title\"\n            widthValue={\"20px\"}\n            paddingVale={\"2px\"}\n            outlineValue={\"none\"}\n            fontSizeValue={\"1.2em\"}\n            fontFamilyValue={\"inherit\"}\n            IsCalledValue={\"FOCUS\"} \n            borderRadiusValue= {\"7px\"}\n            backGroundColorValue={ props.RecievedColor.UserInputBGC}\n            FontColorValue={props.RecievedColor.UserInputFC}\n            PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\n            borderColorValue={props.RecievedColor.BorderColor} \n            BorderValue={\"solid\"}\n            borderWidthValue={\"thin\"}\n            marginRightValue={\"5px\"}\n            marginTopValue={\"4px\"}\n            onchangeValue = {OnChangeInputValue}\n            InputValue = {DayValue}\n            ></Inputdata>,\n            <label key={NumberOfRepeatedDays.id} style={{marginRight: \"10px\"}}>{DayValue}</label>]\n        }\n        \n    const LineOne = [RepeatedDayContainer(ChoosenDay[0],handleRepeatedDays),\n                     RepeatedDayContainer(ChoosenDay[1],handleRepeatedDays),\n                     RepeatedDayContainer(ChoosenDay[2],handleRepeatedDays),\n                     RepeatedDayContainer(ChoosenDay[3],handleRepeatedDays)]\n    const LineTwo = [RepeatedDayContainer(ChoosenDay[4],handleRepeatedDays),\n                     RepeatedDayContainer(ChoosenDay[5],handleRepeatedDays),\n                     RepeatedDayContainer(ChoosenDay[6],handleRepeatedDays)]\n    \n    props.ValueOfRepeatedDays(NumberOfRepeatedDays)\n    return (  \n    <FadeIn>\n        <div style={{display: \"flex\",width: \"50px\", flexDirection: \"row\"}}>\n             {LineOne} \n        </div>\n        <div style={{\n            display: \"flex\",\n            width: \"50px\", \n            flexDirection: \"row\", \n            marginTop: \"10px\", \n            marginLeft: \"70px\", \n            marginBottom: \"8px\"}}\n        >\n             {LineTwo} \n        </div>\n    </FadeIn>\n       )\n}\n\nexport default RepeatDaySelected;","/Users/mero/Project/mero/notesk/src/UI/Select.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/OptionsForm.js",["230"],"import React, { useState } from \"react\";\n\n//this is for the hour input \nconst HourValue = (props) => {\n\n    const Hours = ['01','02','03','04','05','06','07','08','09','10','11','12']\n    const DailyHours = (\n        [Hours.map((Hour, index) => \n            <option disabled={props.DisabledHour}  key={index.id} value={Hour}>{Hour}</option>)]\n        )\n    return(DailyHours)\n}\nconst MinutsValue = (props) => {\n\n    //this is for the hour input \n    const Minuts = ['05','10','15','20','25','30','35','40','45','50','55']\n    const DailyMinut =(\n        [Minuts.map((Minut, index) => \n            <option disabled={props.DisabledMinuts} key={index.id} value={Minut}>{Minut}</option>)]\n        )\n    return(DailyMinut)\n}\nconst TwelveHourSystemValue = (props) => {\n\n    //this for either AM or PM\n    const TwelveHourSystem = ['AM','PM']\n    const DayDivided =(\n        [TwelveHourSystem.map((DayTime, index) => \n            <option disabled={props.DisabledHourSystem} key={index.id} value={DayTime}>{DayTime}</option>)]\n        )\n    return(DayDivided)\n}\nconst NumberOfYearsValue = (props) => { \n    //this is for the years from this year \n    const NumberOfYears = [ '2020','2021', '2022', '2023', '2024','2025', '2026', \n                            '2027', '2028', '2029', '2030', '2031', '2032','2033', \n                            '2034','2035', '2036', '2037', '2038', '2039','2040']\n    const YearContainer = (\n        [NumberOfYears.map((year, index) => <option  disabled={props.DisabledYear}  key={index.id} value={year}>{year}</option>)]\n    )\n    \n    return(\n        YearContainer\n        )\n}\nconst NumberOfMonthsValue = (props) => { \n    //this is for the months in a year \n    const NumberOfMonths = ['01','02','03','04','05','06','07','08','09','10','11','12']\n    const MonthContainer = (\n        [NumberOfMonths.map((month, index) => <option disabled={props.DisabledMonth} key={index.id}  value={month}>{month}</option>)]\n        )\n    return(MonthContainer)\n}\nconst NumberOfDaysValue = (props) => { \n    //this is for the days in a Month \n    const NumberOfDays = ['01','02','03','04','05','06','07','08','09','10',\n                        '11','12','13','14','15','16','17','18','19','20',\n                        '21','22','23','24','25','26','27','28','29','30','31']\n    const DayContainer = (\n        [NumberOfDays.map((days,index ) => <option disabled={props.DisabledDay} key={index.id} value={days}>{days}</option>)]\n        )\n    return(DayContainer)\n}\nconst ColorOptionsValue = () => {\n\n    //this is for the days in a Month \n    const ColorChoose = ['Choose Color','BlueViolet','Black','CornflowerBlue','DarkMagenta','DimGrey',\n                            'DodgerBlue','Fuchsia','MidnightBlue','Purple','Salmon']\n    const ColorContainer = (\n        [ColorChoose.map((Colors,index ) => <option  key={index.id} value={Colors}>{Colors}</option>)]\n        )\n    return(ColorContainer)\n}\n\nexport {HourValue, MinutsValue, TwelveHourSystemValue, \n        NumberOfYearsValue, NumberOfMonthsValue, NumberOfDaysValue, \n        ColorOptionsValue};\n",{"ruleId":"231","severity":1,"message":"232","line":9,"column":8,"nodeType":"233","messageId":"234","endLine":9,"endColumn":15},{"ruleId":"231","severity":1,"message":"235","line":2,"column":8,"nodeType":"233","messageId":"234","endLine":2,"endColumn":14},{"ruleId":"231","severity":1,"message":"235","line":2,"column":8,"nodeType":"233","messageId":"234","endLine":2,"endColumn":14},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"231","severity":1,"message":"240","line":3,"column":52,"nodeType":"233","messageId":"234","endLine":3,"endColumn":67},{"ruleId":"241","severity":1,"message":"242","line":3,"column":1,"nodeType":"243","messageId":"244","endLine":5,"endColumn":15},{"ruleId":"231","severity":1,"message":"245","line":6,"column":10,"nodeType":"233","messageId":"234","endLine":6,"endColumn":23},{"ruleId":"231","severity":1,"message":"246","line":6,"column":25,"nodeType":"233","messageId":"234","endLine":6,"endColumn":39},{"ruleId":"231","severity":1,"message":"247","line":7,"column":8,"nodeType":"233","messageId":"234","endLine":7,"endColumn":17},{"ruleId":"231","severity":1,"message":"248","line":2,"column":24,"nodeType":"233","messageId":"234","endLine":2,"endColumn":34},{"ruleId":"231","severity":1,"message":"249","line":21,"column":10,"nodeType":"233","messageId":"234","endLine":21,"endColumn":23},{"ruleId":"231","severity":1,"message":"250","line":21,"column":25,"nodeType":"233","messageId":"234","endLine":21,"endColumn":44},{"ruleId":"231","severity":1,"message":"251","line":29,"column":11,"nodeType":"233","messageId":"234","endLine":29,"endColumn":21},{"ruleId":"231","severity":1,"message":"252","line":30,"column":11,"nodeType":"233","messageId":"234","endLine":30,"endColumn":18},{"ruleId":"253","severity":1,"message":"254","line":40,"column":23,"nodeType":"255","messageId":"256","endLine":40,"endColumn":25},{"ruleId":"253","severity":1,"message":"254","line":86,"column":20,"nodeType":"255","messageId":"256","endLine":86,"endColumn":22},{"ruleId":"257","severity":1,"message":"258","line":88,"column":61,"nodeType":"259","messageId":"260","endLine":88,"endColumn":62},{"ruleId":"257","severity":1,"message":"258","line":89,"column":58,"nodeType":"259","messageId":"260","endLine":89,"endColumn":59},{"ruleId":"231","severity":1,"message":"261","line":8,"column":26,"nodeType":"233","messageId":"234","endLine":8,"endColumn":39},{"ruleId":"231","severity":1,"message":"262","line":9,"column":8,"nodeType":"233","messageId":"234","endLine":9,"endColumn":18},{"ruleId":"231","severity":1,"message":"263","line":10,"column":8,"nodeType":"233","messageId":"234","endLine":10,"endColumn":17},{"ruleId":"231","severity":1,"message":"264","line":32,"column":11,"nodeType":"233","messageId":"234","endLine":32,"endColumn":29},{"ruleId":"231","severity":1,"message":"265","line":34,"column":12,"nodeType":"233","messageId":"234","endLine":34,"endColumn":27},{"ruleId":"231","severity":1,"message":"266","line":38,"column":11,"nodeType":"233","messageId":"234","endLine":38,"endColumn":20},{"ruleId":"231","severity":1,"message":"267","line":43,"column":12,"nodeType":"233","messageId":"234","endLine":43,"endColumn":20},{"ruleId":"231","severity":1,"message":"268","line":43,"column":22,"nodeType":"233","messageId":"234","endLine":43,"endColumn":37},{"ruleId":"231","severity":1,"message":"269","line":44,"column":13,"nodeType":"233","messageId":"234","endLine":44,"endColumn":22},{"ruleId":"270","severity":1,"message":"271","line":52,"column":9,"nodeType":"272","messageId":"256","endLine":52,"endColumn":18},{"ruleId":"253","severity":1,"message":"254","line":125,"column":22,"nodeType":"255","messageId":"256","endLine":125,"endColumn":24},{"ruleId":"257","severity":1,"message":"258","line":133,"column":69,"nodeType":"259","messageId":"260","endLine":133,"endColumn":70},{"ruleId":"257","severity":1,"message":"258","line":135,"column":67,"nodeType":"259","messageId":"260","endLine":135,"endColumn":68},{"ruleId":"231","severity":1,"message":"273","line":12,"column":7,"nodeType":"233","messageId":"234","endLine":12,"endColumn":20},{"ruleId":"231","severity":1,"message":"274","line":39,"column":12,"nodeType":"233","messageId":"234","endLine":39,"endColumn":28},{"ruleId":"231","severity":1,"message":"275","line":39,"column":30,"nodeType":"233","messageId":"234","endLine":39,"endColumn":49},{"ruleId":"231","severity":1,"message":"276","line":58,"column":33,"nodeType":"233","messageId":"234","endLine":58,"endColumn":58},{"ruleId":"231","severity":1,"message":"277","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":25},{"ruleId":"231","severity":1,"message":"278","line":9,"column":12,"nodeType":"233","messageId":"234","endLine":9,"endColumn":23},{"ruleId":"231","severity":1,"message":"279","line":26,"column":11,"nodeType":"233","messageId":"234","endLine":26,"endColumn":18},{"ruleId":"257","severity":1,"message":"258","line":59,"column":19,"nodeType":"259","messageId":"260","endLine":59,"endColumn":20},{"ruleId":"231","severity":1,"message":"280","line":65,"column":12,"nodeType":"233","messageId":"234","endLine":65,"endColumn":19},{"ruleId":"231","severity":1,"message":"281","line":65,"column":21,"nodeType":"233","messageId":"234","endLine":65,"endColumn":31},{"ruleId":"257","severity":1,"message":"258","line":17,"column":47,"nodeType":"259","messageId":"260","endLine":17,"endColumn":48},{"ruleId":"257","severity":1,"message":"258","line":56,"column":43,"nodeType":"259","messageId":"260","endLine":56,"endColumn":44},{"ruleId":"257","severity":1,"message":"258","line":94,"column":40,"nodeType":"259","messageId":"260","endLine":94,"endColumn":41},{"ruleId":"253","severity":1,"message":"254","line":21,"column":27,"nodeType":"255","messageId":"256","endLine":21,"endColumn":29},{"ruleId":"253","severity":1,"message":"254","line":22,"column":26,"nodeType":"255","messageId":"256","endLine":22,"endColumn":28},{"ruleId":"253","severity":1,"message":"254","line":25,"column":50,"nodeType":"255","messageId":"256","endLine":25,"endColumn":52},{"ruleId":"253","severity":1,"message":"282","line":28,"column":41,"nodeType":"255","messageId":"256","endLine":28,"endColumn":43},{"ruleId":"253","severity":1,"message":"254","line":35,"column":27,"nodeType":"255","messageId":"256","endLine":35,"endColumn":29},{"ruleId":"253","severity":1,"message":"254","line":36,"column":27,"nodeType":"255","messageId":"256","endLine":36,"endColumn":29},{"ruleId":"253","severity":1,"message":"254","line":39,"column":50,"nodeType":"255","messageId":"256","endLine":39,"endColumn":52},{"ruleId":"253","severity":1,"message":"282","line":42,"column":41,"nodeType":"255","messageId":"256","endLine":42,"endColumn":43},{"ruleId":"253","severity":1,"message":"254","line":49,"column":27,"nodeType":"255","messageId":"256","endLine":49,"endColumn":29},{"ruleId":"253","severity":1,"message":"254","line":50,"column":29,"nodeType":"255","messageId":"256","endLine":50,"endColumn":31},{"ruleId":"253","severity":1,"message":"254","line":53,"column":50,"nodeType":"255","messageId":"256","endLine":53,"endColumn":52},{"ruleId":"253","severity":1,"message":"282","line":56,"column":41,"nodeType":"255","messageId":"256","endLine":56,"endColumn":43},{"ruleId":"253","severity":1,"message":"254","line":63,"column":27,"nodeType":"255","messageId":"256","endLine":63,"endColumn":29},{"ruleId":"253","severity":1,"message":"254","line":64,"column":28,"nodeType":"255","messageId":"256","endLine":64,"endColumn":30},{"ruleId":"253","severity":1,"message":"254","line":67,"column":50,"nodeType":"255","messageId":"256","endLine":67,"endColumn":52},{"ruleId":"253","severity":1,"message":"282","line":70,"column":41,"nodeType":"255","messageId":"256","endLine":70,"endColumn":43},{"ruleId":"253","severity":1,"message":"254","line":77,"column":27,"nodeType":"255","messageId":"256","endLine":77,"endColumn":29},{"ruleId":"253","severity":1,"message":"254","line":78,"column":26,"nodeType":"255","messageId":"256","endLine":78,"endColumn":28},{"ruleId":"253","severity":1,"message":"254","line":81,"column":50,"nodeType":"255","messageId":"256","endLine":81,"endColumn":52},{"ruleId":"253","severity":1,"message":"282","line":84,"column":41,"nodeType":"255","messageId":"256","endLine":84,"endColumn":43},{"ruleId":"253","severity":1,"message":"254","line":91,"column":27,"nodeType":"255","messageId":"256","endLine":91,"endColumn":29},{"ruleId":"253","severity":1,"message":"254","line":92,"column":28,"nodeType":"255","messageId":"256","endLine":92,"endColumn":30},{"ruleId":"253","severity":1,"message":"254","line":95,"column":50,"nodeType":"255","messageId":"256","endLine":95,"endColumn":52},{"ruleId":"253","severity":1,"message":"282","line":98,"column":41,"nodeType":"255","messageId":"256","endLine":98,"endColumn":43},{"ruleId":"253","severity":1,"message":"254","line":106,"column":26,"nodeType":"255","messageId":"256","endLine":106,"endColumn":28},{"ruleId":"253","severity":1,"message":"254","line":109,"column":50,"nodeType":"255","messageId":"256","endLine":109,"endColumn":52},{"ruleId":"253","severity":1,"message":"282","line":112,"column":40,"nodeType":"255","messageId":"256","endLine":112,"endColumn":42},{"ruleId":"231","severity":1,"message":"277","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":25},"no-unused-vars","'Weather' is defined but never used.","Identifier","unusedVar","'styled' is defined but never used.","no-native-reassign",["283"],"no-negated-in-lhs",["284"],"'UserAddOutlined' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'LoginOutlined' is defined but never used.","'LogoutOutlined' is defined but never used.","'AppButton' is defined but never used.","'formatDate' is defined but never used.","'currentEvents' is assigned a value but never used.","'ChangecurrentEvents' is assigned a value but never used.","'getIsClose' is assigned a value but never used.","'isTitle' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'createEventId' is defined but never used.","'allLocales' is defined but never used.","'TodayIcon' is defined but never used.","'getSubmitIsClicked' is assigned a value but never used.","'CloseIsCllicked' is assigned a value but never used.","'IconColor' is assigned a value but never used.","'getEvent' is assigned a value but never used.","'ChangeEventInfo' is assigned a value but never used.","'EventTest' is assigned a value but never used.","no-dupe-keys","Duplicate key 'textColor'.","ObjectExpression","'InfoContainer' is assigned a value but never used.","'getSubmitClicked' is assigned a value but never used.","'ChangeSubmitClicked' is assigned a value but never used.","'ChangeRecievedClickedDate' is assigned a value but never used.","'useState' is defined but never used.","'CreateEvent' is assigned a value but never used.","'subNote' is assigned a value but never used.","'IsShown' is assigned a value but never used.","'setIsShown' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]