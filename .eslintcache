[{"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\index.js":"1","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\App.js":"2","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\serviceWorker.js":"3","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\API\\Weather.js":"4","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Login\\Login.js":"5","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Signup\\Signup.js":"6","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\Calendar.js":"7","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Notes\\Notes.js":"8","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\API\\API.js":"9","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Login\\LoginForm.js":"10","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Signup\\SignupForm.js":"11","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\BlurDiv.js":"12","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\NavBar.js":"13","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Footer.js":"14","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Notes\\Note\\Note.js":"15","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Notes\\CreateNote\\CreateNote.js":"16","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\CalendarForm.js":"17","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\UserInput.js":"18","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Modal.js":"19","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Button.js":"20","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\UserIcon.js":"21","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Switch.js":"22","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\TextArea.js":"23","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\event-utils.js":"24","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\ScheduleForm.js":"25","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\ColorContainer.js":"26","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\submitButtonContainer.js":"27","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DropDownContainer.js":"28","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DaysContainer.js":"29","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\InputContainer.js":"30","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\ColorSelected.js":"31","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\DateSelected.js":"32","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\RepeatedDaysSelected.js":"33","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\TimeSelected.js":"34","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Select.js":"35","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\OptionsForm.js":"36"},{"size":481,"mtime":1611062276005,"results":"37","hashOfConfig":"38"},{"size":2567,"mtime":1611669514682,"results":"39","hashOfConfig":"38"},{"size":5086,"mtime":1611062276008,"results":"40","hashOfConfig":"38"},{"size":369,"mtime":1611062275937,"results":"41","hashOfConfig":"38"},{"size":462,"mtime":1611062275958,"results":"42","hashOfConfig":"38"},{"size":467,"mtime":1611062275975,"results":"43","hashOfConfig":"38"},{"size":484,"mtime":1612354624963,"results":"44","hashOfConfig":"38"},{"size":2053,"mtime":1612197263832,"results":"45","hashOfConfig":"38"},{"size":313,"mtime":1611062275934,"results":"46","hashOfConfig":"38"},{"size":3709,"mtime":1611062275961,"results":"47","hashOfConfig":"38"},{"size":8915,"mtime":1611669514711,"results":"48","hashOfConfig":"38"},{"size":520,"mtime":1611062275981,"results":"49","hashOfConfig":"38"},{"size":1832,"mtime":1612197263836,"results":"50","hashOfConfig":"38"},{"size":521,"mtime":1611062275988,"results":"51","hashOfConfig":"38"},{"size":6058,"mtime":1611669514704,"results":"52","hashOfConfig":"38"},{"size":6099,"mtime":1611062275966,"results":"53","hashOfConfig":"38"},{"size":5022,"mtime":1612354719114,"results":"54","hashOfConfig":"38"},{"size":4362,"mtime":1611669514715,"results":"55","hashOfConfig":"38"},{"size":2965,"mtime":1611062275992,"results":"56","hashOfConfig":"38"},{"size":2970,"mtime":1611669514712,"results":"57","hashOfConfig":"38"},{"size":929,"mtime":1611062276001,"results":"58","hashOfConfig":"38"},{"size":4339,"mtime":1611062275996,"results":"59","hashOfConfig":"38"},{"size":2995,"mtime":1611062275998,"results":"60","hashOfConfig":"38"},{"size":378,"mtime":1611062275954,"results":"61","hashOfConfig":"38"},{"size":8803,"mtime":1612354654012,"results":"62","hashOfConfig":"38"},{"size":1403,"mtime":1611669514688,"results":"63","hashOfConfig":"38"},{"size":3713,"mtime":1612354624988,"results":"64","hashOfConfig":"38"},{"size":9214,"mtime":1612354624980,"results":"65","hashOfConfig":"38"},{"size":1087,"mtime":1612197263809,"results":"66","hashOfConfig":"38"},{"size":4950,"mtime":1612197263815,"results":"67","hashOfConfig":"38"},{"size":1333,"mtime":1611669514689,"results":"68","hashOfConfig":"38"},{"size":5781,"mtime":1612354624976,"results":"69","hashOfConfig":"38"},{"size":8007,"mtime":1612197263802,"results":"70","hashOfConfig":"38"},{"size":4243,"mtime":1612197263805,"results":"71","hashOfConfig":"38"},{"size":3210,"mtime":1611669514713,"results":"72","hashOfConfig":"38"},{"size":3141,"mtime":1612197263796,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u0q2q7",{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"125"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"125"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"125"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"125"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"125"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"125"},"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\index.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\App.js",["154"],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\serviceWorker.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\API\\Weather.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Login\\Login.js",["155"],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Signup\\Signup.js",["156"],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\Calendar.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Notes\\Notes.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\API\\API.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Login\\LoginForm.js",["157"],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Signup\\SignupForm.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\BlurDiv.js",["158"],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\NavBar.js",["159","160","161"],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Footer.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Notes\\Note\\Note.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Notes\\CreateNote\\CreateNote.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\CalendarForm.js",["162","163","164","165","166","167","168","169","170"],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\UserInput.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Modal.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Button.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\UserIcon.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Switch.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\TextArea.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\event-utils.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\ScheduleForm.js",["171","172","173","174","175","176","177","178"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport NoteContainer from '../../../UI/Modal'; \r\nimport FadeIn  from 'react-fade-in'; \r\n// import {TitleContainer, DescriptionContainer, URLContainer} from './Containers/InputContainer';\r\n// import {CalenderContianer, TimerContainer} from './Containers/DropDownContainer';\r\n// import {FontColorContainer} from './Containers/ColorContainer';\r\nimport {SubmissionContainer} from './Containers/submitButtonContainer'; \r\n// import {RDContainer} from './Containers/DaysContainer';\r\nimport { CloseOutlined, CloseCircleOutlined} from \"@ant-design/icons\";\r\n\r\nconst InfoContainer = styled.div`\r\n    width: 440px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    margin: 4px;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nconst Schedule = (props) => {\r\n    //Close is not hovered on color style \r\n    const VisibilityStle1 = {\r\n        marginRight: \"4px\", \r\n        marginLeft:\"95%\",\r\n        marginBottom:\"15px\" , \r\n        fontSize: \"21px\", \r\n        // color : props.ScheduleColor.IconC\r\n    }\r\n    //Close is hovered on color style \r\n    const VisibilityStle2 = {\r\n        marginRight: \"4px\", \r\n        marginLeft:\"95%\",\r\n        marginBottom:\"15px\" , \r\n        fontSize: \"26px\", \r\n        // color : props.ScheduleColor.IconC\r\n    }\r\n    // //This is for submission once it is clicked there will be a toggel\r\n    const [getSubmitClicked, ChangeSubmitClicked] = useState(props.SubmitIsClicked)\r\n    // //Clicked Date in the calender\r\n    // const [getClickedStartDate, ChangeClickedStartDate] = useState(props.SelectedStartDateClicked)\r\n    // const [getClickedEndDate, ChangeClickedEndDate] = useState(props.SelectedEndDateClicked)\r\n    // //Id for each Event\r\n    // const [IdCounter, ChnageIdCounter] = useState(0)\r\n    // //Title Area\r\n    // const [getTitleValue, ChangeTitleValu] = useState()\r\n    // const [TitlePlaceHoldervalue,ChangeTitlePlaceHolder] = useState(\"Title ...\")\r\n    // //Description Area\r\n    // const [getDescriptionValue, ChangeDescriptionValu] = useState()\r\n    // const [DescriptionPlaceHoldervalue,ChangeDescriptionPlaceHolder] = useState(\"Description ...\")\r\n    // //URL Area\r\n    // const [getURLValue, ChangegetURLValue] = useState()\r\n    // const [URLPlaceHolder,ChangeURLPlaceHolder] = useState(\"Optional Attached Link For Description ...\")\r\n    // //Date Value Area From\r\n    // const [getFormDateValue, ChangeFormDateValue] = useState()\r\n    // //Date Value Area To\r\n    // const [getToDateValue, ChangeToDateValue] = useState()\r\n    // //Time Values Area Started\r\n    // const [GetStartHoursValue, ChangeGetStartHourValue ]= useState()\r\n    // const [GetStartMinutsValue, ChangeGetStartMinutsValue ]= useState()\r\n    // const [GetStartDayValue, ChangeGetStartDayValue ]= useState()\r\n    // //Time Values Area Ended\r\n    // const [GetEndHoursValue, ChangeGetEndHourValue ]= useState()\r\n    // const [GetEndMinutsValue, ChangeGetEndMinutsValue ]= useState()\r\n    // const [GetEndDayValue, ChangeGetEndDayValue ]= useState()\r\n    // //Values of Repeated Days\r\n    // const [getRDValue, ChangeRDValu] = useState()\r\n    // //The collection of Data to create the Event\r\n    // const [CreateEvent, ChnageEventInfo]=useState()\r\n    //     {\r\n    //         id: `$ChnageIdCounter(prevCount => prevCount + 1)`,  \r\n    //         title: 'Testoing for more ', \r\n    //         start: '2021-01-30T12:30:00Z',\r\n    //         textColor:\"pink\", \r\n    //         end: '2021-02-02T13:30:00Z',\r\n    //         description: 'lets play some game s', \r\n    //         display: 'list-item', \r\n    //         backgroundColor:`${props.backGroundColorInput ? props.backGroundColorInput : \"black\"}`,\r\n    //         daysOfWeek: [ '1','4','5' ], //https://fullcalendar.io/docs/recurring-events\r\n    //         startTime: '10:45:00',\r\n    //         endTime: '12:45:00', \r\n    //     }\r\n    // )\r\n\r\n    const [isClode, ChangeIsClosed] = useState(true)\r\n\r\n   return(\r\n    <FadeIn>\r\n        <NoteContainer\r\n            position= {\"relative\"}\r\n            width= {\"520px\"}\r\n            margin= {\"30px auto 20px auto\"}\r\n            padding= {\"15px\"}\r\n            boxShadowValue= {\"0 1px 5px rgb(138, 137, 137)\"}\r\n            borderRadiusValue= {\"7px\"}\r\n            resizeValue={\"both\"}\r\n            // backGroundColorValue={props.ScheduleColor.NotekBGC}\r\n            // FontColorValue={props.ScheduleColor.NoteFC}\r\n            >\r\n                {isClode ? \r\n                    <CloseOutlined onMouseEnter={() =>ChangeIsClosed(false)} style={VisibilityStle1}/> \r\n                : \r\n                    <CloseCircleOutlined onClick={()=> props.CloseIsCliced(false)} onMouseLeave={() =>ChangeIsClosed(true)} style={VisibilityStle2}/>\r\n                }\r\n                {/* {<TitleContainer \r\n                    SubmitTitle={(value) => ChangeTitleValu(value)}\r\n                    SubmitTitlePlaceHolder={TitlePlaceHoldervalue}\r\n                    ScheduleColor={props.ScheduleColor}\r\n                    />} */}\r\n                {/* {<DescriptionContainer \r\n                    Description={(value) => ChangeDescriptionValu(value)}\r\n                    SubmitDescriptionPlaceHolder={DescriptionPlaceHoldervalue}\r\n                    ScheduleColor={props.ScheduleColor}\r\n                    />}\r\n                {<URLContainer \r\n                    URLOption={(value) => ChangegetURLValue(value)}\r\n                    SubmitURLPlaceHolder={URLPlaceHolder}\r\n                    ScheduleColor={props.ScheduleColor}\r\n                    />}\r\n                {<CalenderContianer \r\n                    SubmitFromDateSelected={(value) => ChangeFormDateValue(value)} \r\n                    SubmitToDateSelected={(value) => ChangeToDateValue(value)} \r\n                    RetrunClickedDate={getClickedStartDate}\r\n                    RetrunClickedEndDate={getClickedEndDate}\r\n                    ScheduleColor={props.ScheduleColor}\r\n                    />}\r\n                {<TimerContainer\r\n                    SubmitFromHourSelected={(value) => ChangeGetStartHourValue(value)}\r\n                    SubmitToHourlected={(value) => ChangeGetEndHourValue(value)}\r\n                    SubmitFromMinutsSelected={(value) => ChangeGetStartMinutsValue(value)}\r\n                    SubmitToMinutsSelected={(value) => ChangeGetEndMinutsValue(value)}\r\n                    SubmitFromDayValueSelected={(value) => ChangeGetStartDayValue(value)}\r\n                    SubmitToDayValueSelected={(value) => ChangeGetEndDayValue(value)} \r\n                    // // ScheduleColor={props.ScheduleColor}\r\n                    />}\r\n                {<RDContainer \r\n                    SubmitNumberOfRP={(value) => ChangeRDValu(value)} \r\n                    ScheduleColor={props.ScheduleColor}/>} */}\r\n                {<SubmissionContainer \r\n\r\n                    \r\n\r\n                    //the following props is what we recieve from submission when we click on the button and it is coming from calendar file\r\n                    SubmitisClicked={(value)=>(props.SubmitIsClicked(value))}\r\n                    // SubmissionEvent={(value)=> props.GetEventValues(value)}\r\n                    // //The following props is used to send data to the calender and we are checking that in the submission\r\n                    // PassIdCounter={IdCounter}\r\n                    // //Title part\r\n                    // PassTitleValue={getTitleValue}\r\n                    // ChangePassTitlePlaceHolder={(value) => (ChangeTitlePlaceHolder(value))}\r\n                    // //Description Par\r\n                    // PassDescriptionValue={getDescriptionValue}\r\n                    // ChangeDescriptionPlaceHolder={(value) => ChangeDescriptionPlaceHolder(value)}\r\n                    // //Url\r\n                    // PassURLValue={getURLValue}\r\n                    // //From Data\r\n                    // PassFromDateValue={getFormDateValue}\r\n                    // //To Data\r\n                    // PassToDateValue={getToDateValue}\r\n                    // //Start Time\r\n                    // PassStartHour={GetStartHoursValue}\r\n                    // PassStartMinut={GetStartMinutsValue}\r\n                    // PassStartDayValue={GetStartDayValue}\r\n                    // //EndTime\r\n                    // PassEndHour={GetEndHoursValue}\r\n                    // PassEndMinut={GetEndMinutsValue}\r\n                    // PassEndDayValue={GetEndDayValue}\r\n                    // //Repeated Days\r\n                    // PassRepeatedDaysValue={getRDValue}\r\n                    // // PassTextColor={}\r\n                    // // PassbackgroundColor={}\r\n                    // // Passdisplay={}\r\n                    // ScheduleColor={props.ScheduleColor}\r\n                    />} \r\n        </NoteContainer>\r\n    </FadeIn>\r\n    )\r\n}\r\n\r\nexport default Schedule;\r\n",["179","180"],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\ColorContainer.js",["181"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\"; \r\nimport FadeIn  from 'react-fade-in'; \r\nimport {BgColorsOutlined} from \"@ant-design/icons\"; \r\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\r\nimport ColorSelected from './DataCollection/ColorSelected';\r\n\r\n\r\nconst InfoContainer = styled.div`\r\n    width: 440px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    margin: 4px;\r\n    margin-bottom: 10px;\r\n`\r\nconst EachateContainer = styled.div`\r\n    width: 350px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    margin: 4px;\r\n`\r\n\r\nconst FontColorContainer = (props) => {\r\n\r\n    const FontColor = <InfoContainer>\r\n            <EachateContainer>\r\n                <FadeIn><BgColorsOutlined style={{fontSize:\"32px\",color : props.ScheduleColor.IconC,marginRight:\"9px\",marginTop:\"4px\"}}/></FadeIn>\r\n                <FadeIn><ColorSelected RecievedColor={props.ScheduleColor}/></FadeIn>\r\n            </EachateContainer>\r\n            <EachateContainer>\r\n                <FadeIn><ColorLensIcon style={{fontSize:\"32px\",color : props.ScheduleColor.IconC,marginRight:\"9px\",marginTop:\"4px\"}}/></FadeIn>\r\n                <FadeIn><ColorSelected RecievedColor={props.ScheduleColor}/></FadeIn>\r\n            </EachateContainer>\r\n    </InfoContainer>\r\n\r\n    return(FontColor)\r\n}\r\nexport  {FontColorContainer};","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\submitButtonContainer.js",["182","183","184","185","186"],"\r\n\r\nimport React, { useState } from \"react\";\r\nimport FadeIn  from 'react-fade-in'; \r\nimport {LoginOutlined} from \"@ant-design/icons\"; \r\nimport Button from '../../../../UI/Button';\r\n\r\nconst SubmissionContainer = (props) => {\r\n    const [CreateEvent, ChanageEventInfo] = useState(\r\n        {\r\n            Id: '',  \r\n            title: '', \r\n            description: '', \r\n            Url: '',\r\n            textColor:\"pink\", \r\n            start: '',\r\n            end: '',\r\n            display: '', \r\n            backgroundColor:`${props.backGroundColorInput ? props.backGroundColorInput : \"black\"}`,\r\n            daysOfWeek: [ '1','4','5' ], //https://fullcalendar.io/docs/recurring-events\r\n            start: '2021-02-12T10:30:00',\r\n            end: '2021-02-12T11:30:00',\r\n        }\r\n    )\r\n    props.SubmissionEvent(CreateEvent)\r\n    const subNote = (event) => {\r\n        event.preventDefault(props.PassDescriptionValue);\r\n        // (props.PassTitleValue === \"\" && props.PassDescriptionValue === \"\" ) ?\r\n        //     ( <FadeIn>\r\n        //         {props.ChangePassTitlePlaceHolder(\"Please Enter A Title ....(-_-)\") \r\n        //         , props.ChangeDescriptionPlaceHolder(\"Please Enter A Title ....(-_-)\")}\r\n        //     </FadeIn> )\r\n        // : (props.PassTitleValue === \"\") ? \r\n        //     ( <FadeIn>\r\n        //         {props.ChangePassTitlePlaceHolder(\"Please Enter A Title ....(-_-)\")}\r\n        //     </FadeIn>)\r\n        // : (props.PassDescriptionValue === \"\" )?\r\n        //     ( <FadeIn>\r\n        //         {props.ChangeDescriptionPlaceHolder(\"Please Enter A Title ....(-_-)\")}\r\n        //     </FadeIn>)\r\n        // : (\r\n            <FadeIn>{\r\n                ChanageEventInfo(\r\n                    {\r\n                        \r\n                            start: '2021-02-13',textColor:\"pink\", end: '2021-02-14',\r\n                        daysOfWeek: [ '1','4','5' ], //https://fullcalendar.io/docs/recurring-events\r\n                        startTime: '10:45:00',\r\n                          endTime: '12:45:00'\r\n                          , display: 'list-item',\r\n                          textColor: 'blue'\r\n                      \r\n                      }\r\n                //     { \r\n                //     Id: props.PassIdCounter + 1 , \r\n                //     titles: props.PassTitleValue,\r\n                //     description: props.PassDescriptionValue,\r\n                //     Url: props.PassURLValue,\r\n                // }\r\n                ) ,\r\n                props.SubmitisClicked(false)\r\n\r\n            }</FadeIn>\r\n        // )\r\n    }\r\n    const [IsShown, setIsShown] = useState(false)\r\n    const ButtonIconColor = { \r\n        color : props.ScheduleColor.IconC, \r\n        fontSize:\"20px\", \r\n        marginRight:\"9px\", \r\n        marginTop:\"4px\" \r\n    }\r\n    const SubmitButton = <FadeIn>\r\n        <Button\r\n        width={\"120px\"}\r\n        marginBottomValue={\"10px\"}\r\n        marginLeftValue={\"35%\"}\r\n        fontSizeValue={\"20px\"}\r\n        borderRadiusValue={\"15px\"}\r\n        backGroundColorValue={IsShown ? props.ScheduleColor.LogSignColor : props.ScheduleColor.UserInputBGC }\r\n        FontColorValue={props.ScheduleColor.IconC}\r\n        borderColorValue={props.ScheduleColor.BorderColor}\r\n        IsCalledValue={\"hover\"} \r\n        BorderValue=\"solid\"\r\n        borderWidthValue=\"thin\"\r\n        paddingInputValue=\"2px\"\r\n        // onMouseEnter={() => setIsShown(true)}\r\n        // onMouseLeave={() => setIsShown(false)}\r\n        onClick={subNote} \r\n        text = {\"Submit\"} \r\n        icon = {<LoginOutlined style={ButtonIconColor}/>}\r\n        />\r\n    </FadeIn>\r\n    \r\n    return (SubmitButton)\r\n}\r\n\r\nexport  {SubmissionContainer};\r\n","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DropDownContainer.js",["187"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\"; \r\nimport FadeIn  from 'react-fade-in'; \r\nimport { CalendarOutlined , ClockCircleOutlined} from \"@ant-design/icons\"; \r\nimport DateSelected from './DataCollection/DateSelected';\r\nimport TimeSelected from './DataCollection/TimeSelected';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility'\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\nconst InfoContainer = styled.div`\r\n    width: 440px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    margin: 4px;\r\n    margin-bottom: 10px;\r\n`\r\nconst EachateContainer = styled.div`\r\n    width: 400px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    margin: 4px;\r\n`\r\nconst DateContainer = styled.div`\r\n    width: 400px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n`\r\n\r\n\r\nconst CalenderContianer = (props) => {\r\n    //All Component Color Stle\r\n    const IconColor = { \r\n        color : props.ScheduleColor.IconC, \r\n        fontSize:\"25px\", \r\n        marginRight:\"15px\", \r\n        marginTop:\"4px\" \r\n    }\r\n\r\n    //Visable and unvisable color style \r\n    const VisibilityStle = {\r\n        marginRight: \"4px\", \r\n        marginLeft:\"4px\",\r\n        marginTop:\"6px\" , \r\n        fontSize: \"21px\", \r\n        color : props.ScheduleColor.IconC\r\n    }\r\n    \r\n    // This is a togole to change the state of the disabled and to change the icion as well \r\n    const [isClicked, ChangeisClicked] = useState(true)\r\n\r\n    //This is for the layout for Year Month Days\r\n    const Layout = ['','Year','Month','Day']\r\n\r\n    //the date that the user clicked on to have it go to the data collection and have the same number \r\n    const [recievedClickedDate, ChangeRecievedClickedDate] = useState(props.RetrunClickedDate)\r\n    //Dividing the Recieved Date to Year Month Day and Send them to DateSelected\r\n    const RecievedYear = recievedClickedDate[0]\r\n    const RecievedMonth = recievedClickedDate[1]\r\n    const RecievedDay = recievedClickedDate[2]\r\n\r\n    //All the needed information for craeting the date From \r\n    const [fromData, ChangeFromDate] = useState()\r\n\r\n    //All the needed information for craeting the date To \r\n    const [ToData, ChangeToDate] = useState()\r\n\r\n    //This is the returned Date to the calendar\r\n    const calendar = <InfoContainer>\r\n        <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-start\"}}>\r\n        <FadeIn><CalendarOutlined style={IconColor}/>  </FadeIn>\r\n        <FadeIn><div style={{marginTop: \"40px\"}} onClick={()=>ChangeisClicked(!isClicked)}>\r\n                    {isClicked ?  <VisibilityOffIcon style={VisibilityStle} /> : <VisibilityIcon style={VisibilityStle} />}\r\n                </div></FadeIn>\r\n        </div>\r\n        <DateContainer>\r\n            <EachateContainer>\r\n                {Layout.map(value =><FadeIn><span style={{ padding: \"1px\" ,paddingTop: \"1px\" , fontSize: \"1.2em\", marginRight: \"30px\"}}>{value}</span></FadeIn> ) }\r\n            </EachateContainer>\r\n            <EachateContainer>\r\n                <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"1px\"}}>From</span></FadeIn>\r\n                <DateSelected\r\n                    //These are used to send these data to DataSlected to be used for Year, Month, Day \r\n                    ReturnFrom=\"From\"\r\n                    ReturnClickedFromYear={RecievedYear}\r\n                    ReturnClickedFromMonth={RecievedMonth} \r\n                    ReturnClickedFromDay={RecievedDay}\r\n                    //The incoming dating is used to chagne the format of the date and then send that number to submission button\r\n                    submitDateValue={(value) => ChangeFromDate(value)} \r\n                    RecievedColor={props.ScheduleColor}\r\n                />\r\n            </EachateContainer>\r\n            <EachateContainer>\r\n                <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"25px\"}}>To </span></FadeIn>\r\n\r\n                <DateSelected \r\n                    //These are used to send these data to DataSlected to be used for Year, Month, Day \r\n                    ReturnFrom=\"To\"\r\n                    ReturnClickedToYear=\"Year\" \r\n                    ReturnClickedToMonth=\"Month\" \r\n                    ReturnClickedToDay=\"Day\"\r\n                    //this is to disable the values that are inside and it is going to DataSelected\r\n                    DisabledisClicked={isClicked} \r\n                    submitDateValue={(value) => ChangeToDate(value)} \r\n                    RecievedColor={props.ScheduleColor}\r\n                />\r\n            </EachateContainer>\r\n        </DateContainer>\r\n    </InfoContainer>\r\n\r\n    //To recieve a prop that will change the value from and to inside the schedule form to the value of From/to Date that has been created here  \r\n    props.SubmitFromDateSelected(fromData)\r\n    props.SubmitToDateSelected(ToData)\r\n    \r\n    return(calendar)\r\n}\r\n\r\nconst TimerContainer = (props) => {\r\n    //All Component Color Stle\r\n    const IconColor = { \r\n        color : props.ScheduleColor.IconC, \r\n        fontSize:\"25px\", \r\n        marginRight:\"15px\", \r\n        marginTop:\"4px\"\r\n    }\r\n    \r\n    //Visable and unvisable color style \r\n    const VisibilityStle = {\r\n        marginRight: \"4px\", \r\n        marginLeft:\"4px\",\r\n        marginTop:\"6px\" , \r\n        fontSize: \"21px\", \r\n        color : props.ScheduleColor.IconC\r\n    }\r\n\r\n    // This is a togole to change the state of the disabled and to change the icion as well \r\n    const [isClicked, ChangeisClicked] = useState(true)\r\n    \r\n    //this is the part where we change the icon based on clicking the div \r\n    const mero = <div onClick={()=>ChangeisClicked(!isClicked)}>\r\n        {isClicked ?  <VisibilityOffIcon style={VisibilityStle} /> : <VisibilityIcon style={VisibilityStle} />}\r\n    </div>\r\n    //This is for the layout for Hour Minuts Day system\r\n    const Layout = ['','Hour','Minuts','AM / PM']\r\n\r\n    const [StartHoursValue, ChangeStartHourValue ]= useState()\r\n    const [StartMinutsValue, ChangeStartMinutsValue ]= useState()\r\n    const [StartDayValue, ChangeStartDayValue ]= useState()\r\n    const [EndHoursValue, ChangeEndHourValue ]= useState()\r\n    const [EndMinutsValue, ChangeEndMinutsValue ]= useState()\r\n    const [EndDayValue, ChangeEndDayValue ]= useState()\r\n    \r\n    const time =<InfoContainer>\r\n        <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-start\"}}>\r\n            <FadeIn><ClockCircleOutlined style={IconColor}/>  </FadeIn>\r\n            <FadeIn>{mero}</FadeIn>\r\n        </div>\r\n        <DateContainer>\r\n            <EachateContainer>\r\n                {Layout.map(value =><FadeIn><span style={{ padding: \"1px\" ,paddingTop: \"1px\" , fontSize: \"1.2em\", marginRight: \"1px\"}}>{value}</span></FadeIn> ) }\r\n            </EachateContainer>\r\n            <EachateContainer>\r\n                <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"5px\"}}>Start</span></FadeIn>\r\n                <TimeSelected \r\n                    submitHourValue={(value) => ChangeStartHourValue(value)}\r\n                    submitMinutsValue={(value) => ChangeStartMinutsValue(value)}\r\n                    submitDayValue={(value) => ChangeStartDayValue(value)}\r\n                    RecievedColor={props.ScheduleColor}\r\n                    //this is to disable the values that are inside and it is going to DataSelected\r\n                    DisabledisClicked={isClicked} \r\n                    />\r\n            </EachateContainer>\r\n            <EachateContainer>\r\n                <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"12px\"}}>End</span></FadeIn>\r\n                <TimeSelected \r\n                    submitHourValue={(value) => ChangeEndHourValue(value)}\r\n                    submitMinutsValue={(value) => ChangeEndMinutsValue(value)}\r\n                    submitDayValue={(value) => ChangeEndDayValue(value)}\r\n                    RecievedColor={props.ScheduleColor}\r\n                    //this is to disable the values that are inside and it is going to DataSelected\r\n                    DisabledisClicked={isClicked} \r\n                    />\r\n            </EachateContainer>\r\n        </DateContainer>\r\n        </InfoContainer>\r\n\r\n    props.SubmitFromHourSelected(StartHoursValue)\r\n    props.SubmitToHourlected(EndHoursValue)\r\n    props.SubmitFromMinutsSelected(StartMinutsValue)\r\n    props.SubmitToMinutsSelected(EndMinutsValue)\r\n    props.SubmitFromDayValueSelected(StartDayValue)\r\n    props.SubmitToDayValueSelected(EndDayValue)\r\n\r\n    return (time)\r\n}\r\n\r\nexport  {CalenderContianer, TimerContainer};","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DaysContainer.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\InputContainer.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\ColorSelected.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\DateSelected.js",["188","189","190"],"\r\nimport React, { useState } from \"react\";\r\nimport FadeIn  from 'react-fade-in';\r\nimport SelectData from '../../../../../UI/Select';\r\nimport {NumberOfYearsValue, NumberOfMonthsValue, NumberOfDaysValue} from './OptionsForm'\r\n\r\nconst DateSelected = (props) => {\r\n\r\n    //This part is changed once the user click on the drop down to see other options \r\n    const [GetUserChangeYear, ChnageUserChangedYear] = useState(true)\r\n    /*\r\n        This part is chicking if the input that the user entered is what is wanted or not \r\n        Once the select is clicked then it will change to normal dropdown with input number \r\n    */\r\n    const [YearsValueInput, ChangeYearsValueInput] = useState(GetUserChangeYear ? (props.ReturnFrom===\"From\" ? props.ReturnClickedFromYear : \"props.ReturnClickedToYear\") : \"\")\r\n    const handleYears = (e) =>(\r\n        ChangeYearsValueInput(e.target.value ),\r\n        ChnageUserChangedYear(false)\r\n    )\r\n    const Years = <FadeIn><SelectData \r\n        value=\"as\"\r\n        PlaceholderValue=\"asdfas\"\r\n        inputType={\"text\"}\r\n        name=\"title\"\r\n        widthValue={\"112px\"}\r\n        paddingVale={\"4px\"}\r\n        outlineValue={\"none\"}\r\n        fontSizeValue={\"1.2em\"}\r\n        fontFamilyValue={\"inherit\"}\r\n        IsCalledValue={props.DisabledisClicked? \"\" :\"FOCUS\"} \r\n        borderRadiusValue= {\"7px\"}\r\n        backGroundColorValue={ props.RecievedColor.UserInputBGC}\r\n        FontColorValue={props.RecievedColor.UserInputFC}\r\n        PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\r\n        borderColorValue={props.DisabledisClicked ? \"#A9A9A9\" :props.RecievedColor.BorderColor}  \r\n        BorderValue={\"solid\"}\r\n        borderWidthValue={\"thin\"}\r\n        marginRightValue={\"15px\"}\r\n        onchangeValue = {handleYears}\r\n        InputValue = {YearsValueInput}\r\n       >\r\n       {<NumberOfYearsValue \r\n            //this is the DisabledisClicked that is coming from DropDown to change every time we click on the icion\r\n            DisabledYear={props.DisabledisClicked}\r\n        />} \r\n    </SelectData></FadeIn>\r\n\r\n    // This part is changed once the user click on the drop down to see other options\r\n    const [GetUserChangeMonth, ChnageUserChangedMonth] = useState(true)\r\n    /*\r\n        This part is chicking if the input that the user entered is what is wanted or not \r\n        Once the select is clicked then it will change to normal dropdown with input number \r\n    */\r\n    const [MonthsValueInput, ChangeMonthsValue] = useState(GetUserChangeMonth ? props.ReturnClickedFromMonth : \"\")\r\n    const handleMonths = (e) =>(\r\n        ChangeMonthsValue(e.target.value ),\r\n        ChnageUserChangedMonth(false)\r\n    )\r\n    const Months = <FadeIn><SelectData \r\n        // key={MonthsValueInput.id}\r\n        inputType={\"text\"}\r\n        name=\"title\"\r\n        widthValue={\"112px\"}\r\n        paddingVale={\"4px\"}\r\n        outlineValue={\"none\"}\r\n        fontSizeValue={\"1.2em\"}\r\n        fontFamilyValue={\"inherit\"}\r\n        IsCalledValue={props.DisabledisClicked? \"\" :\"FOCUS\"} \r\n        borderRadiusValue= {\"7px\"}\r\n        backGroundColorValue={ props.RecievedColor.UserInputBGC}\r\n        FontColorValue={props.RecievedColor.UserInputFC}\r\n        PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\r\n        borderColorValue={props.DisabledisClicked ? \"#A9A9A9\" :props.RecievedColor.BorderColor}  \r\n        BorderValue={\"solid\"}\r\n        borderWidthValue={\"thin\"}\r\n        marginRightValue={\"15px\"}\r\n        onchangeValue = {handleMonths}\r\n        InputValue = {MonthsValueInput}\r\n        >\r\n        {<NumberOfMonthsValue   \r\n            //this is the DisabledisClicked that is coming from DropDown to change every time we click on the icion\r\n            DisabledMonth={props.DisabledisClicked}/>}\r\n    </SelectData></FadeIn>\r\n\r\n    \r\n    // This part is changed once the user click on the drop down to see other options\r\n    const [GetUserChangeDay, ChnageUserChangedDay] = useState(true)\r\n    /*\r\n        This part is chicking if the input that the user entered is what is wanted or not \r\n        Once the select is clicked then it will change to normal dropdown with input number \r\n    */\r\n    const [DayValueInput, ChangeDayValue] = useState(GetUserChangeDay ? props.ReturnClickedFromDay : \"\")\r\n    const handleDays = (e) =>(\r\n        ChangeDayValue(e.target.value ),\r\n        ChnageUserChangedDay(false)\r\n    )\r\n    const Days = <FadeIn><SelectData \r\n        // key={DayValueInput.id}\r\n        inputType={\"text\"}\r\n        name=\"title\"\r\n        widthValue={\"112px\"}\r\n        paddingVale={\"4px\"}\r\n        outlineValue={\"none\"}\r\n        fontSizeValue={\"1.2em\"}\r\n        fontFamilyValue={\"inherit\"}\r\n        IsCalledValue={props.DisabledisClicked? \"\" :\"FOCUS\"} \r\n        borderRadiusValue= {\"7px\"}\r\n        backGroundColorValue={ props.RecievedColor.UserInputBGC}\r\n        FontColorValue={props.RecievedColor.UserInputFC}\r\n        PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\r\n        borderColorValue={props.DisabledisClicked ? \"#A9A9A9\" :props.RecievedColor.BorderColor}  \r\n        BorderValue={\"solid\"}\r\n        borderWidthValue={\"thin\"}\r\n        marginRightValue={\"15px\"}\r\n        onchangeValue = {handleDays}\r\n        InputValue = {DayValueInput}\r\n        >\r\n        {<NumberOfDaysValue \r\n            //this is the DisabledisClicked that is coming from DropDown to change every time we click on the icion\r\n            DisabledDay={props.DisabledisClicked}\r\n        />}\r\n    </SelectData></FadeIn>\r\n    \r\n    //this is submitted to DropDownContainer\r\n    props.submitDateValue(YearsValueInput+ '-'+ MonthsValueInput + '-' + DayValueInput)\r\n    \r\n    return ([ Years, Months, Days])\r\n}\r\n\r\nexport default DateSelected;","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\RepeatedDaysSelected.js",["191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217"],"import React, { useState } from \"react\";\r\nimport FadeIn  from 'react-fade-in';\r\nimport Inputdata from '../../../../../UI/UserInput';\r\n\r\n\r\nconst RepeatDaySelected = (props) => {\r\n    const [NumberOfRepeatedDays,ChangeNumberOfRepeatedDays] = useState([])\r\n    const [isMonday,ChangeisMonday]= useState(false)\r\n    const [isTuesday,ChangeisTuesday]= useState(false)\r\n    const [isWednesday,ChangeisWednesday]= useState(false)\r\n    const [isThursday,ChangeisThursday]= useState(false)\r\n    const [isFriday,ChangeisFriday]= useState(false)\r\n    const [isSaturday,ChangeisSaturday]= useState(false)\r\n    const [isSunday,ChangeisSunday]= useState(false)\r\n    const ChoosenDay = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday']\r\n\r\n    //This is to check The value that is clicked is which day \r\n    const handleRepeatedDays = (e) =>{\r\n        const onchangeValue = e.target.value\r\n        return ( \r\n            onchangeValue == \"Monday\" ? (\r\n                isMonday == false ? \r\n                    (ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.concat('0')), ChangeisMonday(true)) \r\n                    :\r\n                    (NumberOfRepeatedDays.length == 0 ? \r\n                        (ChangeisMonday(false)) \r\n                        : \r\n                        ( onchangeValue != \"Monday\" ? \r\n                            ChangeisMonday(false) \r\n                            : \r\n                            (ChangeisMonday(false), ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.filter(Value => Value !== \"0\")))\r\n                        ) \r\n                    ) \r\n            ) :\r\n            onchangeValue == \"Tuesday\" ? (\r\n                isTuesday == false ? \r\n                    (ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.concat('1')), ChangeisTuesday(true)) \r\n                    :\r\n                    (NumberOfRepeatedDays.length == 0 ? \r\n                        (ChangeisTuesday(false)) \r\n                        : \r\n                        ( onchangeValue != \"Tuesday\" ? \r\n                            ChangeisTuesday(false) \r\n                            : \r\n                            (ChangeisTuesday(false), ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.filter(Value => Value !== \"1\")))\r\n                        ) \r\n                    )\r\n                ) :\r\n            onchangeValue == \"Wednesday\" ? (\r\n                isWednesday == false ? \r\n                    (ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.concat('2')), ChangeisWednesday(true)) \r\n                    :\r\n                    (NumberOfRepeatedDays.length == 0 ? \r\n                        (ChangeisWednesday(false)) \r\n                        : \r\n                        ( onchangeValue != \"Wednesday\" ? \r\n                            ChangeisWednesday(false) \r\n                            : \r\n                            (ChangeisWednesday(false), ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.filter(Value => Value !== \"2\")))\r\n                        ) \r\n                    )\r\n                ) :\r\n            onchangeValue == \"Thursday\" ? (\r\n                isThursday == false ? \r\n                    (ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.concat('3')), ChangeisThursday(true)) \r\n                    :\r\n                    (NumberOfRepeatedDays.length == 0 ? \r\n                        (ChangeisThursday(false)) \r\n                        : \r\n                        ( onchangeValue != \"Thursday\" ? \r\n                            ChangeisThursday(false) \r\n                            : \r\n                            (ChangeisThursday(false), ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.filter(Value => Value !== \"3\")))\r\n                        ) \r\n                    )\r\n                ) :\r\n            onchangeValue == \"Friday\" ? (\r\n                isFriday == false ? \r\n                     (ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.concat('4')), ChangeisFriday(true)) \r\n                    :\r\n                    (NumberOfRepeatedDays.length == 0 ? \r\n                        (ChangeisFriday(false)) \r\n                        : \r\n                        ( onchangeValue != \"Friday\" ? \r\n                            ChangeisFriday(false) \r\n                            : \r\n                            (ChangeisFriday(false), ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.filter(Value => Value !== \"4\")))\r\n                        ) \r\n                    ) \r\n                ) :\r\n            onchangeValue == \"Saturday\" ? (\r\n                isSaturday == false ? \r\n                    (ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.concat('5')), ChangeisSaturday(true)) \r\n                    :\r\n                    (NumberOfRepeatedDays.length == 0 ? \r\n                        (ChangeisSaturday(false)) \r\n                        : \r\n                        ( onchangeValue != \"Saturday\" ? \r\n                            ChangeisSaturday(false) \r\n                            : \r\n                            (ChangeisSaturday(false), ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.filter(Value => Value !== \"5\")))\r\n                        ) \r\n                    )  \r\n                ):\r\n            ( \r\n                isSunday == false ? \r\n                    (ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.concat('6')), ChangeisSunday(true)) \r\n                    :\r\n                    (NumberOfRepeatedDays.length == 0 ? \r\n                        (ChangeisSunday(false)) \r\n                        : \r\n                        (onchangeValue != \"Sunday\" ? \r\n                            ChangeisSunday(false) \r\n                            : \r\n                            (ChangeisSunday(false), ChangeNumberOfRepeatedDays(NumberOfRepeatedDays.filter(Value => Value !== \"6\")))\r\n                        )\r\n                    )\r\n            )\r\n        )\r\n    }\r\n\r\n    const RepeatedDayContainer = (DayValue,OnChangeInputValue) => {\r\n        return [<Inputdata \r\n            key={NumberOfRepeatedDays.id}\r\n            inputType={\"checkbox\"}\r\n            name=\"title\"\r\n            widthValue={\"20px\"}\r\n            paddingVale={\"2px\"}\r\n            outlineValue={\"none\"}\r\n            fontSizeValue={\"1.2em\"}\r\n            fontFamilyValue={\"inherit\"}\r\n            IsCalledValue={\"FOCUS\"} \r\n            borderRadiusValue= {\"7px\"}\r\n            backGroundColorValue={ props.RecievedColor.UserInputBGC}\r\n            FontColorValue={props.RecievedColor.UserInputFC}\r\n            PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\r\n            borderColorValue={props.RecievedColor.BorderColor} \r\n            BorderValue={\"solid\"}\r\n            borderWidthValue={\"thin\"}\r\n            marginRightValue={\"5px\"}\r\n            marginTopValue={\"4px\"}\r\n            onchangeValue = {OnChangeInputValue}\r\n            InputValue = {DayValue}\r\n            ></Inputdata>,\r\n            <label key={NumberOfRepeatedDays.id} style={{marginRight: \"10px\"}}>{DayValue}</label>]\r\n        }\r\n        \r\n    const LineOne = [RepeatedDayContainer(ChoosenDay[0],handleRepeatedDays),\r\n                     RepeatedDayContainer(ChoosenDay[1],handleRepeatedDays),\r\n                     RepeatedDayContainer(ChoosenDay[2],handleRepeatedDays),\r\n                     RepeatedDayContainer(ChoosenDay[3],handleRepeatedDays)]\r\n    const LineTwo = [RepeatedDayContainer(ChoosenDay[4],handleRepeatedDays),\r\n                     RepeatedDayContainer(ChoosenDay[5],handleRepeatedDays),\r\n                     RepeatedDayContainer(ChoosenDay[6],handleRepeatedDays)]\r\n    \r\n    props.ValueOfRepeatedDays(NumberOfRepeatedDays)\r\n    return (  \r\n    <FadeIn>\r\n        <div style={{display: \"flex\",width: \"50px\", flexDirection: \"row\"}}>\r\n             {LineOne} \r\n        </div>\r\n        <div style={{\r\n            display: \"flex\",\r\n            width: \"50px\", \r\n            flexDirection: \"row\", \r\n            marginTop: \"10px\", \r\n            marginLeft: \"70px\", \r\n            marginBottom: \"8px\"}}\r\n        >\r\n             {LineTwo} \r\n        </div>\r\n    </FadeIn>\r\n       )\r\n}\r\n\r\nexport default RepeatDaySelected;","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\TimeSelected.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Select.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\OptionsForm.js",["218"],"import React, { useState } from \"react\";\r\n\r\n//this is for the hour input \r\nconst HourValue = (props) => {\r\n\r\n    const Hours = ['01','02','03','04','05','06','07','08','09','10','11','12']\r\n    const DailyHours = (\r\n        [Hours.map((Hour, index) => \r\n            <option disabled={props.DisabledHour}  key={index.id} value={Hour}>{Hour}</option>)]\r\n        )\r\n    return(DailyHours)\r\n}\r\nconst MinutsValue = (props) => {\r\n\r\n    //this is for the hour input \r\n    const Minuts = ['05','10','15','20','25','30','35','40','45','50','55']\r\n    const DailyMinut =(\r\n        [Minuts.map((Minut, index) => \r\n            <option disabled={props.DisabledMinuts} key={index.id} value={Minut}>{Minut}</option>)]\r\n        )\r\n    return(DailyMinut)\r\n}\r\nconst TwelveHourSystemValue = (props) => {\r\n\r\n    //this for either AM or PM\r\n    const TwelveHourSystem = ['AM','PM']\r\n    const DayDivided =(\r\n        [TwelveHourSystem.map((DayTime, index) => \r\n            <option disabled={props.DisabledHourSystem} key={index.id} value={DayTime}>{DayTime}</option>)]\r\n        )\r\n    return(DayDivided)\r\n}\r\nconst NumberOfYearsValue = (props) => { \r\n    //this is for the years from this year \r\n    const NumberOfYears = [ '2020','2021', '2022', '2023', '2024','2025', '2026', \r\n                            '2027', '2028', '2029', '2030', '2031', '2032','2033', \r\n                            '2034','2035', '2036', '2037', '2038', '2039','2040']\r\n    const YearContainer = (\r\n        [NumberOfYears.map((year, index) => <option  disabled={props.DisabledYear}  key={index.id} value={year}>{year}</option>)]\r\n    )\r\n    \r\n    return(\r\n        YearContainer\r\n        )\r\n}\r\nconst NumberOfMonthsValue = (props) => { \r\n    //this is for the months in a year \r\n    const NumberOfMonths = ['01','02','03','04','05','06','07','08','09','10','11','12']\r\n    const MonthContainer = (\r\n        [NumberOfMonths.map((month, index) => <option disabled={props.DisabledMonth} key={index.id}  value={month}>{month}</option>)]\r\n        )\r\n    return(MonthContainer)\r\n}\r\nconst NumberOfDaysValue = (props) => { \r\n    //this is for the days in a Month \r\n    const NumberOfDays = ['01','02','03','04','05','06','07','08','09','10',\r\n                        '11','12','13','14','15','16','17','18','19','20',\r\n                        '21','22','23','24','25','26','27','28','29','30','31']\r\n    const DayContainer = (\r\n        [NumberOfDays.map((days,index ) => <option disabled={props.DisabledDay} key={index.id} value={days}>{days}</option>)]\r\n        )\r\n    return(DayContainer)\r\n}\r\nconst ColorOptionsValue = () => {\r\n\r\n    //this is for the days in a Month \r\n    const ColorChoose = ['Choose Color','BlueViolet','Black','CornflowerBlue','DarkMagenta','DimGrey',\r\n                            'DodgerBlue','Fuchsia','MidnightBlue','Purple','Salmon']\r\n    const ColorContainer = (\r\n        [ColorChoose.map((Colors,index ) => <option  key={index.id} value={Colors}>{Colors}</option>)]\r\n        )\r\n    return(ColorContainer)\r\n}\r\n\r\nexport {HourValue, MinutsValue, TwelveHourSystemValue, \r\n        NumberOfYearsValue, NumberOfMonthsValue, NumberOfDaysValue, \r\n        ColorOptionsValue};\r\n",{"ruleId":"219","severity":1,"message":"220","line":9,"column":8,"nodeType":"221","messageId":"222","endLine":9,"endColumn":15},{"ruleId":"219","severity":1,"message":"223","line":2,"column":8,"nodeType":"221","messageId":"222","endLine":2,"endColumn":14},{"ruleId":"219","severity":1,"message":"223","line":2,"column":8,"nodeType":"221","messageId":"222","endLine":2,"endColumn":14},{"ruleId":"219","severity":1,"message":"224","line":3,"column":52,"nodeType":"221","messageId":"222","endLine":3,"endColumn":67},{"ruleId":"225","severity":1,"message":"226","line":3,"column":1,"nodeType":"227","messageId":"228","endLine":5,"endColumn":15},{"ruleId":"219","severity":1,"message":"229","line":6,"column":10,"nodeType":"221","messageId":"222","endLine":6,"endColumn":23},{"ruleId":"219","severity":1,"message":"230","line":6,"column":25,"nodeType":"221","messageId":"222","endLine":6,"endColumn":39},{"ruleId":"219","severity":1,"message":"231","line":7,"column":8,"nodeType":"221","messageId":"222","endLine":7,"endColumn":17},{"ruleId":"219","severity":1,"message":"232","line":2,"column":24,"nodeType":"221","messageId":"222","endLine":2,"endColumn":34},{"ruleId":"219","severity":1,"message":"233","line":21,"column":10,"nodeType":"221","messageId":"222","endLine":21,"endColumn":23},{"ruleId":"219","severity":1,"message":"234","line":21,"column":25,"nodeType":"221","messageId":"222","endLine":21,"endColumn":44},{"ruleId":"219","severity":1,"message":"235","line":29,"column":11,"nodeType":"221","messageId":"222","endLine":29,"endColumn":21},{"ruleId":"219","severity":1,"message":"236","line":30,"column":11,"nodeType":"221","messageId":"222","endLine":30,"endColumn":18},{"ruleId":"237","severity":1,"message":"238","line":40,"column":23,"nodeType":"239","messageId":"240","endLine":40,"endColumn":25},{"ruleId":"237","severity":1,"message":"238","line":86,"column":20,"nodeType":"239","messageId":"240","endLine":86,"endColumn":22},{"ruleId":"241","severity":1,"message":"242","line":88,"column":61,"nodeType":"243","messageId":"244","endLine":88,"endColumn":62},{"ruleId":"241","severity":1,"message":"242","line":89,"column":58,"nodeType":"243","messageId":"244","endLine":89,"endColumn":59},{"ruleId":"219","severity":1,"message":"245","line":7,"column":9,"nodeType":"221","messageId":"222","endLine":7,"endColumn":27},{"ruleId":"219","severity":1,"message":"246","line":12,"column":7,"nodeType":"221","messageId":"222","endLine":12,"endColumn":20},{"ruleId":"219","severity":1,"message":"247","line":39,"column":12,"nodeType":"221","messageId":"222","endLine":39,"endColumn":28},{"ruleId":"219","severity":1,"message":"248","line":39,"column":30,"nodeType":"221","messageId":"222","endLine":39,"endColumn":49},{"ruleId":"219","severity":1,"message":"249","line":41,"column":28,"nodeType":"221","messageId":"222","endLine":41,"endColumn":45},{"ruleId":"219","severity":1,"message":"250","line":43,"column":23,"nodeType":"221","messageId":"222","endLine":43,"endColumn":38},{"ruleId":"219","severity":1,"message":"251","line":52,"column":27,"nodeType":"221","messageId":"222","endLine":52,"endColumn":47},{"ruleId":"219","severity":1,"message":"252","line":68,"column":25,"nodeType":"221","messageId":"222","endLine":68,"endColumn":40},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","replacedBy":"256"},{"ruleId":"219","severity":1,"message":"257","line":1,"column":17,"nodeType":"221","messageId":"222","endLine":1,"endColumn":25},{"ruleId":"258","severity":1,"message":"259","line":21,"column":13,"nodeType":"260","messageId":"240","endLine":21,"endColumn":18},{"ruleId":"258","severity":1,"message":"261","line":22,"column":13,"nodeType":"260","messageId":"240","endLine":22,"endColumn":16},{"ruleId":"258","severity":1,"message":"262","line":51,"column":27,"nodeType":"260","messageId":"240","endLine":51,"endColumn":36},{"ruleId":"241","severity":1,"message":"242","line":60,"column":19,"nodeType":"243","messageId":"244","endLine":60,"endColumn":20},{"ruleId":"219","severity":1,"message":"263","line":66,"column":21,"nodeType":"221","messageId":"222","endLine":66,"endColumn":31},{"ruleId":"219","severity":1,"message":"264","line":58,"column":33,"nodeType":"221","messageId":"222","endLine":58,"endColumn":58},{"ruleId":"241","severity":1,"message":"242","line":17,"column":47,"nodeType":"243","messageId":"244","endLine":17,"endColumn":48},{"ruleId":"241","severity":1,"message":"242","line":56,"column":43,"nodeType":"243","messageId":"244","endLine":56,"endColumn":44},{"ruleId":"241","severity":1,"message":"242","line":94,"column":40,"nodeType":"243","messageId":"244","endLine":94,"endColumn":41},{"ruleId":"237","severity":1,"message":"238","line":21,"column":27,"nodeType":"239","messageId":"240","endLine":21,"endColumn":29},{"ruleId":"237","severity":1,"message":"238","line":22,"column":26,"nodeType":"239","messageId":"240","endLine":22,"endColumn":28},{"ruleId":"237","severity":1,"message":"238","line":25,"column":50,"nodeType":"239","messageId":"240","endLine":25,"endColumn":52},{"ruleId":"237","severity":1,"message":"265","line":28,"column":41,"nodeType":"239","messageId":"240","endLine":28,"endColumn":43},{"ruleId":"237","severity":1,"message":"238","line":35,"column":27,"nodeType":"239","messageId":"240","endLine":35,"endColumn":29},{"ruleId":"237","severity":1,"message":"238","line":36,"column":27,"nodeType":"239","messageId":"240","endLine":36,"endColumn":29},{"ruleId":"237","severity":1,"message":"238","line":39,"column":50,"nodeType":"239","messageId":"240","endLine":39,"endColumn":52},{"ruleId":"237","severity":1,"message":"265","line":42,"column":41,"nodeType":"239","messageId":"240","endLine":42,"endColumn":43},{"ruleId":"237","severity":1,"message":"238","line":49,"column":27,"nodeType":"239","messageId":"240","endLine":49,"endColumn":29},{"ruleId":"237","severity":1,"message":"238","line":50,"column":29,"nodeType":"239","messageId":"240","endLine":50,"endColumn":31},{"ruleId":"237","severity":1,"message":"238","line":53,"column":50,"nodeType":"239","messageId":"240","endLine":53,"endColumn":52},{"ruleId":"237","severity":1,"message":"265","line":56,"column":41,"nodeType":"239","messageId":"240","endLine":56,"endColumn":43},{"ruleId":"237","severity":1,"message":"238","line":63,"column":27,"nodeType":"239","messageId":"240","endLine":63,"endColumn":29},{"ruleId":"237","severity":1,"message":"238","line":64,"column":28,"nodeType":"239","messageId":"240","endLine":64,"endColumn":30},{"ruleId":"237","severity":1,"message":"238","line":67,"column":50,"nodeType":"239","messageId":"240","endLine":67,"endColumn":52},{"ruleId":"237","severity":1,"message":"265","line":70,"column":41,"nodeType":"239","messageId":"240","endLine":70,"endColumn":43},{"ruleId":"237","severity":1,"message":"238","line":77,"column":27,"nodeType":"239","messageId":"240","endLine":77,"endColumn":29},{"ruleId":"237","severity":1,"message":"238","line":78,"column":26,"nodeType":"239","messageId":"240","endLine":78,"endColumn":28},{"ruleId":"237","severity":1,"message":"238","line":81,"column":50,"nodeType":"239","messageId":"240","endLine":81,"endColumn":52},{"ruleId":"237","severity":1,"message":"265","line":84,"column":41,"nodeType":"239","messageId":"240","endLine":84,"endColumn":43},{"ruleId":"237","severity":1,"message":"238","line":91,"column":27,"nodeType":"239","messageId":"240","endLine":91,"endColumn":29},{"ruleId":"237","severity":1,"message":"238","line":92,"column":28,"nodeType":"239","messageId":"240","endLine":92,"endColumn":30},{"ruleId":"237","severity":1,"message":"238","line":95,"column":50,"nodeType":"239","messageId":"240","endLine":95,"endColumn":52},{"ruleId":"237","severity":1,"message":"265","line":98,"column":41,"nodeType":"239","messageId":"240","endLine":98,"endColumn":43},{"ruleId":"237","severity":1,"message":"238","line":106,"column":26,"nodeType":"239","messageId":"240","endLine":106,"endColumn":28},{"ruleId":"237","severity":1,"message":"238","line":109,"column":50,"nodeType":"239","messageId":"240","endLine":109,"endColumn":52},{"ruleId":"237","severity":1,"message":"265","line":112,"column":40,"nodeType":"239","messageId":"240","endLine":112,"endColumn":42},{"ruleId":"219","severity":1,"message":"257","line":1,"column":17,"nodeType":"221","messageId":"222","endLine":1,"endColumn":25},"no-unused-vars","'Weather' is defined but never used.","Identifier","unusedVar","'styled' is defined but never used.","'UserAddOutlined' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'LoginOutlined' is defined but never used.","'LogoutOutlined' is defined but never used.","'AppButton' is defined but never used.","'formatDate' is defined but never used.","'currentEvents' is assigned a value but never used.","'ChangecurrentEvents' is assigned a value but never used.","'getIsClose' is assigned a value but never used.","'isTitle' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'FontColorContainer' is defined but never used.","'InfoContainer' is assigned a value but never used.","'getSubmitClicked' is assigned a value but never used.","'ChangeSubmitClicked' is assigned a value but never used.","'ChangeClickedDate' is assigned a value but never used.","'ChnageIdCounter' is assigned a value but never used.","'ChangeURLPlaceHolder' is assigned a value but never used.","'ChnageEventInfo' is assigned a value but never used.","no-native-reassign",["266"],"no-negated-in-lhs",["267"],"'useState' is defined but never used.","no-dupe-keys","Duplicate key 'start'.","ObjectExpression","Duplicate key 'end'.","Duplicate key 'textColor'.","'setIsShown' is assigned a value but never used.","'ChangeRecievedClickedDate' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]