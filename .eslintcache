[{"/Users/mero/Project/mero/notesk/src/index.js":"1","/Users/mero/Project/mero/notesk/src/App.js":"2","/Users/mero/Project/mero/notesk/src/serviceWorker.js":"3","/Users/mero/Project/mero/notesk/src/Routes/Notes/Notes.js":"4","/Users/mero/Project/mero/notesk/src/Routes/Calendar/Calendar.js":"5","/Users/mero/Project/mero/notesk/src/API/Weather.js":"6","/Users/mero/Project/mero/notesk/src/Routes/Login/Login.js":"7","/Users/mero/Project/mero/notesk/src/Routes/Signup/Signup.js":"8","/Users/mero/Project/mero/notesk/src/API/API.js":"9","/Users/mero/Project/mero/notesk/src/Routes/Login/LoginForm.js":"10","/Users/mero/Project/mero/notesk/src/Routes/Signup/SignupForm.js":"11","/Users/mero/Project/mero/notesk/src/UI/BlurDiv.js":"12","/Users/mero/Project/mero/notesk/src/UI/UserInput.js":"13","/Users/mero/Project/mero/notesk/src/UI/Footer.js":"14","/Users/mero/Project/mero/notesk/src/UI/NavBar.js":"15","/Users/mero/Project/mero/notesk/src/Routes/Notes/Note/Note.js":"16","/Users/mero/Project/mero/notesk/src/Routes/Notes/CreateNote/CreateNote.js":"17","/Users/mero/Project/mero/notesk/src/Routes/Calendar/CalendarCollection1.js":"18","/Users/mero/Project/mero/notesk/src/UI/Modal.js":"19","/Users/mero/Project/mero/notesk/src/UI/Button.js":"20","/Users/mero/Project/mero/notesk/src/UI/Switch.js":"21","/Users/mero/Project/mero/notesk/src/UI/UserIcon.js":"22","/Users/mero/Project/mero/notesk/src/UI/TextArea.js":"23","/Users/mero/Project/mero/notesk/src/Routes/Calendar/CalendarForm1.js":"24","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Schedule1.js":"25","/Users/mero/Project/mero/notesk/src/Routes/Calendar/EditForm/EvenForm.js":"26","/Users/mero/Project/mero/notesk/src/Routes/Calendar/event-utils.js":"27","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/InputContainer.js":"28","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DaysContainer.js":"29","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/SubmitButton1.js":"30","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DropDownContainer.js":"31","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/RepeatedDaysSelected.js":"32","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/TimeSelected.js":"33","/Users/mero/Project/mero/notesk/src/UI/Select.js":"34","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/OptionsForm.js":"35","/Users/mero/Project/mero/notesk/src/Routes/Calendar/EditForm/EditButton.js":"36"},{"size":481,"mtime":1612050645018,"results":"37","hashOfConfig":"38"},{"size":2512,"mtime":1612644397016,"results":"39","hashOfConfig":"38"},{"size":5086,"mtime":1612050645018,"results":"40","hashOfConfig":"38"},{"size":1980,"mtime":1612173981263,"results":"41","hashOfConfig":"38"},{"size":470,"mtime":1612923389976,"results":"42","hashOfConfig":"38"},{"size":1102,"mtime":1612646524682,"results":"43","hashOfConfig":"38"},{"size":462,"mtime":1612050645013,"results":"44","hashOfConfig":"38"},{"size":467,"mtime":1612050645015,"results":"45","hashOfConfig":"38"},{"size":313,"mtime":1612657488319,"results":"46","hashOfConfig":"38"},{"size":3709,"mtime":1612050645013,"results":"47","hashOfConfig":"38"},{"size":8660,"mtime":1612050816120,"results":"48","hashOfConfig":"38"},{"size":520,"mtime":1612050645015,"results":"49","hashOfConfig":"38"},{"size":4273,"mtime":1613010410882,"results":"50","hashOfConfig":"38"},{"size":521,"mtime":1612050645016,"results":"51","hashOfConfig":"38"},{"size":3149,"mtime":1612717340097,"results":"52","hashOfConfig":"38"},{"size":6058,"mtime":1612050816119,"results":"53","hashOfConfig":"38"},{"size":6099,"mtime":1612050645014,"results":"54","hashOfConfig":"38"},{"size":3355,"mtime":1613183199863,"results":"55","hashOfConfig":"38"},{"size":3439,"mtime":1612717817973,"results":"56","hashOfConfig":"38"},{"size":2896,"mtime":1612050816120,"results":"57","hashOfConfig":"38"},{"size":4575,"mtime":1612632910700,"results":"58","hashOfConfig":"38"},{"size":929,"mtime":1612050645017,"results":"59","hashOfConfig":"38"},{"size":2995,"mtime":1612050645017,"results":"60","hashOfConfig":"38"},{"size":4907,"mtime":1613181868088,"results":"61","hashOfConfig":"38"},{"size":6252,"mtime":1613180749122,"results":"62","hashOfConfig":"38"},{"size":3639,"mtime":1613182759899,"results":"63","hashOfConfig":"38"},{"size":378,"mtime":1613088930814,"results":"64","hashOfConfig":"38"},{"size":4599,"mtime":1612626555000,"results":"65","hashOfConfig":"38"},{"size":1149,"mtime":1613084419690,"results":"66","hashOfConfig":"38"},{"size":1504,"mtime":1613089854803,"results":"67","hashOfConfig":"38"},{"size":6283,"mtime":1613180071562,"results":"68","hashOfConfig":"38"},{"size":3386,"mtime":1613085619888,"results":"69","hashOfConfig":"38"},{"size":4351,"mtime":1613012060654,"results":"70","hashOfConfig":"38"},{"size":3140,"mtime":1612050816121,"results":"71","hashOfConfig":"38"},{"size":3157,"mtime":1612990050757,"results":"72","hashOfConfig":"38"},{"size":1013,"mtime":1613182802129,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"x9zsk2",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"125"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"125"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"125"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"125"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"125"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"125"},"/Users/mero/Project/mero/notesk/src/index.js",[],"/Users/mero/Project/mero/notesk/src/App.js",[],"/Users/mero/Project/mero/notesk/src/serviceWorker.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Notes/Notes.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Calendar/Calendar.js",[],"/Users/mero/Project/mero/notesk/src/API/Weather.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Login/Login.js",["154"],"/Users/mero/Project/mero/notesk/src/Routes/Signup/Signup.js",["155"],"/Users/mero/Project/mero/notesk/src/API/API.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Login/LoginForm.js",["156"],"/Users/mero/Project/mero/notesk/src/Routes/Signup/SignupForm.js",[],"/Users/mero/Project/mero/notesk/src/UI/BlurDiv.js",["157"],"/Users/mero/Project/mero/notesk/src/UI/UserInput.js",[],"/Users/mero/Project/mero/notesk/src/UI/Footer.js",[],"/Users/mero/Project/mero/notesk/src/UI/NavBar.js",["158","159","160"],"/Users/mero/Project/mero/notesk/src/Routes/Notes/Note/Note.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Notes/CreateNote/CreateNote.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Calendar/CalendarCollection1.js",["161","162","163"],"/Users/mero/Project/mero/notesk/src/UI/Modal.js",[],"/Users/mero/Project/mero/notesk/src/UI/Button.js",[],"/Users/mero/Project/mero/notesk/src/UI/Switch.js",[],"/Users/mero/Project/mero/notesk/src/UI/UserIcon.js",[],"/Users/mero/Project/mero/notesk/src/UI/TextArea.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Calendar/CalendarForm1.js",["164","165"],"/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Schedule1.js",["166","167"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport NoteContainer from \"../../../UI/Modal\";\nimport FadeIn from \"react-fade-in\";\nimport {TitleContainer,DescriptionContainer,URLContainer} from \"./Containers/InputContainer\";\nimport {CalenderContianer,TimerContainer} from \"./Containers/DropDownContainer\";\nimport RDContainer from \"./Containers/DaysContainer\";\nimport SubmitButton from \"./Containers/SubmitButton1\";\nimport { CloseCircleOutlined } from \"@ant-design/icons\";\nconst InfoContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    position: fixed;\n    z-index: 5;\n    left: 0;\n    top: 0'\n    background-color: rgba(0,0,0, 0.5)\n`;\n\nconst Schedule = (props) => {\n    \n    //Close ICion Area\n    const CloseIcon = \n    (<CloseCircleOutlined\n        onClick={()=> props.CallingCalendar(false)} \n        style={{marginRight: \"4px\", marginLeft: \"95%\", marginBottom: \"15px\",\n            fontSize: \"26px\", color: props.ScheduleColor.IconC}} // send the color list from the parent App file \n    />)\n\n    //Title Area\n    const [getTitle, ChangeTitle] = useState(\"\");\n    const [TitlePH, ChangeTitlePH] = useState(\"Title ...\");\n    const Title = <TitleContainer\n            SubmitTitle={(value) => ChangeTitle(value)} //this is to return input value of the title and then send it to submit model\n            SubmitTitlePlaceHolder={TitlePH} //this is to send the placeholder for the title area\n            ScheduleColor={props.ScheduleColor}  // send the color list from the parent App file \n        />  \n    \n    //Description Area\n    const [getDescription, ChangeDescription] = useState(\"\");\n    const [DescriptionPH, ChangeDescriptionPH] = useState(\"Description ...\");\n    const Description = (\n        <DescriptionContainer\n        SubmitDescription={(value) => ChangeDescription(value)}\n        SubmitDescriptionPlaceHolder={DescriptionPH}\n        ScheduleColor={props.ScheduleColor}\n        />\n    );\n\n    //URL Area\n    const [getURL, ChangeURL] = useState();\n    const [URLPH, ChangeURLPH] = useState(\"Optional Attached Link For Description ...\");\n    const URL = (\n        <URLContainer\n        URLOption={(value) => ChangeURL(value)}\n        SubmitURLPH={URLPH}\n        ScheduleColor={props.ScheduleColor}\n        />\n    );\n    \n    // Data From and To\n    const [getFormDate, ChangeFormDate] = useState(); //this is the data that will be send to submit model to be added to the event list \n    const [getToDate, ChangeToDate] = useState();  //this is the data that will be send to submit model to be added to the event list \n    const StartDate= props.SendSelectedSD //This is the selected data in calendar\n    const EndDate= props.SendSelectedED//This is the selected data in calendar  \n    const Data = (\n        <CalenderContianer\n        SendSD={StartDate} //This is to send back the selected started data\n        SendED={EndDate} //This is to send back the selected ended data\n        GetFromDate={(value) => ChangeFormDate(value)} //Returning the selected data that the user chose \n        GetToDate={(value) => ChangeToDate(value)} //Returning the selected data that the user chose \n        ScheduleColor={props.ScheduleColor} // send the color list from the parent App file  \n        />\n    );\n\n    //This is for the time\n    const [StartHours, ChangeStartHour] = useState(); //have returned starting hour if time is needed\n    const [StartMinuts, ChangeStartMinuts] = useState(); //have returned starting minut if time is needed \n    const [TimeClicked, ChangeTimeClicked] = useState() //this to make sure that time is included or not \n    const Time = (\n        <TimerContainer\n        FromHourSelected={(value) => ChangeStartHour(value)} // return starting hour if time is needed\n        FromMinutsSelected={(value) => ChangeStartMinuts(value)} // return starting minut if time is needed \n        ScheduleColor={props.ScheduleColor} // send the color list from the parent App file  \n        isTime={(value) => ChangeTimeClicked(value)}\n        />\n    );\n\n    //this is for number of rebeated days \n    const [GetRepeatedDays, ChangeRepeatedDays] = useState()\n    const RepeatedDays =(<RDContainer\n        ScheduleColor={props.ScheduleColor} // send the color list from the parent App file  \n        SubmitNumberOfRP={(value) => ChangeRepeatedDays(value)} //returning the value of repeated days \n        />\n    );\n    //Submit Buton \n    const Submit = (\n        <SubmitButton \n            isCallingCalendar={value=> props.CallingCalendar(value)} //return the close value to return to calender from the submit model \n            isTitle={getTitle} //the Title value \n            CheckTitlePH={value => ChangeTitlePH(value)} //this is to change the title place holder if there is no title \n            isDescription={getDescription} //the Description value\n            CheckDescriptionPH={value => ChangeDescriptionPH(value)} //this is to change the description placeholder if there is no placeholder\n            isURL={getURL} //the URL value\n            isStartingDate={TimeClicked ? (getFormDate+'T12:00:00') : (getFormDate+\"T\"+StartHours+\":\"+StartMinuts+\"00\")} //the value of the Starting data\n            isEndingData={getToDate } //the value of Ending data\n            isRepeatedDays={GetRepeatedDays} //Values of Repeated Days\n            isEvent={props.submitEventValues}\n        />\n    );\n    const ScheduleForm = (\n        <FadeIn>\n            <NoteContainer\n                position={\"relative\"}\n                width={\"520px\"}\n                margin={\"30px auto 20px auto\"}\n                padding={\"15px\"}\n                boxShadowValue={\"0 1px 5px rgb(138, 137, 137)\"}\n                borderRadiusValue={\"7px\"}\n                resizeValue={\"both\"}\n                backGroundColorValue={props.ScheduleColor.NotekBGC} //// send the color list from the parent App file \n                FontColorValue={props.ScheduleColor.NoteFC} //// send the color list from the parent App file \n                >\n            {CloseIcon}\n            {Title} \n            {Description}\n            {URL}\n            {Data}\n            {Time}\n            {RepeatedDays}\n            {Submit}\n            </NoteContainer> \n        </FadeIn>\n    );\n\n  return ScheduleForm;\n};\n\nexport default Schedule;\n",["168","169"],"/Users/mero/Project/mero/notesk/src/Routes/Calendar/EditForm/EvenForm.js",["170"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport NoteContainer from \"../../../UI/Modal\";\nimport FadeIn from \"react-fade-in\"; \nimport { CloseCircleOutlined } from \"@ant-design/icons\";\nimport EditButton from \"./EditButton\";\n\n// import { SubmissionContainer } from \"../ScheduleForm/Containers/SubmitButton1\" ;\nconst EachateContainer = styled.div`\n    width: 460px;\n    display: flex;\n    flex-direction: row;\n    justify-content: ${props => props.JustifyContentCalue};\n    margin: 4px;\n`\nconst DateContainer = styled.div`\n    width: 400px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n` \nconst TitleStyle = styled.span`\n  padding: 4px ;\n  fontSize: 1.2em;\n  marginRight: 4px;\n  color: ${props => props.Coloring};\n`\nconst ContentStyle = styled.span`\n  padding: 4px ;\n  fontSize: 1.2em;\n  marginLeft: 20px;\n  `\nconst EventForm = (props) => {\n  \n  // The Event information \n  const Header=<EachateContainer>\n    <span style={{ \n      padding: \"1px\" ,paddingTop: \"1px\" , \n      fontSize: \"1.2em\", marginLeft: \"150px\",\n      color: `${props.ScheduleColor.IconC}`}}>\n        Event Info\n    </span> \n    <CloseCircleOutlined\n      onClick={()=> props.closedEventForm(true)} \n      style={{marginRight: \"4px\", marginLeft: \"180px\", marginBottom: \"15px\",\n          fontSize: \"26px\", color: props.ScheduleColor.IconC}} // send the color list from the parent App file \n    />\n  </EachateContainer>  \n  //TItle Area props.ScheduleColor.IconC\n  const isTitle =<EachateContainer JustifyContentCalue={\"\"}>\n    <TitleStyle Coloring={props.ScheduleColor.IconC}>Title : </TitleStyle> \n    <ContentStyle >{props.EventClickedInfo.title}</ContentStyle> \n  </EachateContainer>\n  //Description Area props.ScheduleColor.IconC\n  const isDescription =<EachateContainer JustifyContentCalue={ \"\"}>\n    <TitleStyle Coloring={props.ScheduleColor.IconC}>Description : </TitleStyle> \n    <ContentStyle >{props.EventClickedInfo.description}</ContentStyle> \n  </EachateContainer>\n  //Url Area props.ScheduleColor.IconC\n  const isUrl =<EachateContainer JustifyContentCalue={ \"\"}>\n    <TitleStyle Coloring={props.ScheduleColor.IconC}>Url : </TitleStyle> \n    <ContentStyle >{ props.EventClickedInfo.url ? props.EventClickedInfo.url : \"......\"  }</ContentStyle> \n  </EachateContainer>\n  //Start Area props.ScheduleColor.IconC\n  const isStart =<EachateContainer JustifyContentCalue={ \"\"}>\n    <TitleStyle Coloring={props.ScheduleColor.IconC}>Start : </TitleStyle> \n    {/* <ContentStyle >{props.EventClickedInfo.Start}</ContentStyle>  */}\n  </EachateContainer>\n  //End Area props.ScheduleColor.IconC\n  const isEnd =<EachateContainer JustifyContentCalue={ \"\"}>\n    <TitleStyle Coloring={props.ScheduleColor.IconC}>End : </TitleStyle> \n    {/* <ContentStyle >{props.EventClickedInfo.End}</ContentStyle>  */}\n  </EachateContainer>\n  \n  // The content Area\n  const Content = <DateContainer>\n    {isTitle}\n    {isDescription}\n    {isUrl}\n    {isStart}\n    {isEnd}\n  </DateContainer>\n  \n  //The edit button\n  const isEditButton=<EditButton\n  \n  />\n  const EventInfo= <NoteContainer\n        position={\"relative\"}\n        width={\"480px\"}\n        margin={\"30px auto 20px auto\"}\n        padding={\"15px\"}\n        boxShadowValue={\"0 1px 5px rgb(138, 137, 137)\"}\n        borderRadiusValue={\"7px\"}\n        resizeValue={\"both\"}\n        backGroundColorValue={props.ScheduleColor.NotekBGC}\n        FontColorValue={props.ScheduleColor.NoteFC}\n      > \n        {Header}\n        {Content}\n        {isEditButton}\n      </NoteContainer>\n\n  return (\n    <FadeIn>\n      {EventInfo}\n    </FadeIn>\n  );\n};\n\nexport default EventForm;\n","/Users/mero/Project/mero/notesk/src/Routes/Calendar/event-utils.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/InputContainer.js",["171"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport UserInput from '../../../../UI/UserInput'\nimport TextArea from '../../../../UI/TextArea';\nimport FadeIn  from 'react-fade-in';\nimport { LinkOutlined} from \"@ant-design/icons\";\nimport { Title } from '@material-ui/icons';\nimport DescriptionIcon from '@material-ui/icons/Description';\nconst InfoContainer = styled.div`\n    width: 440px;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    margin: 4px;\n    margin-bottom: 10px;\n`\n\nconst TitleContainer = (props) => {\n    const IconColor = { \n        color : props.ScheduleColor.IconC, \n        fontSize:\"25px\", \n        marginRight:\"15px\", \n        marginTop:\"4px\" \n    } \n    const title = <InfoContainer>\n        <FadeIn><Title style={IconColor}/></FadeIn>\n        <FadeIn><UserInput \n        key={`title` + 1}\n        // This is to change the Value of Title based on the input coming from schedule\n        onchangeValue={(event)=>props.SubmitTitle(event.target.value)}\n        //This is the Props that is coming from Schedule From once I click on submit\n        PlaceholderValue={props.SubmitTitlePlaceHolder}\n        name=\"title\"\n        inputType={\"text\"} \n        widthValue={\"425px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={\"FOCUS\"} \n        borderRadiusValue= {\"7px\"}\n        backGroundColorValue={props.ScheduleColor.UserInputBGC}\n        FontColorValue={props.ScheduleColor.UserInputFC}\n        PlaceHolderColorValue={props.ScheduleColor.UserInputPHC}\n        borderColorValue={props.ScheduleColor.BorderColor}  \n        BorderValue={\"solid\"}\n        borderWidthValue=\"thin\"\n        marginRightValue={\"10px\"}\n        /></FadeIn>\n    </InfoContainer>\n\n    return(title)\n}\n\nconst DescriptionContainer = (props) => {\n    const IconColor = { \n        color : props.ScheduleColor.IconC, \n        fontSize:\"25px\", \n        marginRight:\"15px\", \n        marginTop:\"4px\" \n    }\n    const Description = <InfoContainer>\n        <FadeIn><DescriptionIcon style={IconColor}/></FadeIn>\n        <FadeIn><TextArea\n        key={`Description`+1} \n        // This is to change the Value of Title based on the input \n        onchangeValue={(event)=>props.SubmitDescription(event.target.value)}\n        //This is the Props that is coming from Schedule From once I click on submit\n        PlaceholderValue={props.SubmitDescriptionPlaceHolder}\n        rows={3}\n        name=\"Description\"\n        inputType={\"text\"} \n        widthValue={\"425px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={\"FOCUS\"} \n        borderRadiusValue= {\"7px\"}\n        backGroundColorValue={props.ScheduleColor.UserInputBGC}\n        FontColorValue={props.ScheduleColor.UserInputFC}\n        PlaceHolderColorValue={props.ScheduleColor.UserInputPHC}\n        borderColorValue={props.ScheduleColor.BorderColor}  \n        BorderValue={\"solid\"}\n        resizeValue={\"vertical\"}\n        borderWidthValue=\"thin\"\n        marginRightValue={\"10px\"}\n        /></FadeIn>\n    </InfoContainer>\n\n\n    return (Description)\n}\n\nconst URLContainer = (props) => {\n    const IconColor = { \n        color : props.ScheduleColor.IconC, \n        fontSize:\"25px\", \n        marginRight:\"15px\", \n        marginTop:\"4px\" \n    }\n    const URL = <InfoContainer>\n        <FadeIn><LinkOutlined style={IconColor}/></FadeIn>\n        <FadeIn><UserInput \n        key={`AttachedLinkDescription` }\n        // This is to change the Value of Title based on the input \n        onchangeValue={(event)=>props.URLOption(event.target.value)}\n        //This is the Props that is coming from Schedule From once I click on submit\n        PlaceholderValue={props.SubmitURLPH}\n        name=\"Url\"\n        inputType={\"text\"} \n        widthValue={\"425px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={\"FOCUS\"} \n        borderRadiusValue= {\"7px\"}\n        backGroundColorValue={props.ScheduleColor.UserInputBGC}\n        FontColorValue={props.ScheduleColor.UserInputFC}\n        PlaceHolderColorValue={props.ScheduleColor.UserInputPHC}\n        borderColorValue={props.ScheduleColor.BorderColor}    \n        BorderValue={\"solid\"}\n        borderWidthValue=\"thin\"\n        marginRightValue={\"10px\"}\n        /></FadeIn>\n    </InfoContainer>\n\n\n    return (URL)\n}\n\nexport  {TitleContainer, DescriptionContainer, URLContainer};","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DaysContainer.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/SubmitButton1.js",["172","173","174","175"],"import React, { useState, useEffect } from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport { LoginOutlined } from \"@ant-design/icons\";\nimport Button from \"../../../../UI/Button\";\nimport { createEventId } from \"../../event-utils\";\nimport { Title } from \"@material-ui/icons\";\nlet todayStr = new Date().toISOString().replace(/T.*$/, '') // YYYY-MM-DD of today\n\nconst SubmitButton = (props) => {\n  const ButtonIconColor = {\n    fontSize: \"20px\",\n    marginRight: \"9px\",\n    marginTop: \"4px\",\n  };  \n  const CreateEvent = { \n      id: createEventId(),  \n      title:  props.isTitle ,\n      description:  props.isDescription ,\n      Url:  props.isURL ,\n      start:  props.isStartingDate ,\n      end: props.isEndingData, \n      // daysOfWeek: props.isRepeatedDays,\n      display: \"list-item\",\n      textColor: \"red\",\n    };\n\n  const SubmitEvent = () => { \n    return(\n      props.isEvent((oldarr) => [...oldarr, CreateEvent]),\n      props.isCallingCalendar(false)\n    )\n  };\n\n  const SubmitButton = (\n    <FadeIn>\n      <Button\n        width={\"120px\"}\n        marginBottomValue={\"10px\"}\n        marginLeftValue={\"35%\"}\n        fontSizeValue={\"20px\"}\n        borderRadiusValue={\"15px\"}\n        IsCalledValue={\"hover\"}\n        BorderValue=\"solid\"\n        borderWidthValue=\"thin\"\n        paddingInputValue=\"2px\"\n        onClick={SubmitEvent}\n        text={\"Submit\"}\n        icon={<LoginOutlined style={ButtonIconColor} />}\n      />\n    </FadeIn>\n  );\n\n\n  return SubmitButton;\n};\n\nexport default SubmitButton;\n","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DropDownContainer.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/RepeatedDaysSelected.js",["176"],"import React, { useState } from \"react\";\nimport FadeIn  from 'react-fade-in';\nimport Inputdata from '../../../../../UI/UserInput';\nimport { createEventId } from \"../../../event-utils\";\n\n\nconst RepeatDaySelected = (props) => {\n    const [NumberOfRepeatedDays,ChangeNumberOfRepeatedDays] = useState([]) \n    const [Days,changeDays] = useState({\n        Sunday: {id: \"0\", value: false},\n        Monday: {id: \"1\", value: false},\n        Tuesday: {id: \"1\", value: false},\n        Wednesday: {id: \"3\", value: false},\n        Thursday: {id: \"4\", value: false},\n        Friday: {id: \"5\", value: false},\n        Saturday: {id: \"6\", value: false}\n    })\n    const ChoosenDay = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'] \n    const handleRepeatedDays = (e) => {\n        const newDays = {...Days}\n        const onchangeValue = e.target.value\n        newDays[onchangeValue].value = !newDays[onchangeValue].value\n        changeDays(newDays)\n        //Returning the value of id of each day if it is clicked \n        ChangeNumberOfRepeatedDays(Object.values(Days).map(item => {\n            if (item.value) return item.id\n        }).filter(item => item))\n    }\n    \n    const RepeatedDayContainer = (DayValue,OnChangeInputValue) => {\n        return [<Inputdata \n            key={NumberOfRepeatedDays.id + createEventId()}\n            inputType={\"checkbox\"}\n            name=\"title\"\n            widthValue={\"20px\"}\n            paddingVale={\"2px\"}\n            outlineValue={\"none\"}\n            fontSizeValue={\"1.2em\"}\n            fontFamilyValue={\"inherit\"}\n            IsCalledValue={\"FOCUS\"} \n            borderRadiusValue= {\"7px\"}\n            backGroundColorValue={ props.RecievedColor.UserInputBGC}\n            FontColorValue={props.RecievedColor.UserInputFC}\n            PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\n            borderColorValue={props.RecievedColor.BorderColor} \n            BorderValue={\"solid\"}\n            borderWidthValue={\"thin\"}\n            marginRightValue={\"5px\"}\n            marginTopValue={\"4px\"}\n            checked={Days[DayValue].value}\n            onchangeValue = {OnChangeInputValue}\n            InputValue = {DayValue}\n            ></Inputdata>,\n            <label key={NumberOfRepeatedDays.id} style={{marginRight: \"10px\"}}>{DayValue}</label>]\n        }\n        \n    const LineOne = [RepeatedDayContainer(ChoosenDay[0],handleRepeatedDays),\n                     RepeatedDayContainer(ChoosenDay[1],handleRepeatedDays),\n                     RepeatedDayContainer(ChoosenDay[2],handleRepeatedDays),\n                     RepeatedDayContainer(ChoosenDay[3],handleRepeatedDays)]\n    const LineTwo = [RepeatedDayContainer(ChoosenDay[4],handleRepeatedDays),\n                     RepeatedDayContainer(ChoosenDay[5],handleRepeatedDays),\n                     RepeatedDayContainer(ChoosenDay[6],handleRepeatedDays)]\n    \n    props.ValueOfRepeatedDays(NumberOfRepeatedDays);\n    return (  \n    <FadeIn>\n        <div style={{display: \"flex\",width: \"50px\", flexDirection: \"row\"}}>\n             {LineOne} \n        </div>\n        <div style={{\n            display: \"flex\",\n            width: \"50px\", \n            flexDirection: \"row\", \n            marginTop: \"10px\", \n            marginLeft: \"70px\", \n            marginBottom: \"8px\"}}\n        >\n             {LineTwo} \n        </div>\n    </FadeIn>\n       )\n}\n\nexport default RepeatDaySelected;","/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/TimeSelected.js",[],"/Users/mero/Project/mero/notesk/src/UI/Select.js",[],"/Users/mero/Project/mero/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/OptionsForm.js",["177"],"import React, { useState } from \"react\";\nimport { createEventId } from \"../../../event-utils\";\n\n//this is for the hour input \nconst HourValue = (props) => {\n\n    const Hours = ['01','02','03','04','05','06','07','08','09','10','11','12']\n    const DailyHours = (\n        [Hours.map((Hour, index) => \n            <option disabled={props.DisabledHour}  key={index.id + createEventId()} value={Hour}>{Hour}</option>)]\n        )\n    return(DailyHours)\n}\nconst MinutsValue = (props) => {\n\n    //this is for the hour input \n    const Minuts = ['05','10','15','20','25','30','35','40','45','50','55']\n    const DailyMinut =(\n        [Minuts.map((Minut, index) => \n            <option disabled={props.DisabledMinuts} key={index.id + createEventId()} value={Minut}>{Minut}</option>)]\n        )\n    return(DailyMinut)\n}\nconst TwelveHourSystemValue = (props) => {\n\n    //this for either AM or PM\n    const TwelveHourSystem = ['AM','PM']\n    const DayDivided =(\n        [TwelveHourSystem.map((DayTime, index) => \n            <option disabled={props.DisabledHourSystem} key={index.id + createEventId()} value={DayTime}>{DayTime}</option>)]\n        )\n    return(DayDivided)\n}\nconst NumberOfYearsValue = (props) => { \n    //this is for the years from this year \n    const NumberOfYears = [ '2020','2021', '2022', '2023', '2024','2025', '2026', \n                            '2027', '2028', '2029', '2030', '2031', '2032','2033', \n                            '2034','2035', '2036', '2037', '2038', '2039','2040']\n    const YearContainer = (\n        [NumberOfYears.map((year, index) => <option    key={index.id + createEventId()} value={year}>{year}</option>)]\n    )\n    \n    return(\n        YearContainer\n        )\n}\nconst NumberOfMonthsValue = (props) => { \n    //this is for the months in a year \n    const NumberOfMonths = ['01','02','03','04','05','06','07','08','09','10','11','12']\n    const MonthContainer = (\n        [NumberOfMonths.map((month, index) => <option  key={index.id + createEventId()}  value={month}>{month}</option>)]\n        )\n    return(MonthContainer)\n}\nconst NumberOfDaysValue = (props) => { \n    //this is for the days in a Month \n    const NumberOfDays = ['01','02','03','04','05','06','07','08','09','10',\n                        '11','12','13','14','15','16','17','18','19','20',\n                        '21','22','23','24','25','26','27','28','29','30','31']\n    const DayContainer = (\n        [NumberOfDays.map((days,index ) => <option  key={index.id + createEventId()} value={days}>{days}</option>)]\n        )\n    return(DayContainer)\n}\nconst ColorOptionsValue = () => {\n\n    //this is for the days in a Month \n    const ColorChoose = ['Choose Color','BlueViolet','Black','CornflowerBlue','DarkMagenta','DimGrey',\n                            'DodgerBlue','Fuchsia','MidnightBlue','Purple','Salmon']\n    const ColorContainer = (\n        [ColorChoose.map((Colors,index ) => <option  key={index.id + createEventId()} value={Colors}>{Colors}</option>)]\n        )\n    return(ColorContainer)\n}\n\nexport {HourValue, MinutsValue, TwelveHourSystemValue, \n        NumberOfYearsValue, NumberOfMonthsValue, NumberOfDaysValue, \n        ColorOptionsValue};\n","/Users/mero/Project/mero/notesk/src/Routes/Calendar/EditForm/EditButton.js",["178"],"import React, { useState } from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport { LoginOutlined } from \"@ant-design/icons\";\nimport Button from \"../../../UI/Button\";  \n\nconst EditButton = (props) => {\n  const ButtonIconColor = {\n    fontSize: \"20px\",\n    marginRight: \"9px\",\n    marginTop: \"4px\",\n  };   \n\n//   const SubmitEvent = () => { \n//     return(\n//     //   props.isEvent((oldarr) => [...oldarr, CreateEvent]),\n//     //   props.isCallingCalendar(false)\n//     )\n//   };\n\n  const SubmitButton = (\n    <FadeIn>\n      <Button\n        width={\"120px\"}\n        marginBottomValue={\"10px\"}\n        marginLeftValue={\"35%\"}\n        fontSizeValue={\"20px\"}\n        borderRadiusValue={\"15px\"}\n        IsCalledValue={\"hover\"}\n        BorderValue=\"solid\"\n        borderWidthValue=\"thin\"\n        paddingInputValue=\"2px\"\n        // onClick={SubmitEvent}\n        text={\"Edit\"}\n        icon={<LoginOutlined style={ButtonIconColor} />}\n      />\n    </FadeIn>\n  );\n\n\n  return SubmitButton;\n};\n\nexport default EditButton;\n",{"ruleId":"179","severity":1,"message":"180","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":14},{"ruleId":"179","severity":1,"message":"180","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":14},{"ruleId":"179","severity":1,"message":"183","line":3,"column":52,"nodeType":"181","messageId":"182","endLine":3,"endColumn":67},{"ruleId":"184","severity":1,"message":"185","line":3,"column":1,"nodeType":"186","messageId":"187","endLine":5,"endColumn":15},{"ruleId":"179","severity":1,"message":"188","line":6,"column":10,"nodeType":"181","messageId":"182","endLine":6,"endColumn":23},{"ruleId":"179","severity":1,"message":"189","line":6,"column":25,"nodeType":"181","messageId":"182","endLine":6,"endColumn":39},{"ruleId":"179","severity":1,"message":"190","line":7,"column":8,"nodeType":"181","messageId":"182","endLine":7,"endColumn":17},{"ruleId":"179","severity":1,"message":"191","line":6,"column":8,"nodeType":"181","messageId":"182","endLine":6,"endColumn":15},{"ruleId":"192","severity":1,"message":"193","line":37,"column":7,"nodeType":"194","messageId":"195","endLine":37,"endColumn":16},{"ruleId":"179","severity":1,"message":"196","line":46,"column":10,"nodeType":"181","messageId":"182","endLine":46,"endColumn":27},{"ruleId":"179","severity":1,"message":"197","line":2,"column":24,"nodeType":"181","messageId":"182","endLine":2,"endColumn":34},{"ruleId":"179","severity":1,"message":"198","line":11,"column":20,"nodeType":"181","messageId":"182","endLine":11,"endColumn":34},{"ruleId":"179","severity":1,"message":"199","line":10,"column":7,"nodeType":"181","messageId":"182","endLine":10,"endColumn":20},{"ruleId":"179","severity":1,"message":"200","line":52,"column":19,"nodeType":"181","messageId":"182","endLine":52,"endColumn":30},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"179","severity":1,"message":"205","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":25},{"ruleId":"179","severity":1,"message":"205","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":25},{"ruleId":"179","severity":1,"message":"205","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":25},{"ruleId":"179","severity":1,"message":"206","line":1,"column":27,"nodeType":"181","messageId":"182","endLine":1,"endColumn":36},{"ruleId":"179","severity":1,"message":"207","line":6,"column":10,"nodeType":"181","messageId":"182","endLine":6,"endColumn":15},{"ruleId":"179","severity":1,"message":"208","line":7,"column":5,"nodeType":"181","messageId":"182","endLine":7,"endColumn":13},{"ruleId":"209","severity":1,"message":"210","line":25,"column":65,"nodeType":"211","messageId":"212","endLine":25,"endColumn":67},{"ruleId":"179","severity":1,"message":"205","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":25},{"ruleId":"179","severity":1,"message":"205","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":25},"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'UserAddOutlined' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'LoginOutlined' is defined but never used.","'LogoutOutlined' is defined but never used.","'AppButton' is defined but never used.","'BlurDiv' is defined but never used.","no-dupe-keys","Duplicate key 'textColor'.","ObjectExpression","unexpected","'SelectedEndedData' is assigned a value but never used.","'formatDate' is defined but never used.","'ChangegetEvent' is assigned a value but never used.","'InfoContainer' is assigned a value but never used.","'ChangeURLPH' is assigned a value but never used.","no-native-reassign",["213"],"no-negated-in-lhs",["214"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Title' is defined but never used.","'todayStr' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]