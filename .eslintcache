[{"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\index.js":"1","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\App.js":"2","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\serviceWorker.js":"3","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\API\\Weather.js":"4","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\Calendar.js":"5","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Login\\Login.js":"6","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Notes\\Notes.js":"7","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Signup\\Signup.js":"8","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\API\\API.js":"9","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\CalendarCollection1.js":"10","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Signup\\SignupForm.js":"11","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Login\\LoginForm.js":"12","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Footer.js":"13","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\NavBar.js":"14","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\UserInput.js":"15","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\BlurDiv.js":"16","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Notes\\Note\\Note.js":"17","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Notes\\CreateNote\\CreateNote.js":"18","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\CalendarForm1.js":"19","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Modal.js":"20","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Button.js":"21","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\UserIcon.js":"22","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Switch.js":"23","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Schedule1.js":"24","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\TextArea.js":"25","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\event-utils.js":"26","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DropDownContainer.js":"27","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\InputContainer.js":"28","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\SubmitButton1.js":"29","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\DateSelected.js":"30","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\TimeSelected.js":"31","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\OptionsForm.js":"32","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Select.js":"33"},{"size":497,"mtime":1612966679861,"results":"34","hashOfConfig":"35"},{"size":2594,"mtime":1612967108995,"results":"36","hashOfConfig":"35"},{"size":5227,"mtime":1612966679862,"results":"37","hashOfConfig":"35"},{"size":1136,"mtime":1612967108994,"results":"38","hashOfConfig":"35"},{"size":491,"mtime":1612967108996,"results":"39","hashOfConfig":"35"},{"size":479,"mtime":1612966679842,"results":"40","hashOfConfig":"35"},{"size":2053,"mtime":1612967109020,"results":"41","hashOfConfig":"35"},{"size":484,"mtime":1612966679848,"results":"42","hashOfConfig":"35"},{"size":327,"mtime":1612966679834,"results":"43","hashOfConfig":"35"},{"size":2850,"mtime":1612983409216,"results":"44","hashOfConfig":"35"},{"size":8915,"mtime":1612967109021,"results":"45","hashOfConfig":"35"},{"size":3822,"mtime":1612966679843,"results":"46","hashOfConfig":"35"},{"size":521,"mtime":1612966679854,"results":"47","hashOfConfig":"35"},{"size":3249,"mtime":1612967109024,"results":"48","hashOfConfig":"35"},{"size":4362,"mtime":1612967109028,"results":"49","hashOfConfig":"35"},{"size":543,"mtime":1612966679850,"results":"50","hashOfConfig":"35"},{"size":6058,"mtime":1612967109018,"results":"51","hashOfConfig":"35"},{"size":6099,"mtime":1612966679845,"results":"52","hashOfConfig":"35"},{"size":3558,"mtime":1612982622739,"results":"53","hashOfConfig":"35"},{"size":3512,"mtime":1612967109023,"results":"54","hashOfConfig":"35"},{"size":2970,"mtime":1612967109022,"results":"55","hashOfConfig":"35"},{"size":965,"mtime":1612966679859,"results":"56","hashOfConfig":"35"},{"size":4700,"mtime":1612967109026,"results":"57","hashOfConfig":"35"},{"size":3258,"mtime":1612983409216,"results":"58","hashOfConfig":"35"},{"size":3062,"mtime":1612966679858,"results":"59","hashOfConfig":"35"},{"size":398,"mtime":1612966679840,"results":"60","hashOfConfig":"35"},{"size":7807,"mtime":1612983409216,"results":"61","hashOfConfig":"35"},{"size":4731,"mtime":1612967109011,"results":"62","hashOfConfig":"35"},{"size":1769,"mtime":1612967944331,"results":"63","hashOfConfig":"35"},{"size":6362,"mtime":1612967109006,"results":"64","hashOfConfig":"35"},{"size":4516,"mtime":1612967109008,"results":"65","hashOfConfig":"35"},{"size":3322,"mtime":1612967109007,"results":"66","hashOfConfig":"35"},{"size":3210,"mtime":1612967109025,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1u0q2q7",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"70"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\index.js",[],["146","147"],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\App.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\serviceWorker.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\API\\Weather.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\Calendar.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Login\\Login.js",["148"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Nav from \"../../UI/NavBar\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport BlurDiv from \"../../UI/BlurDiv\";\r\n\r\nconst Login = (props) => {\r\n  return (\r\n    <div>\r\n      <BlurDiv blurDegree={\"1.4px\"}/>\r\n      <Nav ColorChanged={props.colorchanged} RecieveColor={props.Color}/>\r\n      <LoginForm ColorChanged={props.colorchanged} RecieveColor={props.Color}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Notes\\Notes.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Signup\\Signup.js",["149"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Nav from \"../../UI/NavBar\";\r\nimport SignupForm from \"./SignupForm\";\r\nimport BlurDiv from \"../../UI/BlurDiv\";\r\n\r\nconst Signup = (props) => {\r\n  return (\r\n    <div>\r\n      <BlurDiv blurDegree={\"1.4px\"}/>\r\n      <Nav ColorChanged={props.colorchanged} RecieveColor={props.Color}/>\r\n      <SignupForm ColorChanged={props.colorchanged} RecieveColor={props.Color}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\API\\API.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\CalendarCollection1.js",["150","151","152"],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Signup\\SignupForm.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Login\\LoginForm.js",["153"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { MailOutlined, KeyOutlined, LoginOutlined, UserAddOutlined} from \"@ant-design/icons\";\r\nimport UserInput from \"../../UI/UserInput\";\r\nimport NoteContainer from '../../UI/Modal';\r\nimport Button from \"../../UI/Button\";\r\nimport FadeIn  from \"react-fade-in\";\r\n\r\n\r\nconst InfoContainer = styled.div`\r\n    width: 440px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    margin: 4px;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nconst SignupForm = (props) => {\r\n    const IconColor = { \r\n        color : props.RecieveColor.IconC, \r\n        fontSize:\"25px\", \r\n        marginRight:\"9px\", \r\n        marginTop:\"4px\" }\r\n    \r\n    const ButtonIconColor = { \r\n        color : props.RecieveColor.IconC, \r\n        fontSize:\"20px\", \r\n        marginRight:\"9px\", \r\n        marginTop:\"4px\" }\r\n\r\n    const Email = <InfoContainer>\r\n            <FadeIn><MailOutlined style={IconColor}/></FadeIn>\r\n            <FadeIn><UserInput \r\n            inputType={\"text\"}\r\n            name=\"title\"\r\n            PlaceholderValue={\"E-mail\"}\r\n            widthValue={\"380px\"}\r\n            paddingVale={\"4px\"}\r\n            outlineValue={\"none\"}\r\n            fontSizeValue={\"1.2em\"}\r\n            fontFamilyValue={\"inherit\"}\r\n            IsCalledValue={\"FOCUS\"} \r\n            borderRadiusValue= {\"7px\"}\r\n            backGroundColorValue={props.RecieveColor.UserInputBGC}\r\n            FontColorValue={props.RecieveColor.UserInputFC}\r\n            PlaceHolderColorValue={props.RecieveColor.UserInputPHC}\r\n            borderColorValue={props.RecieveColor.BorderColor}\r\n            BorderValue={\"solid\"}\r\n            borderWidthValue=\"thin\"\r\n            marginRightValue={\"10px\"}\r\n            /></FadeIn>\r\n        </InfoContainer>\r\n    \r\n    const PassWord = <InfoContainer>\r\n            <FadeIn><KeyOutlined style={IconColor}/></FadeIn>\r\n            <FadeIn><UserInput \r\n            inputType={\"text\"}\r\n            name=\"title\"\r\n            PlaceholderValue={\"Password\"}\r\n            widthValue={\"380px\"}\r\n            paddingVale={\"4px\"}\r\n            outlineValue={\"none\"}\r\n            fontSizeValue={\"1.2em\"}\r\n            fontFamilyValue={\"inherit\"}\r\n            IsCalledValue={\"FOCUS\"} \r\n            borderRadiusValue= {\"7px\"}\r\n            backGroundColorValue={props.RecieveColor.UserInputBGC}\r\n            FontColorValue={props.RecieveColor.UserInputFC}\r\n            PlaceHolderColorValue={props.RecieveColor.UserInputPHC}\r\n            borderColorValue={props.RecieveColor.BorderColor}\r\n            BorderValue={\"solid\"}\r\n            borderWidthValue=\"thin\"\r\n            marginRightValue={\"10px\"}\r\n            /></FadeIn>\r\n        </InfoContainer>\r\n   \r\n   const LoginButton = <FadeIn>\r\n            <Button\r\n            width={\"120px\"}\r\n            marginBottomValue={\"10px\"}\r\n            marginLeftValue={\"35%\"}\r\n            fontSizeValue={\"20px\"}\r\n            borderRadiusValue={\"15px\"}\r\n            backGroundColorValue={props.RecieveColor.LogSignColor}\r\n            FontColorValue={props.RecieveColor.IconC}\r\n            borderColorValue={props.RecieveColor.BorderColor}\r\n            BorderValue=\"solid\"\r\n            borderWidthValue=\"thin\"\r\n            paddingInputValue=\"2px\"\r\n            text = {\"Login\"} \r\n            icon = {<LoginOutlined style={ButtonIconColor}/>}\r\n            />\r\n        </FadeIn>\r\n\r\nreturn (\r\n    <FadeIn><NoteContainer\r\n    position= {\"relative\"}\r\n    width= {\"450px\"}\r\n    margin= {\"300px auto 20px auto\"}\r\n    padding= {\"15px\"}\r\n    boxShadowValue= {\"0 1px 5px rgb(138, 137, 137)\"}\r\n    borderRadiusValue= {\"20px\"}\r\n    resizeValue={\"both\"}\r\n    backGroundColorValue={props.RecieveColor.NotekBGC}\r\n    >\r\n        {Email}\r\n        {PassWord}\r\n        {LoginButton}\r\n    </NoteContainer></FadeIn>\r\n)\r\n};\r\n\r\nexport default SignupForm; ","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Footer.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\NavBar.js",["154","155","156"],"import React, {useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SwitchIcon from './Switch'\r\nimport FadeIn from 'react-fade-in';\r\nimport UserIcon from \"./UserIcon\";\r\nimport { LoginOutlined, LogoutOutlined,AlipayOutlined } from \"@ant-design/icons\";\r\nimport AppButton from \"./Button\";\r\nimport NotesIcon from '@material-ui/icons/Notes';\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\r\nimport NoteAddOutlinedIcon from '@material-ui/icons/NoteAddOutlined';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst StyledNavBar = styled(FadeIn)` \r\n    align-items: center; \r\n    justify-content: space-between;\r\n    height: 50px;\r\n    background-color: #f5ba13;\r\n    margin: auto -16px;\r\n    padding: 16px 32px;\r\n    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.3);\r\n    display: flex;\r\n`;\r\nconst DisplayedUsername = styled.span`\r\n  align-items: center;\r\n  transform: translate(0, 30%);\r\n  color: ${(props) => ( props.TextColorInput ? props.TextColorInput : \"\")};\r\n  margin-top: 1px;\r\n`;\r\nconst RightNavBarItems = styled.div`\r\n  display: flex;\r\n  width: 500px;\r\n  justify-content: flex-end;\r\n`;\r\nconst LeftNavBarItems = styled.div`\r\n  display: flex;\r\n  width: 450px;\r\n  justify-content: flex-start;\r\n`;\r\nconst NavBar = (props) => {\r\n  const IconStyle = {\r\n    marginLeft: \"5px\",\r\n    fontSize: \"28px\" ,\r\n    color: props.RecieveColor.NavIconColor\r\n  }\r\n  //Close is not hovered on color style\r\n  const VisibilityStle1 = {\r\n    marginTop: \"13px\",\r\n    marginRight: \"8px\",\r\n    fontSize: \"28px\",\r\n    color: props.RecieveColor.NavIconColor\r\n };\r\n  //Close is hovered on color style\r\n  const VisibilityStle2 = {\r\n      marginTop: \"13px\",\r\n      marginRight: \"4px\",\r\n      fontSize: \"34px\",\r\n      color: props.RecieveColor.NavIconColor\r\n  };\r\n  //This is for change to calendar link\r\n  const [isCalendar, ChangeIsCalendar] = useState(true);\r\n  const GoToCalendar = isCalendar ? \r\n      (<CalendarTodayIcon onMouseEnter={() => ChangeIsCalendar(false)} style={VisibilityStle1} />)  \r\n      : \r\n      (<Link to={\"/calendar\"}> \r\n        <EventAvailableIcon  onMouseLeave={() => ChangeIsCalendar(true)} style={VisibilityStle2} />\r\n        </Link>)\r\n    \r\n  //This is for change to Notes link\r\n  const [isNote, ChangeIsNote] = useState(true);\r\n  const GoToNote = isNote ? \r\n      (<NoteAddOutlinedIcon onMouseEnter={() => ChangeIsNote(false)} style={VisibilityStle1} />)  \r\n      : \r\n      (<Link to={\"/notes\"} >\r\n      <NotesIcon   onMouseLeave={() => ChangeIsNote(true)} style={VisibilityStle2} />\r\n      </Link>)\r\n\r\n  return(\r\n    <StyledNavBar>\r\n      <LeftNavBarItems>\r\n        <FadeIn><AlipayOutlined style={IconStyle}/></FadeIn>\r\n      </LeftNavBarItems>\r\n\r\n      <RightNavBarItems>\r\n        {GoToCalendar}\r\n        {GoToNote}\r\n        <SwitchIcon OnChangedColor={props.ColorChanged}/>\r\n        <UserIcon username={\"Amr R. Mohamed\"} OnChangedColor={props.RecieveColor}/>\r\n        <DisplayedUsername \r\n          TextColorInput={props.RecieveColor.UserIconTextColor}>\r\n          <span style={{ fontWeight: \"bold\"}}>{\"Amr R. Mohamed\"}</span>\r\n        </DisplayedUsername>\r\n      </RightNavBarItems>\r\n    </StyledNavBar>\r\n  ) \r\n}\r\n\r\n\r\n\r\n\r\nexport default NavBar;","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\UserInput.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\BlurDiv.js",["157"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\n{/* <BlurDiv style={{ height: \"100%\" }} blurDegree={\"3px\"}>\r\n<StyledImage src={backgroundImage} alt=\"oops\" />\r\n</BlurDiv> */}\r\n\r\n\r\nconst StyledBlurDiv = styled.div`\r\nbackdrop-filter: blur(${(props) => props.blurDegree});\r\nposition: absolute;\r\nheight: 100%;\r\nwidth: 100%;\r\n`;\r\n\r\nconst BlurDiv = (props) => {\r\n  return (\r\n    <StyledBlurDiv style={props.style} blurDegree={props.blurDegree}>\r\n      {props.children}\r\n    </StyledBlurDiv>\r\n  );\r\n};\r\n\r\nexport default BlurDiv;\r\n","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Notes\\Note\\Note.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Notes\\CreateNote\\CreateNote.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\CalendarForm1.js",["158","159","160"],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Modal.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Button.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\UserIcon.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Switch.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Schedule1.js",["161","162","163","164","165","166","167","168","169","170","171"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport NoteContainer from \"../../../UI/Modal\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport {TitleContainer,DescriptionContainer,URLContainer} from \"./Containers/InputContainer\";\r\nimport {CalenderContianer,TimerContainer} from \"./Containers/DropDownContainer\";\r\nimport SubmitButton from \"./Containers/SubmitButton1\";\r\nimport { CloseOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\r\n\r\nconst InfoContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    position: fixed;\r\n    z-index: 5;\r\n    left: 0;\r\n    top: 0'\r\n    background-color: rgba(0,0,0, 0.5)\r\n`;\r\n\r\nconst Schedule = (props) => {\r\n\r\n    //Closed Button\r\n    const [isClode, ChangeIsClosed] = useState(true);\r\n    const CloseIcon = isClode \r\n        ? \r\n        (<CloseOutlined\r\n            onMouseEnter={() => ChangeIsClosed(false)}\r\n            style={{marginRight: \"4px\", marginLeft: \"95%\", marginBottom: \"15px\",\r\n                fontSize: \"21px\", color: props.ScheduleColor.IconC}}\r\n        />)\r\n        : \r\n        (<CloseCircleOutlined\r\n            onClick={() => props.CallingCalendar(false)}\r\n            onMouseLeave={() => ChangeIsClosed(true)}\r\n            style={{marginRight: \"4px\", marginLeft: \"95%\", marginBottom: \"15px\",\r\n                fontSize: \"26px\", color: props.ScheduleColor.IconC}}\r\n        />);\r\n\r\n    //Title Area\r\n    const [getTitle, ChangeTitle] = useState(\"\");\r\n    const [TitlePH, ChangeTitlePH] = useState(\"Title ...\");\r\n    const Title = <TitleContainer\r\n            SubmitTitle={(value) => ChangeTitle(value)}\r\n            SubmitTitlePlaceHolder={TitlePH}\r\n            ScheduleColor={props.ScheduleColor}\r\n        />  \r\n    \r\n    // Data From and To\r\n    const [getFormDate, ChangeFormDate] = useState();\r\n    const [getToDate, ChangeToDate] = useState();\r\n    const [StartDate, ChangeClickedStartDate] = useState(props.StartDateClicked); //This is the selected data in calendar\r\n    const [EndDate, ChangeClickedEndDate] = useState(props.EndDateClicked); //This is the selected data in calendar\r\n    const Data = (\r\n        <CalenderContianer\r\n        GetFromDate={(value) => ChangeFormDate(value)}\r\n        GetToDate={(value) => ChangeToDate(value)}\r\n        RetrunClickedDate={StartDate}\r\n        RetrunClickedEndDate={EndDate}\r\n        ScheduleColor={props.ScheduleColor}\r\n        />\r\n    );\r\n\r\n    //Submit Buton \r\n    const Submit = (\r\n        <SubmitButton \r\n            isCallingCalendar={value=> props.CallingCalendar(value)}\r\n        />\r\n    );\r\n    const ScheduleForm = (\r\n        <FadeIn>\r\n            <NoteContainer\r\n                position={\"relative\"}\r\n                width={\"520px\"}\r\n                margin={\"30px auto 20px auto\"}\r\n                padding={\"15px\"}\r\n                boxShadowValue={\"0 1px 5px rgb(138, 137, 137)\"}\r\n                borderRadiusValue={\"7px\"}\r\n                resizeValue={\"both\"}\r\n                backGroundColorValue={props.ScheduleColor.NotekBGC}\r\n                FontColorValue={props.ScheduleColor.NoteFC}\r\n                >\r\n            {CloseIcon}\r\n            {Title} \r\n            {Submit}\r\n            </NoteContainer> \r\n        </FadeIn>\r\n    );\r\n\r\n  return ScheduleForm;\r\n};\r\n\r\nexport default Schedule;\r\n","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\TextArea.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\event-utils.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DropDownContainer.js",["172","173"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\"; \r\nimport FadeIn  from 'react-fade-in'; \r\nimport { CalendarOutlined , ClockCircleOutlined} from \"@ant-design/icons\"; \r\nimport DateSelected from './DataCollection/DateSelected';\r\nimport TimeSelected from './DataCollection/TimeSelected';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility'\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport { createEventId } from \"../../event-utils\";\r\n\r\nconst InfoContainer = styled.div`\r\n    width: 440px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    margin: 4px;\r\n    margin-bottom: 10px;\r\n`\r\nconst EachateContainer = styled.div`\r\n    width: 400px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    margin: 4px;\r\n`\r\nconst DateContainer = styled.div`\r\n    width: 400px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n`\r\n\r\n\r\nconst CalenderContianer = (props) => {\r\n    //All Component Color Stle\r\n    const IconColor = { \r\n        color : props.ScheduleColor.IconC, \r\n        fontSize:\"25px\", \r\n        marginRight:\"15px\", \r\n        marginTop:\"4px\" \r\n    }\r\n\r\n    //Visable and unvisable color style \r\n    const VisibilityStle = {\r\n        marginRight: \"4px\", \r\n        marginLeft:\"4px\",\r\n        marginTop:\"6px\" , \r\n        fontSize: \"21px\", \r\n        color : props.ScheduleColor.IconC\r\n    }\r\n    \r\n    // This is a togole to change the state of the disabled and to change the icion as well \r\n    const [isClicked, ChangeisClicked] = useState(true)\r\n\r\n    //This is for the layout for Year Month Days\r\n    const Layout = ['','Year','Month','Day']\r\n\r\n    //the date that the user clicked on to have it go to the data collection and have the same number \r\n    const [recievedClickedDate, ChangeRecievedClickedDate] = useState(props.RetrunClickedDate)\r\n    //Dividing the Recieved Date to Year Month Day and Send them to DateSelected\r\n    const RecievedYear = recievedClickedDate[0]\r\n    const RecievedMonth = recievedClickedDate[1]\r\n    const RecievedDay = recievedClickedDate[2]\r\n    // =====> TO\r\n    //the date that the user clicked on to have it go to the data collection and have the same number \r\n    const [recievedClickedDateTo, ChangeRecievedClickedDateTo] = useState(props.RetrunClickedEndDate)\r\n    //Dividing the Recieved Date to Year Month Day and Send them to DateSelected\r\n    const RecievedToYear = recievedClickedDateTo[0]\r\n    const RecievedToMonth = recievedClickedDateTo[1]\r\n    const RecievedToDay = recievedClickedDateTo[2]\r\n\r\n    //All the needed information for craeting the date From \r\n    const [fromData, ChangeFromDate] = useState(\"\") \r\n    const [ToData, ChangeToDate] = useState()\r\n\r\n    //This is the returned Date to the calendar\r\n    const calendar = <InfoContainer>\r\n        <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-start\"}}>\r\n        <FadeIn><CalendarOutlined style={IconColor}/>  </FadeIn>\r\n        <FadeIn><div style={{marginTop: \"40px\"}} onClick={()=>ChangeisClicked(!isClicked)}>\r\n                    {isClicked ?  <VisibilityOffIcon style={VisibilityStle} /> : <VisibilityIcon style={VisibilityStle} />}\r\n                </div></FadeIn>\r\n        </div>\r\n        <DateContainer>\r\n            <EachateContainer>\r\n                {Layout.map((value, index) => <FadeIn><span key={index+ createEventId()} style={{ padding: \"1px\" ,paddingTop: \"1px\" , fontSize: \"1.2em\", marginRight: \"30px\"}}>{value}</span></FadeIn> ) }\r\n            </EachateContainer>\r\n            <EachateContainer>\r\n                <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"1px\"}}>From</span></FadeIn>\r\n                <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"1px\"}}>From</span></FadeIn>\r\n                <DateSelected\r\n                    //These are used to send these data to DataSlected to be used for Year, Month, Day \r\n                    ReturnFrom=\"From\"\r\n                    ReturnClickedFromYear={RecievedYear}\r\n                    ReturnClickedFromMonth={RecievedMonth} \r\n                    ReturnClickedFromDay={RecievedDay}\r\n                    name=\"start\"\r\n                    // gethandler={props.test}\r\n                    //The incoming dating is used to chagne the format of the date and then send that number to submission button\r\n                    submitDateValue={(value) => ChangeFromDate(value)} \r\n                    RecievedColor={props.ScheduleColor}\r\n                />\r\n            </EachateContainer>\r\n            <EachateContainer>\r\n                <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"25px\"}}>To </span></FadeIn>\r\n\r\n                <DateSelected \r\n                    //These are used to send these data to DataSlected to be used for Year, Month, Day \r\n                    ReturnFrom=\"To\"\r\n                    ReturnClickedToYear={RecievedToYear} \r\n                    ReturnClickedToMonth={RecievedToMonth} \r\n                    ReturnClickedToDay={RecievedToDay}\r\n                    name=\"end\"\r\n                    //this is to disable the values that are inside and it is going to DataSelected\r\n                    DisabledisClicked={isClicked} \r\n                    submitDateValue={(value) => ChangeToDate(value)} \r\n                    RecievedColor={props.ScheduleColor}\r\n                />\r\n            </EachateContainer>\r\n        </DateContainer>\r\n    </InfoContainer>\r\n\r\n    //To recieve a prop that will change the value from and to inside the schedule form to the value of From/to Date that has been created here  \r\n    props.GetFromDate(fromData)\r\n    props.GetToDate(ToData)\r\n    \r\n    return(calendar)\r\n}\r\n\r\nconst TimerContainer = (props) => {\r\n    //All Component Color Stle\r\n    const IconColor = { \r\n        color : props.ScheduleColor.IconC, \r\n        fontSize:\"25px\", \r\n        marginRight:\"15px\", \r\n        marginTop:\"4px\"\r\n    }\r\n    \r\n    //Visable and unvisable color style \r\n    const VisibilityStle = {\r\n        marginRight: \"4px\", \r\n        marginLeft:\"4px\",\r\n        marginTop:\"6px\" , \r\n        fontSize: \"21px\", \r\n        color : props.ScheduleColor.IconC\r\n    }\r\n\r\n    // This is a togole to change the state of the disabled and to change the icion as well \r\n    const [isClicked, ChangeisClicked] = useState(true)\r\n    \r\n    //this is the part where we change the icon based on clicking the div \r\n    const ShowData = <div onClick={()=>ChangeisClicked(!isClicked)}>\r\n        {isClicked ?  <VisibilityOffIcon style={VisibilityStle} /> : <VisibilityIcon style={VisibilityStle} />}\r\n    </div>\r\n    //This is for the layout for Hour Minuts Day system\r\n    const Layout = ['','Hour','Minuts','AM / PM']\r\n\r\n    const [StartHoursValue, ChangeStartHourValue ]= useState()\r\n    const [StartMinutsValue, ChangeStartMinutsValue ]= useState()\r\n    const [StartDayValue, ChangeStartDayValue ]= useState()\r\n    const [EndHoursValue, ChangeEndHourValue ]= useState()\r\n    const [EndMinutsValue, ChangeEndMinutsValue ]= useState()\r\n    const [EndDayValue, ChangeEndDayValue ]= useState()\r\n    \r\n    const time =<InfoContainer>\r\n        <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-start\"}}>\r\n            <FadeIn><ClockCircleOutlined style={IconColor}/>  </FadeIn>\r\n            <FadeIn>{ShowData}</FadeIn>\r\n        </div>\r\n        <DateContainer>\r\n            <EachateContainer>\r\n                {Layout.map((value, index) =><FadeIn><span  key={index+ createEventId()} style={{ padding: \"1px\" ,paddingTop: \"1px\" , fontSize: \"1.2em\", marginRight: \"1px\"}}>{value}</span></FadeIn> ) }\r\n            </EachateContainer>\r\n            <EachateContainer>\r\n                <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"5px\"}}>Start</span></FadeIn>\r\n                <TimeSelected \r\n                    submitHourValue={(value) => ChangeStartHourValue(value)}\r\n                    submitMinutsValue={(value) => ChangeStartMinutsValue(value)}\r\n                    submitDayValue={(value) => ChangeStartDayValue(value)}\r\n                    RecievedColor={props.ScheduleColor}\r\n                    //this is to disable the values that are inside and it is going to DataSelected\r\n                    DisabledisClicked={isClicked} \r\n                    />\r\n            </EachateContainer>\r\n            <EachateContainer>\r\n                <FadeIn><span style={{ padding: \"4px\" , fontSize: \"1.2em\", marginRight: \"12px\"}}>End</span></FadeIn>\r\n                <TimeSelected \r\n                    submitHourValue={(value) => ChangeEndHourValue(value)}\r\n                    submitMinutsValue={(value) => ChangeEndMinutsValue(value)}\r\n                    submitDayValue={(value) => ChangeEndDayValue(value)}\r\n                    RecievedColor={props.ScheduleColor}\r\n                    //this is to disable the values that are inside and it is going to DataSelected\r\n                    DisabledisClicked={isClicked} \r\n                    />\r\n            </EachateContainer>\r\n        </DateContainer>\r\n        </InfoContainer>\r\n\r\n    props.FromHourSelected(StartHoursValue)\r\n    props.ToHourlected(EndHoursValue)\r\n    props.FromMinutsSelected(StartMinutsValue)\r\n    props.ToMinutsSelected(EndMinutsValue)\r\n    props.FromDayValueSelected(StartDayValue)\r\n    props.ToDayValueSelected(EndDayValue)\r\n\r\n    return (time)\r\n}\r\n\r\nexport  {CalenderContianer, TimerContainer};","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\InputContainer.js",["174"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport UserInput from '../../../../UI/UserInput'\r\nimport TextArea from '../../../../UI/TextArea';\r\nimport FadeIn  from 'react-fade-in';\r\nimport { LinkOutlined} from \"@ant-design/icons\";\r\nimport { Title } from '@material-ui/icons';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nconst InfoContainer = styled.div`\r\n    width: 440px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    margin: 4px;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nconst TitleContainer = (props) => {\r\n    const IconColor = { \r\n        color : props.ScheduleColor.IconC, \r\n        fontSize:\"25px\", \r\n        marginRight:\"15px\", \r\n        marginTop:\"4px\" \r\n    } \r\n    const title = <InfoContainer>\r\n        <FadeIn><Title style={IconColor}/></FadeIn>\r\n        <FadeIn><UserInput \r\n        key={`title` + 1}\r\n        // This is to change the Value of Title based on the input coming from schedule\r\n        onchangeValue={(event)=>props.SubmitTitle(event.target.value)}\r\n        //This is the Props that is coming from Schedule From once I click on submit\r\n        PlaceholderValue={props.SubmitTitlePlaceHolder}\r\n        name=\"title\"\r\n        inputType={\"text\"} \r\n        widthValue={\"425px\"}\r\n        paddingVale={\"4px\"}\r\n        outlineValue={\"none\"}\r\n        fontSizeValue={\"1.2em\"}\r\n        fontFamilyValue={\"inherit\"}\r\n        IsCalledValue={\"FOCUS\"} \r\n        borderRadiusValue= {\"7px\"}\r\n        backGroundColorValue={props.ScheduleColor.UserInputBGC}\r\n        FontColorValue={props.ScheduleColor.UserInputFC}\r\n        PlaceHolderColorValue={props.ScheduleColor.UserInputPHC}\r\n        borderColorValue={props.ScheduleColor.BorderColor}  \r\n        BorderValue={\"solid\"}\r\n        borderWidthValue=\"thin\"\r\n        marginRightValue={\"10px\"}\r\n        /></FadeIn>\r\n    </InfoContainer>\r\n\r\n    return(title)\r\n}\r\n\r\nconst DescriptionContainer = (props) => {\r\n    const IconColor = { \r\n        color : props.ScheduleColor.IconC, \r\n        fontSize:\"25px\", \r\n        marginRight:\"15px\", \r\n        marginTop:\"4px\" \r\n    }\r\n    const Description = <InfoContainer>\r\n        <FadeIn><DescriptionIcon style={IconColor}/></FadeIn>\r\n        <FadeIn><TextArea\r\n        key={`Description`+1} \r\n        // This is to change the Value of Title based on the input \r\n        onchangeValue={(event)=>props.SubmitDescription(event.target.value)}\r\n        //This is the Props that is coming from Schedule From once I click on submit\r\n        PlaceholderValue={props.SubmitDescriptionPlaceHolder}\r\n        rows={3}\r\n        name=\"Description\"\r\n        inputType={\"text\"} \r\n        widthValue={\"425px\"}\r\n        paddingVale={\"4px\"}\r\n        outlineValue={\"none\"}\r\n        fontSizeValue={\"1.2em\"}\r\n        fontFamilyValue={\"inherit\"}\r\n        IsCalledValue={\"FOCUS\"} \r\n        borderRadiusValue= {\"7px\"}\r\n        backGroundColorValue={props.ScheduleColor.UserInputBGC}\r\n        FontColorValue={props.ScheduleColor.UserInputFC}\r\n        PlaceHolderColorValue={props.ScheduleColor.UserInputPHC}\r\n        borderColorValue={props.ScheduleColor.BorderColor}  \r\n        BorderValue={\"solid\"}\r\n        resizeValue={\"vertical\"}\r\n        borderWidthValue=\"thin\"\r\n        marginRightValue={\"10px\"}\r\n        /></FadeIn>\r\n    </InfoContainer>\r\n\r\n\r\n    return (Description)\r\n}\r\n\r\nconst URLContainer = (props) => {\r\n    const IconColor = { \r\n        color : props.ScheduleColor.IconC, \r\n        fontSize:\"25px\", \r\n        marginRight:\"15px\", \r\n        marginTop:\"4px\" \r\n    }\r\n    const URL = <InfoContainer>\r\n        <FadeIn><LinkOutlined style={IconColor}/></FadeIn>\r\n        <FadeIn><UserInput \r\n        key={`AttachedLinkDescription` }\r\n        // This is to change the Value of Title based on the input \r\n        onchangeValue={(event)=>props.URLOption(event.target.value)}\r\n        //This is the Props that is coming from Schedule From once I click on submit\r\n        PlaceholderValue={props.SubmitURLPH}\r\n        name=\"Url\"\r\n        inputType={\"text\"} \r\n        widthValue={\"425px\"}\r\n        paddingVale={\"4px\"}\r\n        outlineValue={\"none\"}\r\n        fontSizeValue={\"1.2em\"}\r\n        fontFamilyValue={\"inherit\"}\r\n        IsCalledValue={\"FOCUS\"} \r\n        borderRadiusValue= {\"7px\"}\r\n        backGroundColorValue={props.ScheduleColor.UserInputBGC}\r\n        FontColorValue={props.ScheduleColor.UserInputFC}\r\n        PlaceHolderColorValue={props.ScheduleColor.UserInputPHC}\r\n        borderColorValue={props.ScheduleColor.BorderColor}    \r\n        BorderValue={\"solid\"}\r\n        borderWidthValue=\"thin\"\r\n        marginRightValue={\"10px\"}\r\n        /></FadeIn>\r\n    </InfoContainer>\r\n\r\n\r\n    return (URL)\r\n}\r\n\r\nexport  {TitleContainer, DescriptionContainer, URLContainer};","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\SubmitButton1.js",["175","176","177","178","179"],"import React, { useState, useEffect } from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport { LoginOutlined } from \"@ant-design/icons\";\r\nimport Button from \"../../../../UI/Button\";\r\nimport { createEventId } from \"../../event-utils\";\r\nimport { Title } from \"@material-ui/icons\";\r\n\r\nconst SubmitButton = (props) => {\r\n  const ButtonIconColor = {\r\n    fontSize: \"20px\",\r\n    marginRight: \"9px\",\r\n    marginTop: \"4px\",\r\n  };\r\n  // // const CreateEvent = { \r\n    //   id: createEventId(),\r\n    //   title: isSubmit ? props.isTitle : \"\",\r\n    //   description: isSubmit ? props.isDescription : \"\",\r\n    //   Url: isSubmit ? props.isURL : \"\",\r\n    //   start: isSubmit ? props.isFromData : \"\",\r\n    //     end: \"2021-02-14\",\r\n    //     startTime: \"10:45:00\",\r\n    //     endTime: \"12:45:00\", \r\n    //   display: \"list-item\",\r\n    //   textColor: \"red\",\r\n    //     daysOfWeek: [\"1\"], //https://fullcalendar.io/docs/recurring-events\r\n    //     // daysOfWeek: [ '1','4','5' ], //https://fullcalendar.io/docs/recurring-events\r\n    // };\r\n\r\n  const subNote = () => { \r\n  };\r\n\r\n  const SubmitButton = (\r\n    <FadeIn>\r\n      <Button\r\n        width={\"120px\"}\r\n        marginBottomValue={\"10px\"}\r\n        marginLeftValue={\"35%\"}\r\n        fontSizeValue={\"20px\"}\r\n        borderRadiusValue={\"15px\"}\r\n        IsCalledValue={\"hover\"}\r\n        BorderValue=\"solid\"\r\n        borderWidthValue=\"thin\"\r\n        paddingInputValue=\"2px\"\r\n        onClick={()=>props.isCallingCalendar(false)}\r\n        text={\"Submit\"}\r\n        icon={<LoginOutlined style={ButtonIconColor} />}\r\n      />\r\n    </FadeIn>\r\n  );\r\n\r\n  // props.IsSubmistClicked(isSubmit); //This is values is used to send value that the submit button has been clicked\r\n\r\n  return SubmitButton;\r\n};\r\n\r\nexport default SubmitButton;\r\n","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\DateSelected.js",["180","181","182","183","184","185","186","187"],"import React, { useState } from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport SelectData from \"../../../../../UI/Select\";\r\nimport {\r\n  NumberOfYearsValue,\r\n  NumberOfMonthsValue,\r\n  NumberOfDaysValue,\r\n} from \"./OptionsForm\";\r\nimport { createEventId } from \"../../../event-utils\";\r\n\r\nconst DateSelected = (props) => {\r\n  //This part is changed once the user click on the drop down to see other options\r\n  const [GetUserChangeYear, ChnageUserChangedYear] = useState(true);\r\n  /*\r\n        This part is chicking if the input that the user entered is what is wanted or not \r\n        Once the select is clicked then it will change to normal dropdown with input number \r\n    */\r\n  const [YearsValueInput, ChangeYearsValueInput] = useState(\r\n    GetUserChangeYear\r\n      ? props.ReturnFrom === \"From\"\r\n        ? props.ReturnClickedFromYear\r\n        : props.ReturnClickedToYear\r\n      : \"\"\r\n  );\r\n  const handleYears = (e) => (\r\n    ChangeYearsValueInput(e.target.value), ChnageUserChangedYear(false)\r\n  );\r\n  const Years = (\r\n    <FadeIn>\r\n      <SelectData\r\n        key={YearsValueInput + createEventId()}\r\n        value=\"as\"\r\n        PlaceholderValue=\"asdfas\"\r\n        inputType={\"text\"}\r\n        name={props.name == \"start\" ? \"start\" : \"end\"}\r\n        widthValue={\"112px\"}\r\n        paddingVale={\"4px\"}\r\n        outlineValue={\"none\"}\r\n        fontSizeValue={\"1.2em\"}\r\n        fontFamilyValue={\"inherit\"}\r\n        IsCalledValue={props.DisabledisClicked ? \"\" : \"FOCUS\"}\r\n        borderRadiusValue={\"7px\"}\r\n        backGroundColorValue={props.RecievedColor.UserInputBGC}\r\n        FontColorValue={props.RecievedColor.UserInputFC}\r\n        PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\r\n        borderColorValue={\r\n          props.DisabledisClicked ? \"#A9A9A9\" : props.RecievedColor.BorderColor\r\n        }\r\n        BorderValue={\"solid\"}\r\n        borderWidthValue={\"thin\"}\r\n        marginRightValue={\"15px\"}\r\n        onchangeValue={handleYears}\r\n        InputValue={YearsValueInput}\r\n      >\r\n        {\r\n          <NumberOfYearsValue\r\n            //this is the DisabledisClicked that is coming from DropDown to change every time we click on the icion\r\n            DisabledYear={props.DisabledisClicked}\r\n          />\r\n        }\r\n      </SelectData>\r\n    </FadeIn>\r\n  );\r\n\r\n  // This part is changed once the user click on the drop down to see other options\r\n  const [GetUserChangeMonth, ChnageUserChangedMonth] = useState(true);\r\n  /*\r\n        This part is chicking if the input that the user entered is what is wanted or not \r\n        Once the select is clicked then it will change to normal dropdown with input number \r\n    */\r\n  const [MonthsValueInput, ChangeMonthsValue] = useState(\r\n    GetUserChangeMonth\r\n      ? props.ReturnFrom === \"From\"\r\n        ? props.ReturnClickedFromMonth\r\n        : props.ReturnClickedToMonth\r\n      : \"\"\r\n  );\r\n  const handleMonths = (e) => (\r\n    ChangeMonthsValue(e.target.value), ChnageUserChangedMonth(false)\r\n  );\r\n  const Months = (\r\n    <FadeIn>\r\n      <SelectData\r\n        key={MonthsValueInput.id + createEventId()}\r\n        inputType={\"text\"}\r\n        name={props.name == \"start\" ? \"start\" : \"end\"}\r\n        widthValue={\"112px\"}\r\n        paddingVale={\"4px\"}\r\n        outlineValue={\"none\"}\r\n        fontSizeValue={\"1.2em\"}\r\n        fontFamilyValue={\"inherit\"}\r\n        IsCalledValue={props.DisabledisClicked ? \"\" : \"FOCUS\"}\r\n        borderRadiusValue={\"7px\"}\r\n        backGroundColorValue={props.RecievedColor.UserInputBGC}\r\n        FontColorValue={props.RecievedColor.UserInputFC}\r\n        PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\r\n        borderColorValue={\r\n          props.DisabledisClicked ? \"#A9A9A9\" : props.RecievedColor.BorderColor\r\n        }\r\n        BorderValue={\"solid\"}\r\n        borderWidthValue={\"thin\"}\r\n        marginRightValue={\"15px\"}\r\n        onchangeValue={handleMonths}\r\n        InputValue={MonthsValueInput}\r\n      >\r\n        {\r\n          <NumberOfMonthsValue\r\n            //this is the DisabledisClicked that is coming from DropDown to change every time we click on the icion\r\n            DisabledMonth={props.DisabledisClicked}\r\n          />\r\n        }\r\n      </SelectData>\r\n    </FadeIn>\r\n  );\r\n\r\n  // This part is changed once the user click on the drop down to see other options\r\n  const [GetUserChangeDay, ChnageUserChangedDay] = useState(true);\r\n  /*\r\n        This part is chicking if the input that the user entered is what is wanted or not \r\n        Once the select is clicked then it will change to normal dropdown with input number \r\n    */\r\n  const [DayValueInput, ChangeDayValue] = useState(\r\n    GetUserChangeDay\r\n      ? props.ReturnFrom === \"From\"\r\n        ? props.ReturnClickedFromDay\r\n        : props.ReturnClickedToDay\r\n      : \"\"\r\n  );\r\n  const handleDays = (e) => (\r\n    console.log(e.target),\r\n    ChangeDayValue(e.target.value), ChnageUserChangedDay(false)\r\n  );\r\n  const name = props.name == \"start\" ? \"start\" : \"end\"\r\n  const Days = (\r\n    <FadeIn>\r\n      <SelectData\r\n        key={DayValueInput.id  + createEventId()}\r\n        inputType={\"text\"}\r\n        name={props.name == \"start\" ? \"start\" : \"end\"}\r\n        widthValue={\"112px\"}\r\n        paddingVale={\"4px\"}\r\n        outlineValue={\"none\"}\r\n        fontSizeValue={\"1.2em\"}\r\n        fontFamilyValue={\"inherit\"}\r\n        IsCalledValue={props.DisabledisClicked ? \"\" : \"FOCUS\"}\r\n        borderRadiusValue={\"7px\"}\r\n        backGroundColorValue={props.RecievedColor.UserInputBGC}\r\n        FontColorValue={props.RecievedColor.UserInputFC}\r\n        PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\r\n        borderColorValue={\r\n          props.DisabledisClicked ? \"#A9A9A9\" : props.RecievedColor.BorderColor\r\n        }\r\n        BorderValue={\"solid\"}\r\n        borderWidthValue={\"thin\"}\r\n        marginRightValue={\"15px\"}\r\n        onchangeValue={handleDays}\r\n        InputValue={DayValueInput}\r\n      >\r\n        {\r\n          <NumberOfDaysValue\r\n            //this is the DisabledisClicked that is coming from DropDown to change every time we click on the icion\r\n            DisabledDay={props.DisabledisClicked}\r\n          />\r\n        }\r\n      </SelectData>\r\n    </FadeIn>\r\n  );\r\n\r\n  //this is submitted to DropDownContainer\r\n  props.submitDateValue(\r\n    YearsValueInput + \"-\" + MonthsValueInput + \"-\" + DayValueInput\r\n  );\r\n\r\n  return [Years, Months, Days];\r\n};\r\n\r\nexport default DateSelected;\r\n","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\TimeSelected.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\OptionsForm.js",["188"],"import React, { useState } from \"react\";\r\nimport { createEventId } from \"../../../event-utils\";\r\n\r\n//this is for the hour input \r\nconst HourValue = (props) => {\r\n\r\n    const Hours = ['01','02','03','04','05','06','07','08','09','10','11','12']\r\n    const DailyHours = (\r\n        [Hours.map((Hour, index) => \r\n            <option disabled={props.DisabledHour}  key={index.id + createEventId()} value={Hour}>{Hour}</option>)]\r\n        )\r\n    return(DailyHours)\r\n}\r\nconst MinutsValue = (props) => {\r\n\r\n    //this is for the hour input \r\n    const Minuts = ['05','10','15','20','25','30','35','40','45','50','55']\r\n    const DailyMinut =(\r\n        [Minuts.map((Minut, index) => \r\n            <option disabled={props.DisabledMinuts} key={index.id + createEventId()} value={Minut}>{Minut}</option>)]\r\n        )\r\n    return(DailyMinut)\r\n}\r\nconst TwelveHourSystemValue = (props) => {\r\n\r\n    //this for either AM or PM\r\n    const TwelveHourSystem = ['AM','PM']\r\n    const DayDivided =(\r\n        [TwelveHourSystem.map((DayTime, index) => \r\n            <option disabled={props.DisabledHourSystem} key={index.id + createEventId()} value={DayTime}>{DayTime}</option>)]\r\n        )\r\n    return(DayDivided)\r\n}\r\nconst NumberOfYearsValue = (props) => { \r\n    //this is for the years from this year \r\n    const NumberOfYears = [ '2020','2021', '2022', '2023', '2024','2025', '2026', \r\n                            '2027', '2028', '2029', '2030', '2031', '2032','2033', \r\n                            '2034','2035', '2036', '2037', '2038', '2039','2040']\r\n    const YearContainer = (\r\n        [NumberOfYears.map((year, index) => <option  disabled={props.DisabledYear}  key={index.id + createEventId()} value={year}>{year}</option>)]\r\n    )\r\n    \r\n    return(\r\n        YearContainer\r\n        )\r\n}\r\nconst NumberOfMonthsValue = (props) => { \r\n    //this is for the months in a year \r\n    const NumberOfMonths = ['01','02','03','04','05','06','07','08','09','10','11','12']\r\n    const MonthContainer = (\r\n        [NumberOfMonths.map((month, index) => <option disabled={props.DisabledMonth} key={index.id + createEventId()}  value={month}>{month}</option>)]\r\n        )\r\n    return(MonthContainer)\r\n}\r\nconst NumberOfDaysValue = (props) => { \r\n    //this is for the days in a Month \r\n    const NumberOfDays = ['01','02','03','04','05','06','07','08','09','10',\r\n                        '11','12','13','14','15','16','17','18','19','20',\r\n                        '21','22','23','24','25','26','27','28','29','30','31']\r\n    const DayContainer = (\r\n        [NumberOfDays.map((days,index ) => <option disabled={props.DisabledDay} key={index.id + createEventId()} value={days}>{days}</option>)]\r\n        )\r\n    return(DayContainer)\r\n}\r\nconst ColorOptionsValue = () => {\r\n\r\n    //this is for the days in a Month \r\n    const ColorChoose = ['Choose Color','BlueViolet','Black','CornflowerBlue','DarkMagenta','DimGrey',\r\n                            'DodgerBlue','Fuchsia','MidnightBlue','Purple','Salmon']\r\n    const ColorContainer = (\r\n        [ColorChoose.map((Colors,index ) => <option  key={index.id + createEventId()} value={Colors}>{Colors}</option>)]\r\n        )\r\n    return(ColorContainer)\r\n}\r\n\r\nexport {HourValue, MinutsValue, TwelveHourSystemValue, \r\n        NumberOfYearsValue, NumberOfMonthsValue, NumberOfDaysValue, \r\n        ColorOptionsValue};\r\n","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Select.js",[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":14},{"ruleId":"193","severity":1,"message":"194","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":14},{"ruleId":"193","severity":1,"message":"197","line":5,"column":8,"nodeType":"195","messageId":"196","endLine":5,"endColumn":15},{"ruleId":"193","severity":1,"message":"198","line":15,"column":25,"nodeType":"195","messageId":"196","endLine":15,"endColumn":40},{"ruleId":"199","severity":1,"message":"200","line":37,"column":7,"nodeType":"201","messageId":"202","endLine":37,"endColumn":16},{"ruleId":"193","severity":1,"message":"203","line":3,"column":52,"nodeType":"195","messageId":"196","endLine":3,"endColumn":67},{"ruleId":"193","severity":1,"message":"204","line":6,"column":10,"nodeType":"195","messageId":"196","endLine":6,"endColumn":23},{"ruleId":"193","severity":1,"message":"205","line":6,"column":25,"nodeType":"195","messageId":"196","endLine":6,"endColumn":39},{"ruleId":"193","severity":1,"message":"206","line":7,"column":8,"nodeType":"195","messageId":"196","endLine":7,"endColumn":17},{"ruleId":"207","severity":1,"message":"208","line":3,"column":1,"nodeType":"209","messageId":"210","endLine":5,"endColumn":15},{"ruleId":"193","severity":1,"message":"211","line":2,"column":24,"nodeType":"195","messageId":"196","endLine":2,"endColumn":34},{"ruleId":"193","severity":1,"message":"212","line":7,"column":26,"nodeType":"195","messageId":"196","endLine":7,"endColumn":39},{"ruleId":"193","severity":1,"message":"213","line":10,"column":20,"nodeType":"195","messageId":"196","endLine":10,"endColumn":34},{"ruleId":"193","severity":1,"message":"214","line":5,"column":24,"nodeType":"195","messageId":"196","endLine":5,"endColumn":44},{"ruleId":"193","severity":1,"message":"215","line":5,"column":45,"nodeType":"195","messageId":"196","endLine":5,"endColumn":57},{"ruleId":"193","severity":1,"message":"216","line":6,"column":27,"nodeType":"195","messageId":"196","endLine":6,"endColumn":41},{"ruleId":"193","severity":1,"message":"217","line":10,"column":7,"nodeType":"195","messageId":"196","endLine":10,"endColumn":20},{"ruleId":"193","severity":1,"message":"218","line":49,"column":38,"nodeType":"195","messageId":"196","endLine":49,"endColumn":46},{"ruleId":"193","severity":1,"message":"219","line":50,"column":47,"nodeType":"195","messageId":"196","endLine":50,"endColumn":60},{"ruleId":"193","severity":1,"message":"220","line":62,"column":38,"nodeType":"195","messageId":"196","endLine":62,"endColumn":49},{"ruleId":"193","severity":1,"message":"221","line":63,"column":38,"nodeType":"195","messageId":"196","endLine":63,"endColumn":47},{"ruleId":"193","severity":1,"message":"222","line":66,"column":33,"nodeType":"195","messageId":"196","endLine":66,"endColumn":55},{"ruleId":"193","severity":1,"message":"223","line":68,"column":47,"nodeType":"195","messageId":"196","endLine":68,"endColumn":67},{"ruleId":"193","severity":1,"message":"224","line":71,"column":37,"nodeType":"195","messageId":"196","endLine":71,"endColumn":41},{"ruleId":"193","severity":1,"message":"225","line":59,"column":33,"nodeType":"195","messageId":"196","endLine":59,"endColumn":58},{"ruleId":"193","severity":1,"message":"226","line":66,"column":35,"nodeType":"195","messageId":"196","endLine":66,"endColumn":62},{"ruleId":"193","severity":1,"message":"227","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":25},{"ruleId":"193","severity":1,"message":"227","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":25},{"ruleId":"193","severity":1,"message":"228","line":1,"column":27,"nodeType":"195","messageId":"196","endLine":1,"endColumn":36},{"ruleId":"193","severity":1,"message":"212","line":5,"column":10,"nodeType":"195","messageId":"196","endLine":5,"endColumn":23},{"ruleId":"193","severity":1,"message":"229","line":6,"column":10,"nodeType":"195","messageId":"196","endLine":6,"endColumn":15},{"ruleId":"193","severity":1,"message":"230","line":29,"column":9,"nodeType":"195","messageId":"196","endLine":29,"endColumn":16},{"ruleId":"231","severity":1,"message":"232","line":26,"column":42,"nodeType":"233","messageId":"234","endLine":26,"endColumn":43},{"ruleId":"235","severity":1,"message":"236","line":35,"column":26,"nodeType":"237","messageId":"202","endLine":35,"endColumn":28},{"ruleId":"231","severity":1,"message":"232","line":79,"column":38,"nodeType":"233","messageId":"234","endLine":79,"endColumn":39},{"ruleId":"235","severity":1,"message":"236","line":86,"column":26,"nodeType":"237","messageId":"202","endLine":86,"endColumn":28},{"ruleId":"231","severity":1,"message":"232","line":130,"column":26,"nodeType":"233","messageId":"234","endLine":130,"endColumn":27},{"ruleId":"193","severity":1,"message":"238","line":133,"column":9,"nodeType":"195","messageId":"196","endLine":133,"endColumn":13},{"ruleId":"235","severity":1,"message":"236","line":133,"column":27,"nodeType":"237","messageId":"202","endLine":133,"endColumn":29},{"ruleId":"235","severity":1,"message":"236","line":139,"column":26,"nodeType":"237","messageId":"202","endLine":139,"endColumn":28},{"ruleId":"193","severity":1,"message":"227","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":25},"no-native-reassign",["239"],"no-negated-in-lhs",["240"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'BlurDiv' is defined but never used.","'ChangeEventList' is assigned a value but never used.","no-dupe-keys","Duplicate key 'textColor'.","ObjectExpression","unexpected","'UserAddOutlined' is defined but never used.","'LoginOutlined' is defined but never used.","'LogoutOutlined' is defined but never used.","'AppButton' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'formatDate' is defined but never used.","'createEventId' is defined but never used.","'ChangegetEvent' is assigned a value but never used.","'DescriptionContainer' is defined but never used.","'URLContainer' is defined but never used.","'TimerContainer' is defined but never used.","'InfoContainer' is assigned a value but never used.","'getTitle' is assigned a value but never used.","'ChangeTitlePH' is assigned a value but never used.","'getFormDate' is assigned a value but never used.","'getToDate' is assigned a value but never used.","'ChangeClickedStartDate' is assigned a value but never used.","'ChangeClickedEndDate' is assigned a value but never used.","'Data' is assigned a value but never used.","'ChangeRecievedClickedDate' is assigned a value but never used.","'ChangeRecievedClickedDateTo' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Title' is defined but never used.","'subNote' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'name' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]