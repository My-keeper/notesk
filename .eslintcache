[{"E:\\project\\notesk\\src\\index.js":"1","E:\\project\\notesk\\src\\serviceWorker.js":"2","E:\\project\\notesk\\src\\App.js":"3","E:\\project\\notesk\\src\\API\\Weather.js":"4","E:\\project\\notesk\\src\\Routes\\Calendar\\Calendar.js":"5","E:\\project\\notesk\\src\\Routes\\Signup\\Signup.js":"6","E:\\project\\notesk\\src\\Routes\\Notes\\Notes.js":"7","E:\\project\\notesk\\src\\Routes\\Login\\Login.js":"8","E:\\project\\notesk\\src\\API\\API.js":"9","E:\\project\\notesk\\src\\Routes\\Calendar\\CalendarCollection.js":"10","E:\\project\\notesk\\src\\Routes\\Signup\\SignupForm.js":"11","E:\\project\\notesk\\src\\Routes\\Login\\LoginForm.js":"12","E:\\project\\notesk\\src\\UI\\NavBar.js":"13","E:\\project\\notesk\\src\\UI\\UserInput.js":"14","E:\\project\\notesk\\src\\UI\\BlurDiv.js":"15","E:\\project\\notesk\\src\\UI\\Footer.js":"16","E:\\project\\notesk\\src\\Routes\\Notes\\Note\\Note.js":"17","E:\\project\\notesk\\src\\Routes\\Notes\\CreateNote\\CreateNote.js":"18","E:\\project\\notesk\\src\\Routes\\Calendar\\CalendarForm.js":"19","E:\\project\\notesk\\src\\UI\\Modal.js":"20","E:\\project\\notesk\\src\\UI\\Button.js":"21","E:\\project\\notesk\\src\\UI\\Switch.js":"22","E:\\project\\notesk\\src\\UI\\UserIcon.js":"23","E:\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Schedule.js":"24","E:\\project\\notesk\\src\\UI\\TextArea.js":"25","E:\\project\\notesk\\src\\Routes\\Calendar\\event-utils.js":"26","E:\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DropDownContainer.js":"27","E:\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\InputContainer.js":"28","E:\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\SubmitButton.js":"29","E:\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\DateSelected.js":"30","E:\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\TimeSelected.js":"31","E:\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\OptionsForm.js":"32","E:\\project\\notesk\\src\\UI\\Select.js":"33"},{"size":497,"mtime":1612747719423,"results":"34","hashOfConfig":"35"},{"size":5227,"mtime":1612747719423,"results":"36","hashOfConfig":"35"},{"size":2594,"mtime":1612747862072,"results":"37","hashOfConfig":"35"},{"size":1136,"mtime":1612747862072,"results":"38","hashOfConfig":"35"},{"size":490,"mtime":1612747862073,"results":"39","hashOfConfig":"35"},{"size":484,"mtime":1612747719421,"results":"40","hashOfConfig":"35"},{"size":2053,"mtime":1612747862082,"results":"41","hashOfConfig":"35"},{"size":479,"mtime":1612747719419,"results":"42","hashOfConfig":"35"},{"size":327,"mtime":1612747719418,"results":"43","hashOfConfig":"35"},{"size":3495,"mtime":1612780828570,"results":"44","hashOfConfig":"35"},{"size":8915,"mtime":1612747862083,"results":"45","hashOfConfig":"35"},{"size":3822,"mtime":1612747719419,"results":"46","hashOfConfig":"35"},{"size":3249,"mtime":1612747862084,"results":"47","hashOfConfig":"35"},{"size":4362,"mtime":1612747862085,"results":"48","hashOfConfig":"35"},{"size":543,"mtime":1612747719421,"results":"49","hashOfConfig":"35"},{"size":521,"mtime":1612747719422,"results":"50","hashOfConfig":"35"},{"size":6058,"mtime":1612747862082,"results":"51","hashOfConfig":"35"},{"size":6099,"mtime":1612747719420,"results":"52","hashOfConfig":"35"},{"size":3757,"mtime":1612780518641,"results":"53","hashOfConfig":"35"},{"size":3512,"mtime":1612747862083,"results":"54","hashOfConfig":"35"},{"size":2970,"mtime":1612747862083,"results":"55","hashOfConfig":"35"},{"size":4700,"mtime":1612747862084,"results":"56","hashOfConfig":"35"},{"size":965,"mtime":1612747719423,"results":"57","hashOfConfig":"35"},{"size":5553,"mtime":1612780218324,"results":"58","hashOfConfig":"35"},{"size":3062,"mtime":1612747719423,"results":"59","hashOfConfig":"35"},{"size":398,"mtime":1612747719419,"results":"60","hashOfConfig":"35"},{"size":9335,"mtime":1612777800492,"results":"61","hashOfConfig":"35"},{"size":4731,"mtime":1612747862077,"results":"62","hashOfConfig":"35"},{"size":3565,"mtime":1612749151512,"results":"63","hashOfConfig":"35"},{"size":6362,"mtime":1612777562729,"results":"64","hashOfConfig":"35"},{"size":4516,"mtime":1612777562729,"results":"65","hashOfConfig":"35"},{"size":3322,"mtime":1612777562731,"results":"66","hashOfConfig":"35"},{"size":3210,"mtime":1612747862084,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"owmqeg",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"107"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"107"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"107"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"107"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\project\\notesk\\src\\index.js",[],"E:\\project\\notesk\\src\\serviceWorker.js",[],"E:\\project\\notesk\\src\\App.js",[],"E:\\project\\notesk\\src\\API\\Weather.js",[],"E:\\project\\notesk\\src\\Routes\\Calendar\\Calendar.js",[],"E:\\project\\notesk\\src\\Routes\\Signup\\Signup.js",["140"],"E:\\project\\notesk\\src\\Routes\\Notes\\Notes.js",[],"E:\\project\\notesk\\src\\Routes\\Login\\Login.js",["141"],"E:\\project\\notesk\\src\\API\\API.js",[],"E:\\project\\notesk\\src\\Routes\\Calendar\\CalendarCollection.js",["142","143","144","145","146","147","148"],"E:\\project\\notesk\\src\\Routes\\Signup\\SignupForm.js",[],"E:\\project\\notesk\\src\\Routes\\Login\\LoginForm.js",["149"],"E:\\project\\notesk\\src\\UI\\NavBar.js",["150","151","152"],"E:\\project\\notesk\\src\\UI\\UserInput.js",[],"E:\\project\\notesk\\src\\UI\\BlurDiv.js",["153"],"E:\\project\\notesk\\src\\UI\\Footer.js",[],"E:\\project\\notesk\\src\\Routes\\Notes\\Note\\Note.js",[],"E:\\project\\notesk\\src\\Routes\\Notes\\CreateNote\\CreateNote.js",[],"E:\\project\\notesk\\src\\Routes\\Calendar\\CalendarForm.js",["154","155","156","157"],"import React, { useState } from \"react\";\r\nimport FullCalendar, { formatDate } from \"@fullcalendar/react\";\r\nimport listPlugin from \"@fullcalendar/list\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport { INITIAL_EVENTS, createEventId } from \"./event-utils\";\r\nconst TheCalendar = (props) => {\r\n  const weekendsVisible = true;\r\n  const [getEvent, ChangegetEvent] = useState(props.EventList ? props.EventList :[]); \r\n  const [isStartData, ChangeStartData] = useState(); //This part is for the submit button\r\n  const [isGetEnd, ChangeEndData] = useState(); //This part is for the close button\r\n\r\n  const handleDateSelect = (selectInfo) => {\r\n    ChangeStartData(selectInfo.startStr.split(\"-\"));\r\n    ChangeEndData(selectInfo.endStr.split(\"-\"));\r\n    props.SendChangedDataClicked(true); \r\n  };\r\n\r\n   \r\n  const FullCalendarForm = (\r\n    <FullCalendar\r\n      plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin, listPlugin]}\r\n      headerToolbar={{\r\n        left: \"prev,next today\",\r\n        center: \"title\",\r\n        right: \"dayGridMonth,timeGridWeek,timeGridDay,list\",\r\n      }}\r\n      initialView=\"dayGridMonth\"\r\n      titleFormat={{ month: \"short\", year: \"numeric\", day: \"numeric\" }} //this is for the tile what should be there for the user\r\n      height=\"850px\" //get fixed height for the calendar\r\n      contentHeight=\"800px\" //get the content height for the calendar \r\n      handleWindowResize=\"true\"\r\n      locale=\"En\" //this is for the languages option\r\n      timeZone=\"canada/nl\" //to get the time zone of your location that is why we will be using the location in the sigup or make the browser detecte it\r\n      editable={true} //to edit the info\r\n      selectable={true} //to enable selection\r\n      selectMirror={true}\r\n      dayMaxEvents={true}\r\n      weekends={weekendsVisible}\r\n      eventDisplay=\"block\" //this is used to high light the event that are created\r\n      eventTextColor=\"black\" //this is for the styling of the text for each event\r\n      eventBackgroundColor=\"cornflowerblue\" //This is for the background of each event\r\n      eventBorderColor=\"pink\" //The border color\r\n      initialEvents={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\r\n      select={handleDateSelect}\r\n      events={getEvent}\r\n      // eventContent={renderEventContent} // custom render function\r\n      // eventClick={handleEventClick}\r\n      // eventsSet={handleEvents} // called after events are initialized/added/changed/removed\r\n    />\r\n  );\r\n\r\n  props.StartedData(isStartData) //This part is for the submit button\r\n  props.EndedData(isGetEnd) //This part is for the close button\r\n  \r\n  return  FullCalendarForm ;\r\n};\r\n\r\nexport default TheCalendar;\r\n\r\n// handleWeekendsToggle = () => {\r\n//   setState({\r\n//     weekendsVisible: !state.weekendsVisible\r\n//   })\r\n// }\r\n\r\n// handleEventClick = (clickInfo) => {\r\n//   if (alert(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\r\n//     clickInfo.event.remove()\r\n//   }\r\n// }\r\n\r\n//   handleEvents = (events) => {\r\n//     setState({\r\n//       currentEvents: events\r\n//     })\r\n//   }\r\n\r\n// }\r\n\r\n// function renderEventContent(eventInfo) {\r\n//   return (\r\n//     <>\r\n//       <b>{eventInfo.timeText}</b>\r\n//       <i>{eventInfo.event.title}</i>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// function renderSidebarEvent(event) {\r\n//   return (\r\n//     <li key={event.id}>\r\n//       <b>{formatDate(event.start, {year: 'numeric', month: 'short', day: 'numeric'})}</b>\r\n//       <i>{event.title}</i>\r\n//     </li>\r\n//   )\r\n// }\r\n",["158","159"],"E:\\project\\notesk\\src\\UI\\Modal.js",[],"E:\\project\\notesk\\src\\UI\\Button.js",[],"E:\\project\\notesk\\src\\UI\\Switch.js",[],"E:\\project\\notesk\\src\\UI\\UserIcon.js",[],"E:\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Schedule.js",["160","161","162","163","164","165"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport NoteContainer from \"../../../UI/Modal\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport {TitleContainer, DescriptionContainer, URLContainer} from './Containers/InputContainer';\r\nimport {CalenderContianer, TimerContainer} from './Containers/DropDownContainer';\r\nimport SubmitButton from \"./Containers/SubmitButton\";\r\nimport { CloseOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\r\nconst InfoContainer = styled.div`\r\n    width: 440px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    margin: 4px;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nconst Schedule = (props) => {\r\n  //Close is not hovered on color style\r\n  const VisibilityStle1 = {\r\n    marginRight: \"4px\",\r\n    marginLeft: \"95%\",\r\n    marginBottom: \"15px\",\r\n    fontSize: \"21px\",\r\n    color: props.ScheduleColor.IconC,\r\n  };\r\n  //Close is hovered on color style\r\n  const VisibilityStle2 = {\r\n    marginRight: \"4px\",\r\n    marginLeft: \"95%\",\r\n    marginBottom: \"15px\",\r\n    fontSize: \"26px\",\r\n    color: props.ScheduleColor.IconC,\r\n  };\r\n \r\n  const [isClode, ChangeIsClosed] = useState(true);\r\n  const CloseIcon = isClode ? \r\n    (<CloseOutlined onMouseEnter={() => ChangeIsClosed(false)} style={VisibilityStle1} />)  \r\n    : \r\n    (<CloseCircleOutlined  onClick={() => props.CloseIsCliced(false)}  onMouseLeave={() => ChangeIsClosed(true)} style={VisibilityStle2} />)\r\n  \r\n  //Title Area\r\n  const [getTitle, ChangeTitle] = useState(\"\")\r\n  const [TitlePH,ChangeTitlePH] = useState(\"Title ...\")\r\n  const Title = <TitleContainer \r\n    SubmitTitle={(value)=>ChangeTitle(value)}\r\n    SubmitTitlePlaceHolder={TitlePH}\r\n    ScheduleColor={props.ScheduleColor}\r\n    />\r\n\r\n  //Description Area\r\n  const [getDescription, ChangeDescription] = useState(\"\")\r\n  const [DescriptionPH,ChangeDescriptionPH] = useState(\"Description ...\")\r\n  const Description =<DescriptionContainer \r\n    SubmitDescription={(value)=>ChangeDescription(value)}\r\n    SubmitDescriptionPlaceHolder={DescriptionPH}\r\n    ScheduleColor={props.ScheduleColor}\r\n    />\r\n  \r\n  //URL Area\r\n  const [getURL, ChangeURL] = useState()\r\n  const [URLPH,ChangeURLPH] = useState(\"Optional Attached Link For Description ...\")\r\n  const URL = <URLContainer \r\n    URLOption={(value)=>ChangeURL(value)}\r\n    SubmitURLPH={URLPH}\r\n    ScheduleColor={props.ScheduleColor}\r\n    />\r\n\r\n  // Data From and To \r\n  const [getFormDate, ChangeFormDate] = useState()\r\n  const [getToDate, ChangeToDate] = useState()\r\n  const [StartDate, ChangeClickedStartDate] = useState(props.StartDateClicked) //This is the selected data in calendar\r\n  const [EndDate, ChangeClickedEndDate] = useState(props.EndDateClicked) //This is the selected data in calendar\r\n  const Data = <CalenderContianer \r\n    GetFromDate={(value) => ChangeFormDate(value)} \r\n    GetToDate={(value) => ChangeToDate(value)} \r\n    RetrunClickedDate={StartDate}\r\n    RetrunClickedEndDate={EndDate}\r\n    ScheduleColor={props.ScheduleColor} \r\n  />\r\n\r\n  //This is for the time\r\n\r\n  // const Time = <TimerContainer\r\n  // SubmitFromHourSelected={(value) => ChangeGetStartHourValue(value)}\r\n  // SubmitToHourlected={(value) => ChangeGetEndHourValue(value)}\r\n  // SubmitFromMinutsSelected={(value) => ChangeGetStartMinutsValue(value)}\r\n  // SubmitToMinutsSelected={(value) => ChangeGetEndMinutsValue(value)}\r\n  // SubmitFromDayValueSelected={(value) => ChangeGetStartDayValue(value)}\r\n  // SubmitToDayValueSelected={(value) => ChangeGetEndDayValue(value)} \r\n  // // // ScheduleColor={props.ScheduleColor}\r\n  // />\r\n\r\n  //Submit Buton\r\n  const [getSubmitClicked, ChangeSubmitClicked] = useState();\r\n  props.SubmitIsClicked(getSubmitClicked);\r\n  const [getEventValue, ChangeEventValue] = useState() \r\n  // props.submitEventValues(getEventValue);\r\n  const Submit =<SubmitButton\r\n    IsSubmistClicked={(value) => ChangeSubmitClicked(value)} //This is for the submit button to be clicked \r\n    GetEvent={(value) => ChangeEventValue(value)} //This is to get the event values after the submission button has been clicked\r\n    isTitle={getTitle} //This is to pass down the title value\r\n    CheckTitlePH={(value)=>ChangeTitlePH(value)} //This is to check the title place holder and then change it based on the user input \r\n    isDescription={getDescription} //This is to pass down the Description value\r\n    CheckDescriptionPH={(value)=>ChangeDescriptionPH(value)} //This is to check the Description place holder and then change it based on the user input \r\n    isURL={getURL} //This is to pass down the URL value\r\n    CheckURLPH={(value)=>ChangeURLPH(value)} //This is to check the URL place holder and then change it based on the user input \r\n    isFromData={getFormDate} //This is to pass down the from data that is clicked \r\n    isToData={getToDate} //This is to pass down the to data that is clicked \r\n\r\n    testingChangeevent={props.TestChangeEvet}\r\n    />\r\n    \r\n  const ScheduleForm = (<FadeIn> <NoteContainer\r\n        position={\"relative\"}\r\n        width={\"520px\"}\r\n        margin={\"30px auto 20px auto\"}\r\n        padding={\"15px\"}\r\n        boxShadowValue={\"0 1px 5px rgb(138, 137, 137)\"}\r\n        borderRadiusValue={\"7px\"}\r\n        resizeValue={\"both\"}\r\n        backGroundColorValue={props.ScheduleColor.NotekBGC}\r\n        FontColorValue={props.ScheduleColor.NoteFC}\r\n      >\r\n        {CloseIcon}\r\n        {Title}\r\n        {Description}\r\n        {URL}\r\n        {Data}\r\n        {Submit}\r\n      </NoteContainer>\r\n    </FadeIn>\r\n  );\r\n\r\n  return ScheduleForm;\r\n};\r\n\r\nexport default Schedule;","E:\\project\\notesk\\src\\UI\\TextArea.js",[],"E:\\project\\notesk\\src\\Routes\\Calendar\\event-utils.js",[],"E:\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DropDownContainer.js",["166","167"],"E:\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\InputContainer.js",["168"],"E:\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\SubmitButton.js",["169","170","171"],"import React, { useState,useEffect } from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport { LoginOutlined } from \"@ant-design/icons\";\r\nimport Button from \"../../../../UI/Button\";\r\nimport { createEventId } from \"../../event-utils\";\r\nimport { Title } from \"@material-ui/icons\";\r\n\r\nconst SubmitButton = (props) => {\r\n  const ButtonIconColor = {\r\n    fontSize: \"20px\",\r\n    marginRight: \"9px\",\r\n    marginTop: \"4px\",\r\n  }; \r\n  const [isSubmit, ChangeIsSubmit] = useState(true); //This is values is used to send value that the submit button has been clicked \r\n  const CreateEvent= { \r\n    id:  createEventId(),\r\n    title:  isSubmit ? props.isTitle : \"\",\r\n    description: isSubmit ? props.isDescription : \"\",\r\n    Url: isSubmit ? props.isURL : \"\",\r\n    start: isSubmit ? props.isFromData :\"\",\r\n    // startTime: \"10:45:00\",\r\n    // endTime: \"12:45:00\", \r\n    display: \"list-item\",\r\n    textColor: \"red\"\r\n  } \r\n  \r\n  const subNote = () => { \r\n    if(props.isTitle === \"\" && props.isDescription === \"\" ) {\r\n        <FadeIn>{props.CheckTitlePH(\"Please Enter A Title ....(-_-)\") \r\n        , props.CheckDescriptionPH(\"Please Enter A Description ....(-_-)\")} </FadeIn> \r\n      }\r\n      else if (props.isTitle === \"\") {\r\n          <FadeIn>{props.CheckTitlePH(\"Please Enter A Title ....(-_-)\") }</FadeIn>\r\n        }\r\n        else if (props.isDescription === \"\") {\r\n            <FadeIn>{props.CheckDescriptionPH(\"Please Enter A Description ....(-_-)\") }</FadeIn>\r\n          }\r\n          else {\r\n            // props.CheckTitlePH(\"\") \r\n            // props.CheckDescriptionPH(\"\")\r\n            props.GetEvent(oldarr => [...oldarr,CreateEvent]) \r\n            ChangeIsSubmit(false)\r\n              \r\n          }\r\n          }  \r\n\r\n  const SubmitButton = (\r\n    <FadeIn>\r\n      <Button\r\n        width={\"120px\"}\r\n        marginBottomValue={\"10px\"}\r\n        marginLeftValue={\"35%\"}\r\n        fontSizeValue={\"20px\"}\r\n        borderRadiusValue={\"15px\"}\r\n        IsCalledValue={\"hover\"}\r\n        BorderValue=\"solid\"\r\n        borderWidthValue=\"thin\"\r\n        paddingInputValue=\"2px\"\r\n        onClick={ subNote}\r\n        text={\"Submit\"}\r\n        icon={<LoginOutlined style={ButtonIconColor} />}\r\n      />\r\n    </FadeIn>\r\n  );\r\n\r\n  props.IsSubmistClicked(isSubmit); //This is values is used to send value that the submit button has been clicked \r\n\r\n  return SubmitButton;\r\n};\r\n\r\nexport default SubmitButton;\r\n","E:\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\DateSelected.js",["172","173","174","175","176","177","178","179"],"import React, { useState } from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport SelectData from \"../../../../../UI/Select\";\r\nimport {\r\n  NumberOfYearsValue,\r\n  NumberOfMonthsValue,\r\n  NumberOfDaysValue,\r\n} from \"./OptionsForm\";\r\nimport { createEventId } from \"../../../event-utils\";\r\n\r\nconst DateSelected = (props) => {\r\n  //This part is changed once the user click on the drop down to see other options\r\n  const [GetUserChangeYear, ChnageUserChangedYear] = useState(true);\r\n  /*\r\n        This part is chicking if the input that the user entered is what is wanted or not \r\n        Once the select is clicked then it will change to normal dropdown with input number \r\n    */\r\n  const [YearsValueInput, ChangeYearsValueInput] = useState(\r\n    GetUserChangeYear\r\n      ? props.ReturnFrom === \"From\"\r\n        ? props.ReturnClickedFromYear\r\n        : props.ReturnClickedToYear\r\n      : \"\"\r\n  );\r\n  const handleYears = (e) => (\r\n    ChangeYearsValueInput(e.target.value), ChnageUserChangedYear(false)\r\n  );\r\n  const Years = (\r\n    <FadeIn>\r\n      <SelectData\r\n        key={YearsValueInput + createEventId()}\r\n        value=\"as\"\r\n        PlaceholderValue=\"asdfas\"\r\n        inputType={\"text\"}\r\n        name={props.name == \"start\" ? \"start\" : \"end\"}\r\n        widthValue={\"112px\"}\r\n        paddingVale={\"4px\"}\r\n        outlineValue={\"none\"}\r\n        fontSizeValue={\"1.2em\"}\r\n        fontFamilyValue={\"inherit\"}\r\n        IsCalledValue={props.DisabledisClicked ? \"\" : \"FOCUS\"}\r\n        borderRadiusValue={\"7px\"}\r\n        backGroundColorValue={props.RecievedColor.UserInputBGC}\r\n        FontColorValue={props.RecievedColor.UserInputFC}\r\n        PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\r\n        borderColorValue={\r\n          props.DisabledisClicked ? \"#A9A9A9\" : props.RecievedColor.BorderColor\r\n        }\r\n        BorderValue={\"solid\"}\r\n        borderWidthValue={\"thin\"}\r\n        marginRightValue={\"15px\"}\r\n        onchangeValue={handleYears}\r\n        InputValue={YearsValueInput}\r\n      >\r\n        {\r\n          <NumberOfYearsValue\r\n            //this is the DisabledisClicked that is coming from DropDown to change every time we click on the icion\r\n            DisabledYear={props.DisabledisClicked}\r\n          />\r\n        }\r\n      </SelectData>\r\n    </FadeIn>\r\n  );\r\n\r\n  // This part is changed once the user click on the drop down to see other options\r\n  const [GetUserChangeMonth, ChnageUserChangedMonth] = useState(true);\r\n  /*\r\n        This part is chicking if the input that the user entered is what is wanted or not \r\n        Once the select is clicked then it will change to normal dropdown with input number \r\n    */\r\n  const [MonthsValueInput, ChangeMonthsValue] = useState(\r\n    GetUserChangeMonth\r\n      ? props.ReturnFrom === \"From\"\r\n        ? props.ReturnClickedFromMonth\r\n        : props.ReturnClickedToMonth\r\n      : \"\"\r\n  );\r\n  const handleMonths = (e) => (\r\n    ChangeMonthsValue(e.target.value), ChnageUserChangedMonth(false)\r\n  );\r\n  const Months = (\r\n    <FadeIn>\r\n      <SelectData\r\n        key={MonthsValueInput.id + createEventId()}\r\n        inputType={\"text\"}\r\n        name={props.name == \"start\" ? \"start\" : \"end\"}\r\n        widthValue={\"112px\"}\r\n        paddingVale={\"4px\"}\r\n        outlineValue={\"none\"}\r\n        fontSizeValue={\"1.2em\"}\r\n        fontFamilyValue={\"inherit\"}\r\n        IsCalledValue={props.DisabledisClicked ? \"\" : \"FOCUS\"}\r\n        borderRadiusValue={\"7px\"}\r\n        backGroundColorValue={props.RecievedColor.UserInputBGC}\r\n        FontColorValue={props.RecievedColor.UserInputFC}\r\n        PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\r\n        borderColorValue={\r\n          props.DisabledisClicked ? \"#A9A9A9\" : props.RecievedColor.BorderColor\r\n        }\r\n        BorderValue={\"solid\"}\r\n        borderWidthValue={\"thin\"}\r\n        marginRightValue={\"15px\"}\r\n        onchangeValue={handleMonths}\r\n        InputValue={MonthsValueInput}\r\n      >\r\n        {\r\n          <NumberOfMonthsValue\r\n            //this is the DisabledisClicked that is coming from DropDown to change every time we click on the icion\r\n            DisabledMonth={props.DisabledisClicked}\r\n          />\r\n        }\r\n      </SelectData>\r\n    </FadeIn>\r\n  );\r\n\r\n  // This part is changed once the user click on the drop down to see other options\r\n  const [GetUserChangeDay, ChnageUserChangedDay] = useState(true);\r\n  /*\r\n        This part is chicking if the input that the user entered is what is wanted or not \r\n        Once the select is clicked then it will change to normal dropdown with input number \r\n    */\r\n  const [DayValueInput, ChangeDayValue] = useState(\r\n    GetUserChangeDay\r\n      ? props.ReturnFrom === \"From\"\r\n        ? props.ReturnClickedFromDay\r\n        : props.ReturnClickedToDay\r\n      : \"\"\r\n  );\r\n  const handleDays = (e) => (\r\n    console.log(e.target),\r\n    ChangeDayValue(e.target.value), ChnageUserChangedDay(false)\r\n  );\r\n  const name = props.name == \"start\" ? \"start\" : \"end\"\r\n  const Days = (\r\n    <FadeIn>\r\n      <SelectData\r\n        key={DayValueInput.id  + createEventId()}\r\n        inputType={\"text\"}\r\n        name={props.name == \"start\" ? \"start\" : \"end\"}\r\n        widthValue={\"112px\"}\r\n        paddingVale={\"4px\"}\r\n        outlineValue={\"none\"}\r\n        fontSizeValue={\"1.2em\"}\r\n        fontFamilyValue={\"inherit\"}\r\n        IsCalledValue={props.DisabledisClicked ? \"\" : \"FOCUS\"}\r\n        borderRadiusValue={\"7px\"}\r\n        backGroundColorValue={props.RecievedColor.UserInputBGC}\r\n        FontColorValue={props.RecievedColor.UserInputFC}\r\n        PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\r\n        borderColorValue={\r\n          props.DisabledisClicked ? \"#A9A9A9\" : props.RecievedColor.BorderColor\r\n        }\r\n        BorderValue={\"solid\"}\r\n        borderWidthValue={\"thin\"}\r\n        marginRightValue={\"15px\"}\r\n        onchangeValue={handleDays}\r\n        InputValue={DayValueInput}\r\n      >\r\n        {\r\n          <NumberOfDaysValue\r\n            //this is the DisabledisClicked that is coming from DropDown to change every time we click on the icion\r\n            DisabledDay={props.DisabledisClicked}\r\n          />\r\n        }\r\n      </SelectData>\r\n    </FadeIn>\r\n  );\r\n\r\n  //this is submitted to DropDownContainer\r\n  props.submitDateValue(\r\n    YearsValueInput + \"-\" + MonthsValueInput + \"-\" + DayValueInput\r\n  );\r\n\r\n  return [Years, Months, Days];\r\n};\r\n\r\nexport default DateSelected;\r\n","E:\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\TimeSelected.js",[],"E:\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\OptionsForm.js",["180"],"import React, { useState } from \"react\";\r\nimport { createEventId } from \"../../../event-utils\";\r\n\r\n//this is for the hour input \r\nconst HourValue = (props) => {\r\n\r\n    const Hours = ['01','02','03','04','05','06','07','08','09','10','11','12']\r\n    const DailyHours = (\r\n        [Hours.map((Hour, index) => \r\n            <option disabled={props.DisabledHour}  key={index.id + createEventId()} value={Hour}>{Hour}</option>)]\r\n        )\r\n    return(DailyHours)\r\n}\r\nconst MinutsValue = (props) => {\r\n\r\n    //this is for the hour input \r\n    const Minuts = ['05','10','15','20','25','30','35','40','45','50','55']\r\n    const DailyMinut =(\r\n        [Minuts.map((Minut, index) => \r\n            <option disabled={props.DisabledMinuts} key={index.id + createEventId()} value={Minut}>{Minut}</option>)]\r\n        )\r\n    return(DailyMinut)\r\n}\r\nconst TwelveHourSystemValue = (props) => {\r\n\r\n    //this for either AM or PM\r\n    const TwelveHourSystem = ['AM','PM']\r\n    const DayDivided =(\r\n        [TwelveHourSystem.map((DayTime, index) => \r\n            <option disabled={props.DisabledHourSystem} key={index.id + createEventId()} value={DayTime}>{DayTime}</option>)]\r\n        )\r\n    return(DayDivided)\r\n}\r\nconst NumberOfYearsValue = (props) => { \r\n    //this is for the years from this year \r\n    const NumberOfYears = [ '2020','2021', '2022', '2023', '2024','2025', '2026', \r\n                            '2027', '2028', '2029', '2030', '2031', '2032','2033', \r\n                            '2034','2035', '2036', '2037', '2038', '2039','2040']\r\n    const YearContainer = (\r\n        [NumberOfYears.map((year, index) => <option  disabled={props.DisabledYear}  key={index.id + createEventId()} value={year}>{year}</option>)]\r\n    )\r\n    \r\n    return(\r\n        YearContainer\r\n        )\r\n}\r\nconst NumberOfMonthsValue = (props) => { \r\n    //this is for the months in a year \r\n    const NumberOfMonths = ['01','02','03','04','05','06','07','08','09','10','11','12']\r\n    const MonthContainer = (\r\n        [NumberOfMonths.map((month, index) => <option disabled={props.DisabledMonth} key={index.id + createEventId()}  value={month}>{month}</option>)]\r\n        )\r\n    return(MonthContainer)\r\n}\r\nconst NumberOfDaysValue = (props) => { \r\n    //this is for the days in a Month \r\n    const NumberOfDays = ['01','02','03','04','05','06','07','08','09','10',\r\n                        '11','12','13','14','15','16','17','18','19','20',\r\n                        '21','22','23','24','25','26','27','28','29','30','31']\r\n    const DayContainer = (\r\n        [NumberOfDays.map((days,index ) => <option disabled={props.DisabledDay} key={index.id + createEventId()} value={days}>{days}</option>)]\r\n        )\r\n    return(DayContainer)\r\n}\r\nconst ColorOptionsValue = () => {\r\n\r\n    //this is for the days in a Month \r\n    const ColorChoose = ['Choose Color','BlueViolet','Black','CornflowerBlue','DarkMagenta','DimGrey',\r\n                            'DodgerBlue','Fuchsia','MidnightBlue','Purple','Salmon']\r\n    const ColorContainer = (\r\n        [ColorChoose.map((Colors,index ) => <option  key={index.id + createEventId()} value={Colors}>{Colors}</option>)]\r\n        )\r\n    return(ColorContainer)\r\n}\r\n\r\nexport {HourValue, MinutsValue, TwelveHourSystemValue, \r\n        NumberOfYearsValue, NumberOfMonthsValue, NumberOfDaysValue, \r\n        ColorOptionsValue};\r\n","E:\\project\\notesk\\src\\UI\\Select.js",[],{"ruleId":"181","severity":1,"message":"182","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":14},{"ruleId":"181","severity":1,"message":"182","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":14},{"ruleId":"181","severity":1,"message":"185","line":16,"column":10,"nodeType":"183","messageId":"184","endLine":16,"endColumn":21},{"ruleId":"181","severity":1,"message":"186","line":17,"column":10,"nodeType":"183","messageId":"184","endLine":17,"endColumn":20},{"ruleId":"187","severity":1,"message":"188","line":41,"column":7,"nodeType":"189","messageId":"190","endLine":41,"endColumn":16},{"ruleId":"181","severity":1,"message":"191","line":44,"column":10,"nodeType":"183","messageId":"184","endLine":44,"endColumn":14},{"ruleId":"192","severity":1,"message":"193","line":54,"column":52,"nodeType":"194","messageId":"195","endLine":54,"endColumn":53},{"ruleId":"192","severity":1,"message":"193","line":56,"column":55,"nodeType":"194","messageId":"195","endLine":56,"endColumn":56},{"ruleId":"196","severity":1,"message":"197","line":72,"column":20,"nodeType":"198","messageId":"190","endLine":72,"endColumn":22},{"ruleId":"181","severity":1,"message":"199","line":3,"column":52,"nodeType":"183","messageId":"184","endLine":3,"endColumn":67},{"ruleId":"181","severity":1,"message":"200","line":6,"column":10,"nodeType":"183","messageId":"184","endLine":6,"endColumn":23},{"ruleId":"181","severity":1,"message":"201","line":6,"column":25,"nodeType":"183","messageId":"184","endLine":6,"endColumn":39},{"ruleId":"181","severity":1,"message":"202","line":7,"column":8,"nodeType":"183","messageId":"184","endLine":7,"endColumn":17},{"ruleId":"203","severity":1,"message":"204","line":3,"column":1,"nodeType":"205","messageId":"206","endLine":5,"endColumn":15},{"ruleId":"181","severity":1,"message":"207","line":2,"column":24,"nodeType":"183","messageId":"184","endLine":2,"endColumn":34},{"ruleId":"181","severity":1,"message":"208","line":7,"column":26,"nodeType":"183","messageId":"184","endLine":7,"endColumn":39},{"ruleId":"181","severity":1,"message":"209","line":10,"column":20,"nodeType":"183","messageId":"184","endLine":10,"endColumn":34},{"ruleId":"181","severity":1,"message":"210","line":13,"column":16,"nodeType":"183","messageId":"184","endLine":13,"endColumn":22},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"181","severity":1,"message":"215","line":6,"column":28,"nodeType":"183","messageId":"184","endLine":6,"endColumn":42},{"ruleId":"181","severity":1,"message":"216","line":9,"column":7,"nodeType":"183","messageId":"184","endLine":9,"endColumn":20},{"ruleId":"181","severity":1,"message":"217","line":72,"column":21,"nodeType":"183","messageId":"184","endLine":72,"endColumn":43},{"ruleId":"181","severity":1,"message":"218","line":73,"column":19,"nodeType":"183","messageId":"184","endLine":73,"endColumn":39},{"ruleId":"181","severity":1,"message":"219","line":74,"column":9,"nodeType":"183","messageId":"184","endLine":74,"endColumn":13},{"ruleId":"181","severity":1,"message":"220","line":97,"column":10,"nodeType":"183","messageId":"184","endLine":97,"endColumn":23},{"ruleId":"181","severity":1,"message":"221","line":59,"column":33,"nodeType":"183","messageId":"184","endLine":59,"endColumn":58},{"ruleId":"181","severity":1,"message":"222","line":66,"column":35,"nodeType":"183","messageId":"184","endLine":66,"endColumn":62},{"ruleId":"181","severity":1,"message":"223","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"181","severity":1,"message":"224","line":1,"column":26,"nodeType":"183","messageId":"184","endLine":1,"endColumn":35},{"ruleId":"181","severity":1,"message":"225","line":6,"column":10,"nodeType":"183","messageId":"184","endLine":6,"endColumn":15},{"ruleId":"192","severity":1,"message":"193","line":30,"column":9,"nodeType":"194","messageId":"195","endLine":30,"endColumn":10},{"ruleId":"192","severity":1,"message":"193","line":25,"column":42,"nodeType":"194","messageId":"195","endLine":25,"endColumn":43},{"ruleId":"196","severity":1,"message":"197","line":34,"column":26,"nodeType":"198","messageId":"190","endLine":34,"endColumn":28},{"ruleId":"192","severity":1,"message":"193","line":78,"column":38,"nodeType":"194","messageId":"195","endLine":78,"endColumn":39},{"ruleId":"196","severity":1,"message":"197","line":85,"column":26,"nodeType":"198","messageId":"190","endLine":85,"endColumn":28},{"ruleId":"192","severity":1,"message":"193","line":129,"column":26,"nodeType":"194","messageId":"195","endLine":129,"endColumn":27},{"ruleId":"181","severity":1,"message":"226","line":132,"column":9,"nodeType":"183","messageId":"184","endLine":132,"endColumn":13},{"ruleId":"196","severity":1,"message":"197","line":132,"column":27,"nodeType":"198","messageId":"190","endLine":132,"endColumn":29},{"ruleId":"196","severity":1,"message":"197","line":138,"column":26,"nodeType":"198","messageId":"190","endLine":138,"endColumn":28},{"ruleId":"181","severity":1,"message":"223","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'getIsSubmit' is assigned a value but never used.","'getIsClose' is assigned a value but never used.","no-dupe-keys","Duplicate key 'textColor'.","ObjectExpression","unexpected","'test' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'UserAddOutlined' is defined but never used.","'LoginOutlined' is defined but never used.","'LogoutOutlined' is defined but never used.","'AppButton' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'formatDate' is defined but never used.","'createEventId' is defined but never used.","'ChangegetEvent' is assigned a value but never used.","'istest' is assigned a value but never used.","no-native-reassign",["227"],"no-negated-in-lhs",["228"],"'TimerContainer' is defined but never used.","'InfoContainer' is assigned a value but never used.","'ChangeClickedStartDate' is assigned a value but never used.","'ChangeClickedEndDate' is assigned a value but never used.","'Data' is assigned a value but never used.","'getEventValue' is assigned a value but never used.","'ChangeRecievedClickedDate' is assigned a value but never used.","'ChangeRecievedClickedDateTo' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Title' is defined but never used.","'name' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]