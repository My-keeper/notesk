[{"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\index.js":"1","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\serviceWorker.js":"2","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\App.js":"3","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\API\\Weather.js":"4","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Notes\\Notes.js":"5","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Login\\Login.js":"6","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Signup\\Signup.js":"7","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\Calendar.js":"8","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\API\\API.js":"9","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Signup\\SignupForm.js":"10","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Login\\LoginForm.js":"11","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Footer.js":"12","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\NavBar.js":"13","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\BlurDiv.js":"14","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Notes\\CreateNote\\CreateNote.js":"15","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Notes\\Note\\Note.js":"16","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\UserInput.js":"17","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Modal.js":"18","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Button.js":"19","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\event-utils.js":"20","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\UserIcon.js":"21","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Switch.js":"22","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\TextArea.js":"23","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\CalendarCollection1.js":"24","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Imag.js":"25","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\EditForm\\EvenForm.js":"26","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\CalendarForm1.js":"27","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Schedule1.js":"28","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\EditForm\\EditButton.js":"29","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\EditForm\\DeleteButton.js":"30","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\SubmitButton1.js":"31","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DaysContainer.js":"32","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\InputContainer.js":"33","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DropDownContainer.js":"34","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\TimeSelected.js":"35","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\RepeatedDaysSelected.js":"36","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Select.js":"37","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\OptionsForm.js":"38"},{"size":497,"mtime":1614013914671,"results":"39","hashOfConfig":"40"},{"size":5227,"mtime":1614013914672,"results":"41","hashOfConfig":"40"},{"size":2589,"mtime":1614015326862,"results":"42","hashOfConfig":"40"},{"size":1136,"mtime":1614015326861,"results":"43","hashOfConfig":"40"},{"size":2053,"mtime":1614015326943,"results":"44","hashOfConfig":"40"},{"size":434,"mtime":1614015326934,"results":"45","hashOfConfig":"40"},{"size":441,"mtime":1614015326948,"results":"46","hashOfConfig":"40"},{"size":548,"mtime":1614015326892,"results":"47","hashOfConfig":"40"},{"size":327,"mtime":1614013914648,"results":"48","hashOfConfig":"40"},{"size":10600,"mtime":1614015326950,"results":"49","hashOfConfig":"40"},{"size":3805,"mtime":1614015326938,"results":"50","hashOfConfig":"40"},{"size":521,"mtime":1614013914664,"results":"51","hashOfConfig":"40"},{"size":3549,"mtime":1614015326961,"results":"52","hashOfConfig":"40"},{"size":480,"mtime":1614015326952,"results":"53","hashOfConfig":"40"},{"size":6099,"mtime":1614013914658,"results":"54","hashOfConfig":"40"},{"size":6058,"mtime":1614015326941,"results":"55","hashOfConfig":"40"},{"size":4385,"mtime":1614015326965,"results":"56","hashOfConfig":"40"},{"size":3512,"mtime":1614015326958,"results":"57","hashOfConfig":"40"},{"size":2970,"mtime":1614015326953,"results":"58","hashOfConfig":"40"},{"size":398,"mtime":1614013914654,"results":"59","hashOfConfig":"40"},{"size":965,"mtime":1614013914669,"results":"60","hashOfConfig":"40"},{"size":4700,"mtime":1614015326963,"results":"61","hashOfConfig":"40"},{"size":3062,"mtime":1614013914668,"results":"62","hashOfConfig":"40"},{"size":2673,"mtime":1614015326895,"results":"63","hashOfConfig":"40"},{"size":458,"mtime":1614015326955,"results":"64","hashOfConfig":"40"},{"size":4353,"mtime":1614015326904,"results":"65","hashOfConfig":"40"},{"size":4701,"mtime":1614020629542,"results":"66","hashOfConfig":"40"},{"size":6422,"mtime":1614015326927,"results":"67","hashOfConfig":"40"},{"size":1095,"mtime":1614015326902,"results":"68","hashOfConfig":"40"},{"size":1169,"mtime":1614015326899,"results":"69","hashOfConfig":"40"},{"size":1596,"mtime":1614018225215,"results":"70","hashOfConfig":"40"},{"size":1193,"mtime":1614015326917,"results":"71","hashOfConfig":"40"},{"size":4731,"mtime":1614015326919,"results":"72","hashOfConfig":"40"},{"size":6428,"mtime":1614015326918,"results":"73","hashOfConfig":"40"},{"size":4482,"mtime":1614015326915,"results":"74","hashOfConfig":"40"},{"size":3470,"mtime":1614015326913,"results":"75","hashOfConfig":"40"},{"size":3210,"mtime":1614015326962,"results":"76","hashOfConfig":"40"},{"size":3235,"mtime":1614015326912,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1u0q2q7",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"80"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"80"},"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\index.js",[],["169","170"],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\serviceWorker.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\App.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\API\\Weather.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Notes\\Notes.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Login\\Login.js",["171"],"import React from \"react\";\r\nimport Nav from \"../../UI/NavBar\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport Imag from \"../../UI/Imag\"; \r\n\r\nconst Login = (props) => {\r\n  return (\r\n    <div>\r\n      <Nav ColorChanged={props.colorchanged} RecieveColor={props.Color} CallingPage={\"Signup\"}/>\r\n      <Imag/>  \r\n      <LoginForm ColorChanged={props.colorchanged} RecieveColor={props.Color}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Signup\\Signup.js",["172"],"import React from \"react\";\r\nimport Nav from \"../../UI/NavBar\";\r\nimport SignupForm from \"./SignupForm\"; \r\nimport Imag from \"../../UI/Imag\"; \r\n \r\nconst Signup = (props) => {\r\n  return (\r\n    <div>\r\n      <Nav ColorChanged={props.colorchanged} RecieveColor={props.Color} CallingPage={\"Signin\"}/>\r\n      <Imag/>  \r\n      <SignupForm ColorChanged={props.colorchanged} RecieveColor={props.Color}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\Calendar.js",["173"],"import React, { Component } from \"react\";\r\nimport Nav from \"../../UI/NavBar\";\r\nimport Footer from '../../UI/Footer'\r\nimport CalendarForm from \"./CalendarCollection1\";\r\nclass CalendarList extends Component {\r\n  \r\n  state = {\r\n    SelectedDate: true,\r\n    currentEvents: [],\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Nav ColorChanged={this.props.colorchanged} RecieveColor={this.props.Color}/>\r\n        <CalendarForm RecieveColor={this.props.Color}/>\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CalendarList;\r\n","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\API\\API.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Signup\\SignupForm.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Login\\LoginForm.js",["174"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { MailOutlined, KeyOutlined, LoginOutlined} from \"@ant-design/icons\";\r\nimport UserInput from \"../../UI/UserInput\";\r\nimport NoteContainer from '../../UI/Modal';\r\nimport Button from \"../../UI/Button\";\r\nimport FadeIn  from \"react-fade-in\";\r\n\r\n\r\nconst InfoContainer = styled.div`\r\n    width: 440px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    margin: 4px;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nconst SignupForm = (props) => {\r\n    const IconColor = { \r\n        color : props.RecieveColor.IconC, \r\n        fontSize:\"25px\", \r\n        marginRight:\"9px\", \r\n        marginTop:\"4px\" }\r\n    \r\n    const ButtonIconColor = { \r\n        color : props.RecieveColor.IconC, \r\n        fontSize:\"20px\", \r\n        marginRight:\"9px\", \r\n        marginTop:\"4px\" }\r\n\r\n    const Email = <InfoContainer>\r\n            <FadeIn><MailOutlined style={IconColor}/></FadeIn>\r\n            <FadeIn><UserInput \r\n            inputType={\"text\"}\r\n            name=\"title\"\r\n            PlaceholderValue={\"E-mail\"}\r\n            widthValue={\"380px\"}\r\n            paddingVale={\"4px\"}\r\n            outlineValue={\"none\"}\r\n            fontSizeValue={\"1.2em\"}\r\n            fontFamilyValue={\"inherit\"}\r\n            IsCalledValue={\"FOCUS\"} \r\n            borderRadiusValue= {\"7px\"}\r\n            backGroundColorValue={props.RecieveColor.UserInputBGC}\r\n            FontColorValue={props.RecieveColor.UserInputFC}\r\n            PlaceHolderColorValue={props.RecieveColor.UserInputPHC}\r\n            borderColorValue={props.RecieveColor.BorderColor}\r\n            BorderValue={\"solid\"}\r\n            borderWidthValue=\"thin\"\r\n            marginRightValue={\"10px\"}\r\n            /></FadeIn>\r\n        </InfoContainer>\r\n    \r\n    const PassWord = <InfoContainer>\r\n            <FadeIn><KeyOutlined style={IconColor}/></FadeIn>\r\n            <FadeIn><UserInput \r\n            inputType={\"text\"}\r\n            name=\"title\"\r\n            PlaceholderValue={\"Password\"}\r\n            widthValue={\"380px\"}\r\n            paddingVale={\"4px\"}\r\n            outlineValue={\"none\"}\r\n            fontSizeValue={\"1.2em\"}\r\n            fontFamilyValue={\"inherit\"}\r\n            IsCalledValue={\"FOCUS\"} \r\n            borderRadiusValue= {\"7px\"}\r\n            backGroundColorValue={props.RecieveColor.UserInputBGC}\r\n            FontColorValue={props.RecieveColor.UserInputFC}\r\n            PlaceHolderColorValue={props.RecieveColor.UserInputPHC}\r\n            borderColorValue={props.RecieveColor.BorderColor}\r\n            BorderValue={\"solid\"}\r\n            borderWidthValue=\"thin\"\r\n            marginRightValue={\"10px\"}\r\n            /></FadeIn>\r\n        </InfoContainer>\r\n   \r\n   const LoginButton = <FadeIn>\r\n            <Button\r\n            width={\"120px\"}\r\n            marginBottomValue={\"10px\"}\r\n            marginLeftValue={\"35%\"}\r\n            fontSizeValue={\"20px\"}\r\n            borderRadiusValue={\"15px\"}\r\n            backGroundColorValue={props.RecieveColor.LogSignColor}\r\n            FontColorValue={props.RecieveColor.IconC}\r\n            borderColorValue={props.RecieveColor.BorderColor}\r\n            BorderValue=\"solid\"\r\n            borderWidthValue=\"thin\"\r\n            paddingInputValue=\"2px\"\r\n            text = {\"Login\"} \r\n            icon = {<LoginOutlined style={ButtonIconColor}/>}\r\n            />\r\n        </FadeIn>\r\n\r\nreturn (\r\n    <FadeIn><NoteContainer\r\n    position= {\"relative\"}\r\n    width= {\"470px\"}\r\n    margin= {\"200px auto 20px auto\"}\r\n    padding= {\"15px\"}\r\n    boxShadowValue= {\"0 1px 5px rgb(138, 137, 137)\"}\r\n    borderRadiusValue= {\"20px\"}\r\n    resizeValue={\"both\"}\r\n    backGroundColorValue={props.RecieveColor.NotekBGC}\r\n    >\r\n        {Email}\r\n        {PassWord}\r\n        {LoginButton}\r\n    </NoteContainer></FadeIn>\r\n)\r\n};\r\n\r\nexport default SignupForm; ","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Footer.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\NavBar.js",["175","176","177"],"import React, {useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SwitchIcon from './Switch'\r\nimport FadeIn from 'react-fade-in';\r\nimport UserIcon from \"./UserIcon\";\r\nimport { LoginOutlined, LogoutOutlined,AlipayOutlined } from \"@ant-design/icons\";\r\nimport AppButton from \"./Button\";\r\nimport NotesIcon from '@material-ui/icons/Notes';\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\r\nimport NoteAddOutlinedIcon from '@material-ui/icons/NoteAddOutlined';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst StyledNavBar = styled(FadeIn)` \r\n    align-items: center; \r\n    justify-content: space-between;\r\n    height: 50px;\r\n    background-color: #f5ba13;\r\n    margin: auto -16px;\r\n    padding: 16px 32px;\r\n    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.3);\r\n    display: flex;\r\n`;\r\nconst DisplayedUsername = styled.span`\r\n  align-items: center;\r\n  transform: translate(0, 30%);\r\n  color: ${(props) => ( props.TextColorInput ? props.TextColorInput : \"\")};\r\n  margin-top: 1px;\r\n`;\r\nconst RightNavBarItems = styled.div`\r\n  display: flex;\r\n  width: 500px;\r\n  justify-content: flex-end;\r\n`;\r\nconst LeftNavBarItems = styled.div`\r\n  display: flex;\r\n  width: 450px;\r\n  justify-content: flex-start;\r\n`;\r\nconst NavBar = (props) => {\r\n  const IconStyle = {\r\n    marginLeft: \"5px\",\r\n    fontSize: \"28px\" ,\r\n    color: props.RecieveColor.NavIconColor\r\n  }\r\n  //Close is not hovered on color style\r\n  const VisibilityStle1 = {\r\n    marginTop: \"13px\",\r\n    marginRight: \"8px\",\r\n    fontSize: \"28px\",\r\n    color: props.RecieveColor.NavIconColor\r\n };\r\n  //Close is hovered on color style\r\n  const VisibilityStle2 = {\r\n      marginTop: \"13px\",\r\n      marginRight: \"4px\",\r\n      fontSize: \"34px\",\r\n      color: props.RecieveColor.NavIconColor\r\n  };\r\n  //This is for change to calendar link\r\n  const [isCalendar, ChangeIsCalendar] = useState(true);\r\n  const GoToCalendar = isCalendar ? \r\n      (<CalendarTodayIcon onMouseEnter={() => ChangeIsCalendar(false)} style={VisibilityStle1} />)  \r\n      : \r\n      (<Link to={\"/calendar\"}> \r\n        <EventAvailableIcon  onMouseLeave={() => ChangeIsCalendar(true)} style={VisibilityStle2} />\r\n        </Link>)\r\n    \r\n  //This is for change to Notes link\r\n  const [isNote, ChangeIsNote] = useState(true);\r\n  const GoToNote = isNote ? \r\n      (<NoteAddOutlinedIcon onMouseEnter={() => ChangeIsNote(false)} style={VisibilityStle1} />)  \r\n      : \r\n      (<Link to={\"/\"} >\r\n      <NotesIcon   onMouseLeave={() => ChangeIsNote(true)} style={VisibilityStle2} />\r\n      </Link>)\r\n  //This is for the Login\r\n  const GoToLogin =<Link to={props.CallingPage == \"Signin\" ? \"/login\" : \"/signup\"} >\r\n    {props.CallingPage == \"Signin\" ?\r\n        <LoginOutlined  style={VisibilityStle1} />\r\n    :\r\n        <LogoutOutlined style={VisibilityStle1} />\r\n      }\r\n    </Link>\r\n\r\n  return(\r\n    <StyledNavBar>\r\n      <LeftNavBarItems>\r\n        <FadeIn><AlipayOutlined style={IconStyle}/></FadeIn>\r\n      </LeftNavBarItems>\r\n\r\n      <RightNavBarItems>\r\n        {GoToCalendar}\r\n        {GoToNote}\r\n        <SwitchIcon OnChangedColor={props.ColorChanged}/>\r\n        {GoToLogin}\r\n        <UserIcon username={\"Amr R. Mohamed\"} OnChangedColor={props.RecieveColor}/>\r\n        <DisplayedUsername \r\n          TextColorInput={props.RecieveColor.UserIconTextColor}>\r\n          <span style={{ fontWeight: \"bold\"}}>{\"Amr R. Mohamed\"}</span>\r\n        </DisplayedUsername>\r\n      </RightNavBarItems>\r\n    </StyledNavBar>\r\n  ) \r\n}\r\n\r\n\r\n\r\n\r\nexport default NavBar;","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\BlurDiv.js",["178"],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Notes\\CreateNote\\CreateNote.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Notes\\Note\\Note.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\UserInput.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Modal.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Button.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\event-utils.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\UserIcon.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Switch.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\TextArea.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\CalendarCollection1.js",["179","180","181"],"import React, { useState } from \"react\"; \r\nimport CalendarForm from \"./CalendarForm1\";\r\nimport ScheduleForm from \"./ScheduleForm/Schedule1\";\r\nimport styled from \"styled-components\";\r\nimport EventForm from \"./EditForm/EvenForm\"\r\n\r\nconst CalenderContainer = styled.div`\r\n    margin: 10px;\r\n    font-family: Arial, Helvetica Neue, Helvetica, sans-serif;\r\n    font-size: 16px;\r\n    color: cornflowerblue;   \r\n`;\r\nconst CalendarCollection = (props) => {\r\n  //Collection of Events\r\n  const [currentEvents, ChangeEventList] = useState([\r\n    {\r\n      id: \"1\",\r\n      title: \"Testoing for more \",\r\n      start: \"2021-02-13T12:30:00Z\",\r\n      end: \"2021-02-14T13:30:00Z\",\r\n      textColor: \"pink\",\r\n      description: \"lets play some game s\",\r\n      display: \"list-item\",\r\n      backgroundColor: \"black\",\r\n    },\r\n    {\r\n      id: \"3\",\r\n      title: \"Doc appoinmnet \",\r\n      start: \"2021-02-13\",\r\n      end: \"2021-02-13\",\r\n      startTime: \"10:45:00\",\r\n      endTime: \"12:45:00\",\r\n      textColor: \"pink\",\r\n      daysOfWeek: [\"1\"], //https://fullcalendar.io/docs/recurring-events \r\n      display: \"list-item\",\r\n      textColor: \"black\",\r\n    },\r\n  ]); \r\n  console.log(\"Calendar\")\r\n  console.log(currentEvents)\r\n  const [showSchedule, ChangeShowSchedule ] =useState(false) // to show the shedule model \r\n  const [SelectedStartedData, ChangeStartedData] = useState() //started selected data \r\n  const [SelectedEndedData, ChangeEndedData] = useState(); // ended slected data  \r\n  //the calendar form \r\n  const calendarForm = (<div style={{zIndex:\"1\"}}>\r\n    <CalendarForm\r\n      CalendarColor={props.RecieveColor} //send color form App\r\n      SendingEvents={currentEvents} //Pass down the list of eventsRecieveColor\r\n      CallingSchedule={(value) => ChangeShowSchedule(value)} //to call schedule\r\n      GetStartDate={(value) => ChangeStartedData(value)} //getting started clicked data\r\n      GetEndDate={(value) => ChangeEndedData(value)} //getting ended clicked data \r\n      ChangeEvents={(value) => ChangeEventList(value)}\r\n    />\r\n    </div>\r\n  );\r\n  //scheduling event is called \r\n  const scheduleForm = (\r\n    <ScheduleForm\r\n      submitEventValues={(value) => ChangeEventList(value)}\r\n      ScheduleColor={props.RecieveColor} //send color form App\r\n      CallingCalendar={(value) => ChangeShowSchedule(value)} //to call calendar back \r\n      SendSelectedSD={SelectedStartedData} //Selected Start Data\r\n      // SendSelectedED={ClickedEvent} //Selected End Data\r\n    />\r\n  ); \r\n  return (\r\n    <CalenderContainer >\r\n      {showSchedule ? scheduleForm : null}  \r\n      {showSchedule? null : calendarForm} \r\n    </CalenderContainer>\r\n  );\r\n};\r\nexport default CalendarCollection;\r\n","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Imag.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\EditForm\\EvenForm.js",["182","183"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport NoteContainer from \"../../../UI/Modal\";\r\nimport FadeIn from \"react-fade-in\"; \r\nimport { CloseCircleOutlined } from \"@ant-design/icons\";\r\nimport EditButton from \"./EditButton\";\r\nimport DeleteButton from \"./DeleteButton\";\r\n\r\n// import { SubmissionContainer } from \"../ScheduleForm/Containers/SubmitButton1\" ;\r\nconst EachateContainer = styled.div`\r\n    width: 460px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: ${props => props.JustifyContentCalue};\r\n    margin: 4px;\r\n`\r\nconst DateContainer = styled.div`\r\n    width: 400px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n` \r\nconst TitleStyle = styled.span`\r\n  padding: 4px ;\r\n  fontSize: 1.2em;\r\n  marginRight: 4px;\r\n  color: ${props => props.Coloring};\r\n`\r\nconst ContentStyle = styled.span`\r\n  padding: 4px ;\r\n  fontSize: 1.2em;\r\n  marginLeft: 20px;\r\n  `\r\nconst EventForm = (props) => { \r\n\r\n  // The Event information \r\n  const Header=<EachateContainer>\r\n    <span style={{ \r\n      padding: \"1px\" ,paddingTop: \"1px\" , \r\n      fontSize: \"1.2em\", marginLeft: \"150px\",\r\n      color: `${props.ScheduleColor.IconC}`}}>\r\n        Event Info\r\n    </span> \r\n    <CloseCircleOutlined\r\n      onClick={()=> props.closedEventForm(true)} \r\n      style={{marginRight: \"4px\", marginLeft: \"180px\", marginBottom: \"15px\",\r\n          fontSize: \"26px\", color: props.ScheduleColor.IconC}} // send the color list from the parent App file \r\n    />\r\n  </EachateContainer>  \r\n  //TItle Area props.ScheduleColor.IconC\r\n  const isTitle =<EachateContainer JustifyContentCalue={\"\"}>\r\n    <TitleStyle Coloring={props.ScheduleColor.IconC}>Title : </TitleStyle> \r\n    <ContentStyle >{props.EventClickedInfo.title}</ContentStyle> \r\n  </EachateContainer>\r\n  //Description Area props.ScheduleColor.IconC\r\n  const isDescription =<EachateContainer JustifyContentCalue={ \"\"}>\r\n    <TitleStyle Coloring={props.ScheduleColor.IconC}>Description : </TitleStyle> \r\n    <ContentStyle >{props.EventClickedInfo.description}</ContentStyle> \r\n  </EachateContainer>\r\n  //Url Area props.ScheduleColor.IconC\r\n  const isUrl =<EachateContainer JustifyContentCalue={ \"\"}>\r\n    <TitleStyle Coloring={props.ScheduleColor.IconC}>Url : </TitleStyle> \r\n    <ContentStyle >{ !props.EventClickedInfo.url == \"\" ? props.EventClickedInfo.url : \"......\"  }</ContentStyle> \r\n  </EachateContainer>\r\n  //Start Area props.ScheduleColor.IconC\r\n  const isStart =<EachateContainer JustifyContentCalue={ \"\"}>\r\n    <TitleStyle Coloring={props.ScheduleColor.IconC}>Start : </TitleStyle> \r\n    {/* <ContentStyle >{props.EventClickedInfo.Start}</ContentStyle>  */}\r\n  </EachateContainer>\r\n  //End Area props.ScheduleColor.IconC\r\n  const isEnd =<EachateContainer JustifyContentCalue={ \"\"}>\r\n    <TitleStyle Coloring={props.ScheduleColor.IconC}>End : </TitleStyle> \r\n    {/* <ContentStyle >{props.EventClickedInfo.End}</ContentStyle>  */}\r\n  </EachateContainer>\r\n  \r\n  // The content Area\r\n  const Content = <DateContainer>\r\n    {isTitle}\r\n    {isDescription}\r\n    {isUrl}\r\n    {isStart}\r\n    {isEnd}\r\n  </DateContainer>\r\n  \r\n  //The edit button\r\n  const isEditButton=\r\n  <EachateContainer JustifyContentCalue={ \"\"}>\r\n    <EditButton ColorChange={props.ScheduleColor}/>\r\n    <DeleteButton\r\n      EventsInfoList={props.PassedAllEvent} //list of all the Events created \r\n      IDofClickedEvent={props.EventClickedInfo.Id} //the clicked event ID \r\n      ReturnNewEvents={(value) => props.ChangeAllEvents(value)} //Delete selected event from all event and close model\r\n      CloseModel={(value) => props.closedEventForm(value)} //to return true if clicked\r\n      ColorChange={props.ScheduleColor} //Color list\r\n      />  \r\n  </EachateContainer>\r\n\r\n  const EventInfo= <NoteContainer\r\n        position={\"relative\"}\r\n        width={\"480px\"}\r\n        margin={\"30px auto 20px auto\"}\r\n        padding={\"15px\"}\r\n        boxShadowValue={\"0 1px 5px rgb(138, 137, 137)\"}\r\n        borderRadiusValue={\"7px\"}\r\n        resizeValue={\"both\"}\r\n        backGroundColorValue={props.ScheduleColor.NotekBGC}\r\n        FontColorValue={props.ScheduleColor.NoteFC}\r\n      > \r\n        {Header}\r\n        {Content}\r\n        {isEditButton}\r\n      </NoteContainer>\r\n\r\n  return (\r\n    <FadeIn>\r\n      {EventInfo}\r\n    </FadeIn>\r\n  );\r\n};\r\n\r\nexport default EventForm;\r\n","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\CalendarForm1.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Schedule1.js",["184","185","186","187","188"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport NoteContainer from \"../../../UI/Modal\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport {TitleContainer,DescriptionContainer,URLContainer} from \"./Containers/InputContainer\";\r\nimport {CalenderContianer,TimerContainer} from \"./Containers/DropDownContainer\";\r\nimport RDContainer from \"./Containers/DaysContainer\";\r\nimport SubmitButton from \"./Containers/SubmitButton1\";\r\nimport { CloseCircleOutlined } from \"@ant-design/icons\";\r\nconst InfoContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    position: fixed;\r\n    z-index: 5;\r\n    left: 0;\r\n    top: 0'\r\n    background-color: rgba(0,0,0, 0.5)\r\n`;\r\n\r\nconst Schedule = (props) => {\r\n    \r\n    //Close ICion Area\r\n    const CloseIcon = \r\n    (<CloseCircleOutlined\r\n        onClick={()=> props.CallingCalendar(false)} \r\n        style={{marginRight: \"4px\", marginLeft: \"95%\", marginBottom: \"15px\",\r\n            fontSize: \"26px\", color: props.ScheduleColor.IconC}} // send the color list from the parent App file \r\n    />)\r\n\r\n    //Title Area\r\n    const [getTitle, ChangeTitle] = useState(\"\");\r\n    const [TitlePH, ChangeTitlePH] = useState(\"Title ...\");\r\n    const Title = <TitleContainer\r\n            SubmitTitle={(value) => ChangeTitle(value)} //this is to return input value of the title and then send it to submit model\r\n            SubmitTitlePlaceHolder={TitlePH} //this is to send the placeholder for the title area\r\n            ScheduleColor={props.ScheduleColor}  // send the color list from the parent App file \r\n        />  \r\n    \r\n    //Description Area\r\n    const [getDescription, ChangeDescription] = useState(\"\");\r\n    const [DescriptionPH, ChangeDescriptionPH] = useState(\"Description ...\");\r\n    const Description = (\r\n        <DescriptionContainer\r\n        SubmitDescription={(value) => ChangeDescription(value)}\r\n        SubmitDescriptionPlaceHolder={DescriptionPH}\r\n        ScheduleColor={props.ScheduleColor}\r\n        />\r\n    );\r\n\r\n    //URL Area\r\n    const [getURL, ChangeURL] = useState();\r\n    const [URLPH, ChangeURLPH] = useState(\"Optional Attached Link For Description ...\");\r\n    const URL = (\r\n        <URLContainer\r\n        URLOption={(value) => ChangeURL(value)}\r\n        SubmitURLPH={URLPH}\r\n        ScheduleColor={props.ScheduleColor}\r\n        />\r\n    );\r\n    \r\n    // Data From and To\r\n    const [getFormDate, ChangeFormDate] = useState(); //this is the data that will be send to submit model to be added to the event list \r\n    const [getToDate, ChangeToDate] = useState();  //this is the data that will be send to submit model to be added to the event list \r\n    const StartDate= props.SendSelectedSD //This is the selected data in calendar\r\n    const EndDate= props.SendSelectedED//This is the selected data in calendar  \r\n    const Data = (\r\n        <CalenderContianer\r\n        SendSD={StartDate} //This is to send back the selected started data\r\n        SendED={EndDate} //This is to send back the selected ended data\r\n        GetFromDate={(value) => ChangeFormDate(value)} //Returning the selected data that the user chose \r\n        GetToDate={(value) => ChangeToDate(value)} //Returning the selected data that the user chose \r\n        ScheduleColor={props.ScheduleColor} // send the color list from the parent App file  \r\n        />\r\n    );\r\n\r\n    //This is for the time\r\n    const [StartHours, ChangeStartHour] = useState(); //have returned starting hour if time is needed\r\n    const [StartMinuts, ChangeStartMinuts] = useState(); //have returned starting minut if time is needed \r\n    const [TimeClicked, ChangeTimeClicked] = useState() //this to make sure that time is included or not \r\n    const Time = (\r\n        <TimerContainer\r\n        FromHourSelected={(value) => ChangeStartHour(value)} // return starting hour if time is needed\r\n        FromMinutsSelected={(value) => ChangeStartMinuts(value)} // return starting minut if time is needed \r\n        ScheduleColor={props.ScheduleColor} // send the color list from the parent App file  \r\n        isTime={(value) => ChangeTimeClicked(value)}\r\n        />\r\n    );\r\n\r\n    //this is for number of rebeated days \r\n    const [GetRepeatedDays, ChangeRepeatedDays] = useState()\r\n    const RepeatedDays =(<RDContainer\r\n        ScheduleColor={props.ScheduleColor} // send the color list from the parent App file  \r\n        SubmitNumberOfRP={(value) => ChangeRepeatedDays(value)} //returning the value of repeated days \r\n        />\r\n    );\r\n    //Submit Buton \r\n    const Submit = (\r\n        <SubmitButton \r\n            isCallingCalendar={value=> props.CallingCalendar(value)} //return the close value to return to calender from the submit model \r\n            isTitle={getTitle} //the Title value \r\n            CheckTitlePH={value => ChangeTitlePH(value)} //this is to change the title place holder if there is no title \r\n            isDescription={getDescription} //the Description value\r\n            CheckDescriptionPH={value => ChangeDescriptionPH(value)} //this is to change the description placeholder if there is no placeholder\r\n            isURL={getURL} //the URL value\r\n            isStartingDate= {getFormDate}\r\n            // {TimeClicked ? (getFormDate+'T12:00:00') : (getFormDate+\"T\"+StartHours+\":\"+StartMinuts+\"00\")} //the value of the Starting data\r\n            isEndingData={getToDate } //the value of Ending data\r\n            isRepeatedDays={GetRepeatedDays} //Values of Repeated Days\r\n            isEvent={props.submitEventValues}\r\n        />\r\n    );\r\n    const ScheduleForm = (\r\n        <FadeIn>\r\n            <NoteContainer\r\n                position={\"relative\"}\r\n                width={\"520px\"}\r\n                margin={\"30px auto 20px auto\"}\r\n                padding={\"15px\"}\r\n                boxShadowValue={\"0 1px 5px rgb(138, 137, 137)\"}\r\n                borderRadiusValue={\"7px\"}\r\n                resizeValue={\"both\"}\r\n                backGroundColorValue={props.ScheduleColor.NotekBGC} //// send the color list from the parent App file \r\n                FontColorValue={props.ScheduleColor.NoteFC} //// send the color list from the parent App file \r\n                >\r\n            {CloseIcon}\r\n            {Title} \r\n            {Description}\r\n            {URL}\r\n            {Data}\r\n            {Time}\r\n            {RepeatedDays}\r\n            {Submit}\r\n            </NoteContainer> \r\n        </FadeIn>\r\n    );\r\n\r\n  return ScheduleForm;\r\n};\r\n\r\nexport default Schedule;\r\n","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\EditForm\\EditButton.js",["189"],"import React, { useState } from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport { LoginOutlined } from \"@ant-design/icons\";\r\nimport Button from \"../../../UI/Button\";  \r\n\r\nconst EditButton = (props) => {\r\n  const ButtonIconColor = {\r\n    color: props.ColorChange.IconC,\r\n    fontSize: \"20px\",\r\n    marginRight: \"9px\",\r\n    marginTop: \"4px\",\r\n  };   \r\n\r\n//   const SubmitEvent = () => { \r\n//     return(\r\n//     //   props.isEvent((oldarr) => [...oldarr, CreateEvent]),\r\n//     //   props.isCallingCalendar(false)\r\n//     )\r\n//   };\r\n\r\n  const SubmitButton = (\r\n    <FadeIn>\r\n      <Button\r\n        width={\"120px\"}\r\n        marginBottomValue={\"10px\"}\r\n        marginLeftValue={\"100px\"}\r\n        fontSizeValue={\"20px\"}\r\n        borderRadiusValue={\"15px\"}\r\n        IsCalledValue={\"hover\"}\r\n        BorderValue=\"solid\"\r\n        borderWidthValue=\"thin\"\r\n        paddingInputValue=\"2px\"\r\n        // onClick={SubmitEvent}\r\n        text={\"Edit\"}\r\n        icon={<LoginOutlined style={ButtonIconColor} />}\r\n      />\r\n    </FadeIn>\r\n  );\r\n\r\n\r\n  return SubmitButton;\r\n};\r\n\r\nexport default EditButton;\r\n","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\EditForm\\DeleteButton.js",["190"],"import React, { useState } from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport { DeleteFilled } from \"@ant-design/icons\";\r\nimport Button from \"../../../UI/Button\";  \r\n\r\nconst DeleteButton = (props) => {\r\n  const ButtonIconColor = {\r\n    color: props.ColorChange.IconC,\r\n    fontSize: \"20px\",\r\n    marginRight: \"9px\",\r\n    marginTop: \"4px\",\r\n  };   \r\n  \r\nconst DeleteButton = () => { \r\n    const id = props.IDofClickedEvent //the Event id\r\n    const Delete = props.EventsInfoList  //copy the Events list\r\n    props.ReturnNewEvents(Delete.filter(Event => Event.id !== id))\r\n    props.CloseModel(true)\r\n  };\r\n\r\n  const SubmitButton = (\r\n    <FadeIn>\r\n      <Button\r\n        width={\"120px\"}\r\n        marginBottomValue={\"10px\"}\r\n        marginLeftValue={\"10%\"}\r\n        fontSizeValue={\"20px\"}\r\n        borderRadiusValue={\"15px\"}\r\n        IsCalledValue={\"hover\"}\r\n        BorderValue=\"solid\"\r\n        borderWidthValue=\"thin\"\r\n        paddingInputValue=\"2px\"\r\n        onClick={DeleteButton}\r\n        text={\"Delete\"}\r\n        icon={<DeleteFilled style={ButtonIconColor} />}\r\n      />\r\n    </FadeIn>\r\n  );\r\n\r\n\r\n  return SubmitButton;\r\n};\r\n\r\nexport default DeleteButton;\r\n","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\SubmitButton1.js",["191","192","193","194"],"import React, { useState, useEffect } from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport { LoginOutlined } from \"@ant-design/icons\";\r\nimport Button from \"../../../../UI/Button\";\r\nimport { createEventId } from \"../../event-utils\";\r\nimport { Title } from \"@material-ui/icons\";\r\nlet todayStr = new Date().toISOString().replace(/T.*$/, '') // YYYY-MM-DD of today\r\n\r\nconst SubmitButton = (props) => {\r\n  const ButtonIconColor = {\r\n    fontSize: \"20px\",\r\n    marginRight: \"9px\",\r\n    marginTop: \"4px\",\r\n  };  \r\n  console.log(props.isRepeatedDays)\r\n  const CreateEvent = { \r\n      id: createEventId(),  \r\n      title:  props.isTitle ,\r\n      description:  props.isDescription ,\r\n      Url:  props.isURL ,\r\n      start:  props.isStartingDate ,\r\n      end: props.isEndingData, \r\n      // daysOfWeek: props.isRepeatedDays,\r\n      display: \"list-item\",\r\n      textColor: \"red\",\r\n    };\r\n  const SubmitEvent = () => { \r\n    return(\r\n      props.isEvent((oldarr) => [...oldarr, CreateEvent]),\r\n      props.isCallingCalendar(false)\r\n    )\r\n  };\r\n\r\n  const SubmitButton = (\r\n    <FadeIn>\r\n      <Button\r\n        width={\"120px\"}\r\n        marginBottomValue={\"10px\"}\r\n        marginLeftValue={\"35%\"}\r\n        fontSizeValue={\"20px\"}\r\n        borderRadiusValue={\"15px\"}\r\n        IsCalledValue={\"hover\"}\r\n        BorderValue=\"solid\"\r\n        borderWidthValue=\"thin\"\r\n        paddingInputValue=\"2px\"\r\n        onClick={SubmitEvent}\r\n        text={\"Submit\"}\r\n        icon={<LoginOutlined style={ButtonIconColor} />}\r\n      />\r\n    </FadeIn>\r\n  );\r\n\r\n\r\n  return SubmitButton;\r\n};\r\n\r\nexport default SubmitButton;\r\n","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DaysContainer.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\InputContainer.js",["195"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport UserInput from '../../../../UI/UserInput'\r\nimport TextArea from '../../../../UI/TextArea';\r\nimport FadeIn  from 'react-fade-in';\r\nimport { LinkOutlined} from \"@ant-design/icons\";\r\nimport { Title } from '@material-ui/icons';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nconst InfoContainer = styled.div`\r\n    width: 440px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    margin: 4px;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nconst TitleContainer = (props) => {\r\n    const IconColor = { \r\n        color : props.ScheduleColor.IconC, \r\n        fontSize:\"25px\", \r\n        marginRight:\"15px\", \r\n        marginTop:\"4px\" \r\n    } \r\n    const title = <InfoContainer>\r\n        <FadeIn><Title style={IconColor}/></FadeIn>\r\n        <FadeIn><UserInput \r\n        key={`title` + 1}\r\n        // This is to change the Value of Title based on the input coming from schedule\r\n        onchangeValue={(event)=>props.SubmitTitle(event.target.value)}\r\n        //This is the Props that is coming from Schedule From once I click on submit\r\n        PlaceholderValue={props.SubmitTitlePlaceHolder}\r\n        name=\"title\"\r\n        inputType={\"text\"} \r\n        widthValue={\"425px\"}\r\n        paddingVale={\"4px\"}\r\n        outlineValue={\"none\"}\r\n        fontSizeValue={\"1.2em\"}\r\n        fontFamilyValue={\"inherit\"}\r\n        IsCalledValue={\"FOCUS\"} \r\n        borderRadiusValue= {\"7px\"}\r\n        backGroundColorValue={props.ScheduleColor.UserInputBGC}\r\n        FontColorValue={props.ScheduleColor.UserInputFC}\r\n        PlaceHolderColorValue={props.ScheduleColor.UserInputPHC}\r\n        borderColorValue={props.ScheduleColor.BorderColor}  \r\n        BorderValue={\"solid\"}\r\n        borderWidthValue=\"thin\"\r\n        marginRightValue={\"10px\"}\r\n        /></FadeIn>\r\n    </InfoContainer>\r\n\r\n    return(title)\r\n}\r\n\r\nconst DescriptionContainer = (props) => {\r\n    const IconColor = { \r\n        color : props.ScheduleColor.IconC, \r\n        fontSize:\"25px\", \r\n        marginRight:\"15px\", \r\n        marginTop:\"4px\" \r\n    }\r\n    const Description = <InfoContainer>\r\n        <FadeIn><DescriptionIcon style={IconColor}/></FadeIn>\r\n        <FadeIn><TextArea\r\n        key={`Description`+1} \r\n        // This is to change the Value of Title based on the input \r\n        onchangeValue={(event)=>props.SubmitDescription(event.target.value)}\r\n        //This is the Props that is coming from Schedule From once I click on submit\r\n        PlaceholderValue={props.SubmitDescriptionPlaceHolder}\r\n        rows={3}\r\n        name=\"Description\"\r\n        inputType={\"text\"} \r\n        widthValue={\"425px\"}\r\n        paddingVale={\"4px\"}\r\n        outlineValue={\"none\"}\r\n        fontSizeValue={\"1.2em\"}\r\n        fontFamilyValue={\"inherit\"}\r\n        IsCalledValue={\"FOCUS\"} \r\n        borderRadiusValue= {\"7px\"}\r\n        backGroundColorValue={props.ScheduleColor.UserInputBGC}\r\n        FontColorValue={props.ScheduleColor.UserInputFC}\r\n        PlaceHolderColorValue={props.ScheduleColor.UserInputPHC}\r\n        borderColorValue={props.ScheduleColor.BorderColor}  \r\n        BorderValue={\"solid\"}\r\n        resizeValue={\"vertical\"}\r\n        borderWidthValue=\"thin\"\r\n        marginRightValue={\"10px\"}\r\n        /></FadeIn>\r\n    </InfoContainer>\r\n\r\n\r\n    return (Description)\r\n}\r\n\r\nconst URLContainer = (props) => {\r\n    const IconColor = { \r\n        color : props.ScheduleColor.IconC, \r\n        fontSize:\"25px\", \r\n        marginRight:\"15px\", \r\n        marginTop:\"4px\" \r\n    }\r\n    const URL = <InfoContainer>\r\n        <FadeIn><LinkOutlined style={IconColor}/></FadeIn>\r\n        <FadeIn><UserInput \r\n        key={`AttachedLinkDescription` }\r\n        // This is to change the Value of Title based on the input \r\n        onchangeValue={(event)=>props.URLOption(event.target.value)}\r\n        //This is the Props that is coming from Schedule From once I click on submit\r\n        PlaceholderValue={props.SubmitURLPH}\r\n        name=\"Url\"\r\n        inputType={\"text\"} \r\n        widthValue={\"425px\"}\r\n        paddingVale={\"4px\"}\r\n        outlineValue={\"none\"}\r\n        fontSizeValue={\"1.2em\"}\r\n        fontFamilyValue={\"inherit\"}\r\n        IsCalledValue={\"FOCUS\"} \r\n        borderRadiusValue= {\"7px\"}\r\n        backGroundColorValue={props.ScheduleColor.UserInputBGC}\r\n        FontColorValue={props.ScheduleColor.UserInputFC}\r\n        PlaceHolderColorValue={props.ScheduleColor.UserInputPHC}\r\n        borderColorValue={props.ScheduleColor.BorderColor}    \r\n        BorderValue={\"solid\"}\r\n        borderWidthValue=\"thin\"\r\n        marginRightValue={\"10px\"}\r\n        /></FadeIn>\r\n    </InfoContainer>\r\n\r\n\r\n    return (URL)\r\n}\r\n\r\nexport  {TitleContainer, DescriptionContainer, URLContainer};","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DropDownContainer.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\TimeSelected.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\RepeatedDaysSelected.js",["196"],"import React, { useState } from \"react\";\r\nimport FadeIn  from 'react-fade-in';\r\nimport Inputdata from '../../../../../UI/UserInput';\r\nimport { createEventId } from \"../../../event-utils\";\r\n\r\n\r\nconst RepeatDaySelected = (props) => {\r\n    const [NumberOfRepeatedDays,ChangeNumberOfRepeatedDays] = useState([]) \r\n    const [Days,changeDays] = useState({\r\n        Sunday: {id: \"0\", value: false},\r\n        Monday: {id: \"1\", value: false},\r\n        Tuesday: {id: \"1\", value: false},\r\n        Wednesday: {id: \"3\", value: false},\r\n        Thursday: {id: \"4\", value: false},\r\n        Friday: {id: \"5\", value: false},\r\n        Saturday: {id: \"6\", value: false}\r\n    })\r\n    const ChoosenDay = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'] \r\n    const handleRepeatedDays = (e) => {\r\n        const newDays = {...Days}\r\n        const onchangeValue = e.target.value\r\n        newDays[onchangeValue].value = !newDays[onchangeValue].value\r\n        changeDays(newDays)\r\n        //Returning the value of id of each day if it is clicked \r\n        ChangeNumberOfRepeatedDays(Object.values(Days).map(item => {\r\n            if (item.value) return item.id\r\n        }).filter(item => item))\r\n    }\r\n    \r\n    const RepeatedDayContainer = (DayValue,OnChangeInputValue) => {\r\n        return [<Inputdata \r\n            key={NumberOfRepeatedDays.id + createEventId()}\r\n            inputType={\"checkbox\"}\r\n            name=\"title\"\r\n            widthValue={\"20px\"}\r\n            paddingVale={\"2px\"}\r\n            outlineValue={\"none\"}\r\n            fontSizeValue={\"1.2em\"}\r\n            fontFamilyValue={\"inherit\"}\r\n            IsCalledValue={\"FOCUS\"} \r\n            borderRadiusValue= {\"7px\"}\r\n            backGroundColorValue={ props.RecievedColor.UserInputBGC}\r\n            FontColorValue={props.RecievedColor.UserInputFC}\r\n            PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\r\n            borderColorValue={props.RecievedColor.BorderColor} \r\n            BorderValue={\"solid\"}\r\n            borderWidthValue={\"thin\"}\r\n            marginRightValue={\"5px\"}\r\n            marginTopValue={\"4px\"}\r\n            checked={Days[DayValue].value}\r\n            onchangeValue = {OnChangeInputValue}\r\n            InputValue = {DayValue}\r\n            ></Inputdata>,\r\n            <label key={NumberOfRepeatedDays.id} style={{marginRight: \"10px\"}}>{DayValue}</label>]\r\n        }\r\n        \r\n    const LineOne = [RepeatedDayContainer(ChoosenDay[0],handleRepeatedDays),\r\n                     RepeatedDayContainer(ChoosenDay[1],handleRepeatedDays),\r\n                     RepeatedDayContainer(ChoosenDay[2],handleRepeatedDays),\r\n                     RepeatedDayContainer(ChoosenDay[3],handleRepeatedDays)]\r\n    const LineTwo = [RepeatedDayContainer(ChoosenDay[4],handleRepeatedDays),\r\n                     RepeatedDayContainer(ChoosenDay[5],handleRepeatedDays),\r\n                     RepeatedDayContainer(ChoosenDay[6],handleRepeatedDays)]\r\n    \r\n    props.ValueOfRepeatedDays(NumberOfRepeatedDays);\r\n    return (  \r\n    <FadeIn>\r\n        <div style={{display: \"flex\",width: \"50px\", flexDirection: \"row\"}}>\r\n             {LineOne} \r\n        </div>\r\n        <div style={{\r\n            display: \"flex\",\r\n            width: \"50px\", \r\n            flexDirection: \"row\", \r\n            marginTop: \"10px\", \r\n            marginLeft: \"70px\", \r\n            marginBottom: \"8px\"}}\r\n        >\r\n             {LineTwo} \r\n        </div>\r\n    </FadeIn>\r\n       )\r\n}\r\n\r\nexport default RepeatDaySelected;","C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\UI\\Select.js",[],"C:\\Users\\amohamed\\Desktop\\project\\notesk\\src\\Routes\\Calendar\\ScheduleForm\\Containers\\DataCollection\\OptionsForm.js",["197"],"import React, { useState } from \"react\";\r\nimport { createEventId } from \"../../../event-utils\";\r\n\r\n//this is for the hour input \r\nconst HourValue = (props) => {\r\n\r\n    const Hours = ['01','02','03','04','05','06','07','08','09','10','11','12']\r\n    const DailyHours = (\r\n        [Hours.map((Hour, index) => \r\n            <option disabled={props.DisabledHour}  key={index.id + createEventId()} value={Hour}>{Hour}</option>)]\r\n        )\r\n    return(DailyHours)\r\n}\r\nconst MinutsValue = (props) => {\r\n\r\n    //this is for the hour input \r\n    const Minuts = ['05','10','15','20','25','30','35','40','45','50','55']\r\n    const DailyMinut =(\r\n        [Minuts.map((Minut, index) => \r\n            <option disabled={props.DisabledMinuts} key={index.id + createEventId()} value={Minut}>{Minut}</option>)]\r\n        )\r\n    return(DailyMinut)\r\n}\r\nconst TwelveHourSystemValue = (props) => {\r\n\r\n    //this for either AM or PM\r\n    const TwelveHourSystem = ['AM','PM']\r\n    const DayDivided =(\r\n        [TwelveHourSystem.map((DayTime, index) => \r\n            <option disabled={props.DisabledHourSystem} key={index.id + createEventId()} value={DayTime}>{DayTime}</option>)]\r\n        )\r\n    return(DayDivided)\r\n}\r\nconst NumberOfYearsValue = (props) => { \r\n    //this is for the years from this year \r\n    const NumberOfYears = [ '2020','2021', '2022', '2023', '2024','2025', '2026', \r\n                            '2027', '2028', '2029', '2030', '2031', '2032','2033', \r\n                            '2034','2035', '2036', '2037', '2038', '2039','2040']\r\n    const YearContainer = (\r\n        [NumberOfYears.map((year, index) => <option    key={index.id + createEventId()} value={year}>{year}</option>)]\r\n    )\r\n    \r\n    return(\r\n        YearContainer\r\n        )\r\n}\r\nconst NumberOfMonthsValue = (props) => { \r\n    //this is for the months in a year \r\n    const NumberOfMonths = ['01','02','03','04','05','06','07','08','09','10','11','12']\r\n    const MonthContainer = (\r\n        [NumberOfMonths.map((month, index) => <option  key={index.id + createEventId()}  value={month}>{month}</option>)]\r\n        )\r\n    return(MonthContainer)\r\n}\r\nconst NumberOfDaysValue = (props) => { \r\n    //this is for the days in a Month \r\n    const NumberOfDays = ['01','02','03','04','05','06','07','08','09','10',\r\n                        '11','12','13','14','15','16','17','18','19','20',\r\n                        '21','22','23','24','25','26','27','28','29','30','31']\r\n    const DayContainer = (\r\n        [NumberOfDays.map((days,index ) => <option  key={index.id + createEventId()} value={days}>{days}</option>)]\r\n        )\r\n    return(DayContainer)\r\n}\r\nconst ColorOptionsValue = () => {\r\n\r\n    //this is for the days in a Month \r\n    const ColorChoose = ['Choose Color','BlueViolet','Black','CornflowerBlue','DarkMagenta','DimGrey',\r\n                            'DodgerBlue','Fuchsia','MidnightBlue','Purple','Salmon']\r\n    const ColorContainer = (\r\n        [ColorChoose.map((Colors,index ) => <option  key={index.id + createEventId()} value={Colors}>{Colors}</option>)]\r\n        )\r\n    return(ColorContainer)\r\n}\r\n\r\nexport {HourValue, MinutsValue, TwelveHourSystemValue, \r\n        NumberOfYearsValue, NumberOfMonthsValue, NumberOfDaysValue, \r\n        ColorOptionsValue};\r\n",{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":14},{"ruleId":"202","severity":1,"message":"203","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":14},{"ruleId":"202","severity":1,"message":"206","line":4,"column":8,"nodeType":"204","messageId":"205","endLine":4,"endColumn":16},{"ruleId":"202","severity":1,"message":"207","line":3,"column":52,"nodeType":"204","messageId":"205","endLine":3,"endColumn":67},{"ruleId":"202","severity":1,"message":"208","line":6,"column":10,"nodeType":"204","messageId":"205","endLine":6,"endColumn":23},{"ruleId":"202","severity":1,"message":"209","line":6,"column":25,"nodeType":"204","messageId":"205","endLine":6,"endColumn":39},{"ruleId":"202","severity":1,"message":"210","line":7,"column":8,"nodeType":"204","messageId":"205","endLine":7,"endColumn":17},{"ruleId":"211","severity":1,"message":"212","line":3,"column":1,"nodeType":"213","messageId":"214","endLine":5,"endColumn":15},{"ruleId":"202","severity":1,"message":"215","line":5,"column":8,"nodeType":"204","messageId":"205","endLine":5,"endColumn":17},{"ruleId":"216","severity":1,"message":"217","line":36,"column":7,"nodeType":"218","messageId":"219","endLine":36,"endColumn":16},{"ruleId":"202","severity":1,"message":"220","line":43,"column":10,"nodeType":"204","messageId":"205","endLine":43,"endColumn":27},{"ruleId":"202","severity":1,"message":"221","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"222","severity":1,"message":"223","line":63,"column":50,"nodeType":"224","messageId":"219","endLine":63,"endColumn":52},{"ruleId":"202","severity":1,"message":"225","line":10,"column":7,"nodeType":"204","messageId":"205","endLine":10,"endColumn":20},{"ruleId":"202","severity":1,"message":"226","line":52,"column":19,"nodeType":"204","messageId":"205","endLine":52,"endColumn":30},{"ruleId":"202","severity":1,"message":"227","line":77,"column":12,"nodeType":"204","messageId":"205","endLine":77,"endColumn":22},{"ruleId":"202","severity":1,"message":"228","line":78,"column":12,"nodeType":"204","messageId":"205","endLine":78,"endColumn":23},{"ruleId":"202","severity":1,"message":"229","line":79,"column":12,"nodeType":"204","messageId":"205","endLine":79,"endColumn":23},{"ruleId":"202","severity":1,"message":"221","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"202","severity":1,"message":"221","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"202","severity":1,"message":"221","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"202","severity":1,"message":"230","line":1,"column":27,"nodeType":"204","messageId":"205","endLine":1,"endColumn":36},{"ruleId":"202","severity":1,"message":"231","line":6,"column":10,"nodeType":"204","messageId":"205","endLine":6,"endColumn":15},{"ruleId":"202","severity":1,"message":"232","line":7,"column":5,"nodeType":"204","messageId":"205","endLine":7,"endColumn":13},{"ruleId":"202","severity":1,"message":"221","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"233","severity":1,"message":"234","line":25,"column":65,"nodeType":"235","messageId":"236","endLine":25,"endColumn":67},{"ruleId":"202","severity":1,"message":"221","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},"no-native-reassign",["237"],"no-negated-in-lhs",["238"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'Schedule' is defined but never used.","'UserAddOutlined' is defined but never used.","'LoginOutlined' is defined but never used.","'LogoutOutlined' is defined but never used.","'AppButton' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'EventForm' is defined but never used.","no-dupe-keys","Duplicate key 'textColor'.","ObjectExpression","unexpected","'SelectedEndedData' is assigned a value but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'InfoContainer' is assigned a value but never used.","'ChangeURLPH' is assigned a value but never used.","'StartHours' is assigned a value but never used.","'StartMinuts' is assigned a value but never used.","'TimeClicked' is assigned a value but never used.","'useEffect' is defined but never used.","'Title' is defined but never used.","'todayStr' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]