[{"/Users/mero/projects/notesk/src/index.js":"1","/Users/mero/projects/notesk/src/App.js":"2","/Users/mero/projects/notesk/src/serviceWorker.js":"3","/Users/mero/projects/notesk/src/API/Weather.js":"4","/Users/mero/projects/notesk/src/Routes/Notes/Notes.js":"5","/Users/mero/projects/notesk/src/Routes/Login/Login.js":"6","/Users/mero/projects/notesk/src/Routes/Calendar/Calendar.js":"7","/Users/mero/projects/notesk/src/Routes/Signup/Signup.js":"8","/Users/mero/projects/notesk/src/API/API.js":"9","/Users/mero/projects/notesk/src/Routes/Signup/SignupForm.js":"10","/Users/mero/projects/notesk/src/Routes/Login/LoginForm.js":"11","/Users/mero/projects/notesk/src/Routes/Calendar/CalendarCollection1.js":"12","/Users/mero/projects/notesk/src/UI/UserInput.js":"13","/Users/mero/projects/notesk/src/UI/NavBar.js":"14","/Users/mero/projects/notesk/src/UI/Footer.js":"15","/Users/mero/projects/notesk/src/UI/Imag.js":"16","/Users/mero/projects/notesk/src/Routes/Notes/Note/Note.js":"17","/Users/mero/projects/notesk/src/Routes/Notes/CreateNote/CreateNote.js":"18","/Users/mero/projects/notesk/src/UI/Modal.js":"19","/Users/mero/projects/notesk/src/UI/Button.js":"20","/Users/mero/projects/notesk/src/Routes/Calendar/CalendarForm1.js":"21","/Users/mero/projects/notesk/src/UI/Switch.js":"22","/Users/mero/projects/notesk/src/UI/UserIcon.js":"23","/Users/mero/projects/notesk/src/UI/TextArea.js":"24","/Users/mero/projects/notesk/src/Routes/Calendar/ScheduleForm/Schedule1.js":"25","/Users/mero/projects/notesk/src/Routes/Calendar/EditForm/EvenForm.js":"26","/Users/mero/projects/notesk/src/Routes/Calendar/event-utils.js":"27","/Users/mero/projects/notesk/src/Routes/Calendar/EditForm/EditButton.js":"28","/Users/mero/projects/notesk/src/Routes/Calendar/EditForm/DeleteButton.js":"29","/Users/mero/projects/notesk/src/Routes/Calendar/ScheduleForm/Containers/DropDownContainer.js":"30","/Users/mero/projects/notesk/src/Routes/Calendar/ScheduleForm/Containers/InputContainer.js":"31","/Users/mero/projects/notesk/src/Routes/Calendar/ScheduleForm/Containers/DaysContainer.js":"32","/Users/mero/projects/notesk/src/Routes/Calendar/ScheduleForm/Containers/SubmitButton1.js":"33","/Users/mero/projects/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/RepeatedDaysSelected.js":"34","/Users/mero/projects/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/TimeSelected.js":"35","/Users/mero/projects/notesk/src/UI/Select.js":"36","/Users/mero/projects/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/OptionsForm.js":"37"},{"size":481,"mtime":1613833074430,"results":"38","hashOfConfig":"39"},{"size":2507,"mtime":1613833592364,"results":"40","hashOfConfig":"39"},{"size":5086,"mtime":1613833074430,"results":"41","hashOfConfig":"39"},{"size":1102,"mtime":1613833592364,"results":"42","hashOfConfig":"39"},{"size":1980,"mtime":1613833592451,"results":"43","hashOfConfig":"39"},{"size":418,"mtime":1613833592450,"results":"44","hashOfConfig":"39"},{"size":525,"mtime":1613833592429,"results":"45","hashOfConfig":"39"},{"size":425,"mtime":1613833592451,"results":"46","hashOfConfig":"39"},{"size":313,"mtime":1613833074425,"results":"47","hashOfConfig":"39"},{"size":10298,"mtime":1613833592451,"results":"48","hashOfConfig":"39"},{"size":3692,"mtime":1613833592450,"results":"49","hashOfConfig":"39"},{"size":2600,"mtime":1613856669782,"results":"50","hashOfConfig":"39"},{"size":4273,"mtime":1613833592454,"results":"51","hashOfConfig":"39"},{"size":3440,"mtime":1613833592453,"results":"52","hashOfConfig":"39"},{"size":521,"mtime":1613833074429,"results":"53","hashOfConfig":"39"},{"size":436,"mtime":1613833592452,"results":"54","hashOfConfig":"39"},{"size":6058,"mtime":1613833592450,"results":"55","hashOfConfig":"39"},{"size":6099,"mtime":1613833074427,"results":"56","hashOfConfig":"39"},{"size":3439,"mtime":1613833592452,"results":"57","hashOfConfig":"39"},{"size":2896,"mtime":1613833592452,"results":"58","hashOfConfig":"39"},{"size":4254,"mtime":1614017091507,"results":"59","hashOfConfig":"39"},{"size":4575,"mtime":1613833592453,"results":"60","hashOfConfig":"39"},{"size":929,"mtime":1613833074430,"results":"61","hashOfConfig":"39"},{"size":2995,"mtime":1613833074429,"results":"62","hashOfConfig":"39"},{"size":6282,"mtime":1613856099238,"results":"63","hashOfConfig":"39"},{"size":4232,"mtime":1613833592447,"results":"64","hashOfConfig":"39"},{"size":378,"mtime":1613833074427,"results":"65","hashOfConfig":"39"},{"size":1051,"mtime":1613833592447,"results":"66","hashOfConfig":"39"},{"size":1125,"mtime":1613833592446,"results":"67","hashOfConfig":"39"},{"size":6283,"mtime":1613833592448,"results":"68","hashOfConfig":"39"},{"size":4599,"mtime":1613833592449,"results":"69","hashOfConfig":"39"},{"size":1149,"mtime":1613833592448,"results":"70","hashOfConfig":"39"},{"size":1536,"mtime":1613857234424,"results":"71","hashOfConfig":"39"},{"size":3386,"mtime":1613833592448,"results":"72","hashOfConfig":"39"},{"size":4351,"mtime":1613833592448,"results":"73","hashOfConfig":"39"},{"size":3140,"mtime":1613833592453,"results":"74","hashOfConfig":"39"},{"size":3157,"mtime":1613833592448,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"glgeh8",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"78"},"/Users/mero/projects/notesk/src/index.js",[],["161","162"],"/Users/mero/projects/notesk/src/App.js",[],"/Users/mero/projects/notesk/src/serviceWorker.js",[],"/Users/mero/projects/notesk/src/API/Weather.js",[],"/Users/mero/projects/notesk/src/Routes/Notes/Notes.js",[],"/Users/mero/projects/notesk/src/Routes/Login/Login.js",[],"/Users/mero/projects/notesk/src/Routes/Calendar/Calendar.js",[],"/Users/mero/projects/notesk/src/Routes/Signup/Signup.js",[],"/Users/mero/projects/notesk/src/API/API.js",[],"/Users/mero/projects/notesk/src/Routes/Signup/SignupForm.js",[],"/Users/mero/projects/notesk/src/Routes/Login/LoginForm.js",[],"/Users/mero/projects/notesk/src/Routes/Calendar/CalendarCollection1.js",["163","164","165"],"import React, { useState } from \"react\"; \nimport CalendarForm from \"./CalendarForm1\";\nimport ScheduleForm from \"./ScheduleForm/Schedule1\";\nimport styled from \"styled-components\";\nimport EventForm from \"./EditForm/EvenForm\"\n\nconst CalenderContainer = styled.div`\n    margin: 10px;\n    font-family: Arial, Helvetica Neue, Helvetica, sans-serif;\n    font-size: 16px;\n    color: cornflowerblue;   \n`;\nconst CalendarCollection = (props) => {\n  //Collection of Events\n  const [currentEvents, ChangeEventList] = useState([\n    {\n      id: \"1\",\n      title: \"Testoing for more \",\n      start: \"2021-02-13T12:30:00Z\",\n      end: \"2021-02-14T13:30:00Z\",\n      textColor: \"pink\",\n      description: \"lets play some game s\",\n      display: \"list-item\",\n      backgroundColor: \"black\",\n    },\n    {\n      id: \"3\",\n      title: \"Doc appoinmnet \",\n      start: \"2021-02-13\",\n      end: \"2021-02-13\",\n      startTime: \"10:45:00\",\n      endTime: \"12:45:00\",\n      textColor: \"pink\",\n      daysOfWeek: [\"1\"], //https://fullcalendar.io/docs/recurring-events \n      display: \"list-item\",\n      textColor: \"black\",\n    },\n  ]); \n  console.log(\"Calendar\")\n  console.log(currentEvents)\n  const [showSchedule, ChangeShowSchedule ] =useState(false) // to show the shedule model \n  const [SelectedStartedData, ChangeStartedData] = useState() //started selected data \n  const [SelectedEndedData, ChangeEndedData] = useState(); // ended slected data  \n  //the calendar form \n  const calendarForm = (<div style={{zIndex:\"1\"}}>\n    <CalendarForm\n      CalendarColor={props.RecieveColor} //send color form App\n      SendingEvents={currentEvents} //Pass down the list of eventsRecieveColor\n      CallingSchedule={(value) => ChangeShowSchedule(value)} //to call schedule\n      GetStartDate={(value) => ChangeStartedData(value)} //getting started clicked data\n      GetEndDate={(value) => ChangeEndedData(value)} //getting ended clicked data \n      ChangeEvents={(value) => ChangeEventList(value)}\n    />\n    </div>\n  );\n  //scheduling event is called \n  const scheduleForm = (\n    <ScheduleForm\n      submitEventValues={(value) => ChangeEventList(value)}\n      ScheduleColor={props.RecieveColor} //send color form App\n      CallingCalendar={(value) => ChangeShowSchedule(value)} //to call calendar back \n      SendSelectedSD={SelectedStartedData} //Selected Start Data\n      // SendSelectedED={ClickedEvent} //Selected End Data\n    />\n  ); \n  return (\n    <CalenderContainer >\n      {showSchedule ? scheduleForm : null}  \n      {showSchedule? null : calendarForm} \n    </CalenderContainer>\n  );\n};\nexport default CalendarCollection;\n","/Users/mero/projects/notesk/src/UI/UserInput.js",[],"/Users/mero/projects/notesk/src/UI/NavBar.js",["166","167","168"],"import React, {useState} from \"react\";\nimport styled from \"styled-components\";\nimport SwitchIcon from './Switch'\nimport FadeIn from 'react-fade-in';\nimport UserIcon from \"./UserIcon\";\nimport { LoginOutlined, LogoutOutlined,AlipayOutlined } from \"@ant-design/icons\";\nimport AppButton from \"./Button\";\nimport NotesIcon from '@material-ui/icons/Notes';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\nimport NoteAddOutlinedIcon from '@material-ui/icons/NoteAddOutlined';\nimport { Link } from \"react-router-dom\";\n\nconst StyledNavBar = styled(FadeIn)` \n    align-items: center; \n    justify-content: space-between;\n    height: 50px;\n    background-color: #f5ba13;\n    margin: auto -16px;\n    padding: 16px 32px;\n    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.3);\n    display: flex;\n`;\nconst DisplayedUsername = styled.span`\n  align-items: center;\n  transform: translate(0, 30%);\n  color: ${(props) => ( props.TextColorInput ? props.TextColorInput : \"\")};\n  margin-top: 1px;\n`;\nconst RightNavBarItems = styled.div`\n  display: flex;\n  width: 500px;\n  justify-content: flex-end;\n`;\nconst LeftNavBarItems = styled.div`\n  display: flex;\n  width: 450px;\n  justify-content: flex-start;\n`;\nconst NavBar = (props) => {\n  const IconStyle = {\n    marginLeft: \"5px\",\n    fontSize: \"28px\" ,\n    color: props.RecieveColor.NavIconColor\n  }\n  //Close is not hovered on color style\n  const VisibilityStle1 = {\n    marginTop: \"13px\",\n    marginRight: \"8px\",\n    fontSize: \"28px\",\n    color: props.RecieveColor.NavIconColor\n };\n  //Close is hovered on color style\n  const VisibilityStle2 = {\n      marginTop: \"13px\",\n      marginRight: \"4px\",\n      fontSize: \"34px\",\n      color: props.RecieveColor.NavIconColor\n  };\n  //This is for change to calendar link\n  const [isCalendar, ChangeIsCalendar] = useState(true);\n  const GoToCalendar = isCalendar ? \n      (<CalendarTodayIcon onMouseEnter={() => ChangeIsCalendar(false)} style={VisibilityStle1} />)  \n      : \n      (<Link to={\"/calendar\"}> \n        <EventAvailableIcon  onMouseLeave={() => ChangeIsCalendar(true)} style={VisibilityStle2} />\n        </Link>)\n    \n  //This is for change to Notes link\n  const [isNote, ChangeIsNote] = useState(true);\n  const GoToNote = isNote ? \n      (<NoteAddOutlinedIcon onMouseEnter={() => ChangeIsNote(false)} style={VisibilityStle1} />)  \n      : \n      (<Link to={\"/\"} >\n      <NotesIcon   onMouseLeave={() => ChangeIsNote(true)} style={VisibilityStle2} />\n      </Link>)\n  //This is for the Login\n  const GoToLogin =<Link to={props.CallingPage == \"Signin\" ? \"/login\" : \"/signup\"} >\n    {props.CallingPage == \"Signin\" ?\n        <LoginOutlined  style={VisibilityStle1} />\n    :\n        <LogoutOutlined style={VisibilityStle1} />\n      }\n    </Link>\n\n  return(\n    <StyledNavBar>\n      <LeftNavBarItems>\n        <FadeIn><AlipayOutlined style={IconStyle}/></FadeIn>\n      </LeftNavBarItems>\n\n      <RightNavBarItems>\n        {GoToCalendar}\n        {GoToNote}\n        <SwitchIcon OnChangedColor={props.ColorChanged}/>\n        {GoToLogin}\n        <UserIcon username={\"Amr R. Mohamed\"} OnChangedColor={props.RecieveColor}/>\n        <DisplayedUsername \n          TextColorInput={props.RecieveColor.UserIconTextColor}>\n          <span style={{ fontWeight: \"bold\"}}>{\"Amr R. Mohamed\"}</span>\n        </DisplayedUsername>\n      </RightNavBarItems>\n    </StyledNavBar>\n  ) \n}\n\n\n\n\nexport default NavBar;","/Users/mero/projects/notesk/src/UI/Footer.js",[],"/Users/mero/projects/notesk/src/UI/Imag.js",[],"/Users/mero/projects/notesk/src/Routes/Notes/Note/Note.js",[],"/Users/mero/projects/notesk/src/Routes/Notes/CreateNote/CreateNote.js",[],"/Users/mero/projects/notesk/src/UI/Modal.js",[],"/Users/mero/projects/notesk/src/UI/Button.js",[],"/Users/mero/projects/notesk/src/Routes/Calendar/CalendarForm1.js",["169","170"],"/Users/mero/projects/notesk/src/UI/Switch.js",[],"/Users/mero/projects/notesk/src/UI/UserIcon.js",[],"/Users/mero/projects/notesk/src/UI/TextArea.js",[],"/Users/mero/projects/notesk/src/Routes/Calendar/ScheduleForm/Schedule1.js",["171","172","173","174","175"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport NoteContainer from \"../../../UI/Modal\";\nimport FadeIn from \"react-fade-in\";\nimport {TitleContainer,DescriptionContainer,URLContainer} from \"./Containers/InputContainer\";\nimport {CalenderContianer,TimerContainer} from \"./Containers/DropDownContainer\";\nimport RDContainer from \"./Containers/DaysContainer\";\nimport SubmitButton from \"./Containers/SubmitButton1\";\nimport { CloseCircleOutlined } from \"@ant-design/icons\";\nconst InfoContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    position: fixed;\n    z-index: 5;\n    left: 0;\n    top: 0'\n    background-color: rgba(0,0,0, 0.5)\n`;\n\nconst Schedule = (props) => {\n    \n    //Close ICion Area\n    const CloseIcon = \n    (<CloseCircleOutlined\n        onClick={()=> props.CallingCalendar(false)} \n        style={{marginRight: \"4px\", marginLeft: \"95%\", marginBottom: \"15px\",\n            fontSize: \"26px\", color: props.ScheduleColor.IconC}} // send the color list from the parent App file \n    />)\n\n    //Title Area\n    const [getTitle, ChangeTitle] = useState(\"\");\n    const [TitlePH, ChangeTitlePH] = useState(\"Title ...\");\n    const Title = <TitleContainer\n            SubmitTitle={(value) => ChangeTitle(value)} //this is to return input value of the title and then send it to submit model\n            SubmitTitlePlaceHolder={TitlePH} //this is to send the placeholder for the title area\n            ScheduleColor={props.ScheduleColor}  // send the color list from the parent App file \n        />  \n    \n    //Description Area\n    const [getDescription, ChangeDescription] = useState(\"\");\n    const [DescriptionPH, ChangeDescriptionPH] = useState(\"Description ...\");\n    const Description = (\n        <DescriptionContainer\n        SubmitDescription={(value) => ChangeDescription(value)}\n        SubmitDescriptionPlaceHolder={DescriptionPH}\n        ScheduleColor={props.ScheduleColor}\n        />\n    );\n\n    //URL Area\n    const [getURL, ChangeURL] = useState();\n    const [URLPH, ChangeURLPH] = useState(\"Optional Attached Link For Description ...\");\n    const URL = (\n        <URLContainer\n        URLOption={(value) => ChangeURL(value)}\n        SubmitURLPH={URLPH}\n        ScheduleColor={props.ScheduleColor}\n        />\n    );\n    \n    // Data From and To\n    const [getFormDate, ChangeFormDate] = useState(); //this is the data that will be send to submit model to be added to the event list \n    const [getToDate, ChangeToDate] = useState();  //this is the data that will be send to submit model to be added to the event list \n    const StartDate= props.SendSelectedSD //This is the selected data in calendar\n    const EndDate= props.SendSelectedED//This is the selected data in calendar  \n    const Data = (\n        <CalenderContianer\n        SendSD={StartDate} //This is to send back the selected started data\n        SendED={EndDate} //This is to send back the selected ended data\n        GetFromDate={(value) => ChangeFormDate(value)} //Returning the selected data that the user chose \n        GetToDate={(value) => ChangeToDate(value)} //Returning the selected data that the user chose \n        ScheduleColor={props.ScheduleColor} // send the color list from the parent App file  \n        />\n    );\n\n    //This is for the time\n    const [StartHours, ChangeStartHour] = useState(); //have returned starting hour if time is needed\n    const [StartMinuts, ChangeStartMinuts] = useState(); //have returned starting minut if time is needed \n    const [TimeClicked, ChangeTimeClicked] = useState() //this to make sure that time is included or not \n    const Time = (\n        <TimerContainer\n        FromHourSelected={(value) => ChangeStartHour(value)} // return starting hour if time is needed\n        FromMinutsSelected={(value) => ChangeStartMinuts(value)} // return starting minut if time is needed \n        ScheduleColor={props.ScheduleColor} // send the color list from the parent App file  \n        isTime={(value) => ChangeTimeClicked(value)}\n        />\n    );\n\n    //this is for number of rebeated days \n    const [GetRepeatedDays, ChangeRepeatedDays] = useState()\n    const RepeatedDays =(<RDContainer\n        ScheduleColor={props.ScheduleColor} // send the color list from the parent App file  \n        SubmitNumberOfRP={(value) => ChangeRepeatedDays(value)} //returning the value of repeated days \n        />\n    );\n    //Submit Buton \n    const Submit = (\n        <SubmitButton \n            isCallingCalendar={value=> props.CallingCalendar(value)} //return the close value to return to calender from the submit model \n            isTitle={getTitle} //the Title value \n            CheckTitlePH={value => ChangeTitlePH(value)} //this is to change the title place holder if there is no title \n            isDescription={getDescription} //the Description value\n            CheckDescriptionPH={value => ChangeDescriptionPH(value)} //this is to change the description placeholder if there is no placeholder\n            isURL={getURL} //the URL value\n            isStartingDate= {getFormDate}\n            // {TimeClicked ? (getFormDate+'T12:00:00') : (getFormDate+\"T\"+StartHours+\":\"+StartMinuts+\"00\")} //the value of the Starting data\n            isEndingData={getToDate } //the value of Ending data\n            isRepeatedDays={GetRepeatedDays} //Values of Repeated Days\n            isEvent={props.submitEventValues}\n        />\n    );\n    const ScheduleForm = (\n        <FadeIn>\n            <NoteContainer\n                position={\"relative\"}\n                width={\"520px\"}\n                margin={\"30px auto 20px auto\"}\n                padding={\"15px\"}\n                boxShadowValue={\"0 1px 5px rgb(138, 137, 137)\"}\n                borderRadiusValue={\"7px\"}\n                resizeValue={\"both\"}\n                backGroundColorValue={props.ScheduleColor.NotekBGC} //// send the color list from the parent App file \n                FontColorValue={props.ScheduleColor.NoteFC} //// send the color list from the parent App file \n                >\n            {CloseIcon}\n            {Title} \n            {Description}\n            {URL}\n            {Data}\n            {Time}\n            {RepeatedDays}\n            {Submit}\n            </NoteContainer> \n        </FadeIn>\n    );\n\n  return ScheduleForm;\n};\n\nexport default Schedule;\n","/Users/mero/projects/notesk/src/Routes/Calendar/EditForm/EvenForm.js",["176","177"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport NoteContainer from \"../../../UI/Modal\";\nimport FadeIn from \"react-fade-in\"; \nimport { CloseCircleOutlined } from \"@ant-design/icons\";\nimport EditButton from \"./EditButton\";\nimport DeleteButton from \"./DeleteButton\";\n\n// import { SubmissionContainer } from \"../ScheduleForm/Containers/SubmitButton1\" ;\nconst EachateContainer = styled.div`\n    width: 460px;\n    display: flex;\n    flex-direction: row;\n    justify-content: ${props => props.JustifyContentCalue};\n    margin: 4px;\n`\nconst DateContainer = styled.div`\n    width: 400px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n` \nconst TitleStyle = styled.span`\n  padding: 4px ;\n  fontSize: 1.2em;\n  marginRight: 4px;\n  color: ${props => props.Coloring};\n`\nconst ContentStyle = styled.span`\n  padding: 4px ;\n  fontSize: 1.2em;\n  marginLeft: 20px;\n  `\nconst EventForm = (props) => { \n\n  // The Event information \n  const Header=<EachateContainer>\n    <span style={{ \n      padding: \"1px\" ,paddingTop: \"1px\" , \n      fontSize: \"1.2em\", marginLeft: \"150px\",\n      color: `${props.ScheduleColor.IconC}`}}>\n        Event Info\n    </span> \n    <CloseCircleOutlined\n      onClick={()=> props.closedEventForm(true)} \n      style={{marginRight: \"4px\", marginLeft: \"180px\", marginBottom: \"15px\",\n          fontSize: \"26px\", color: props.ScheduleColor.IconC}} // send the color list from the parent App file \n    />\n  </EachateContainer>  \n  //TItle Area props.ScheduleColor.IconC\n  const isTitle =<EachateContainer JustifyContentCalue={\"\"}>\n    <TitleStyle Coloring={props.ScheduleColor.IconC}>Title : </TitleStyle> \n    <ContentStyle >{props.EventClickedInfo.title}</ContentStyle> \n  </EachateContainer>\n  //Description Area props.ScheduleColor.IconC\n  const isDescription =<EachateContainer JustifyContentCalue={ \"\"}>\n    <TitleStyle Coloring={props.ScheduleColor.IconC}>Description : </TitleStyle> \n    <ContentStyle >{props.EventClickedInfo.description}</ContentStyle> \n  </EachateContainer>\n  //Url Area props.ScheduleColor.IconC\n  const isUrl =<EachateContainer JustifyContentCalue={ \"\"}>\n    <TitleStyle Coloring={props.ScheduleColor.IconC}>Url : </TitleStyle> \n    <ContentStyle >{ !props.EventClickedInfo.url == \"\" ? props.EventClickedInfo.url : \"......\"  }</ContentStyle> \n  </EachateContainer>\n  //Start Area props.ScheduleColor.IconC\n  const isStart =<EachateContainer JustifyContentCalue={ \"\"}>\n    <TitleStyle Coloring={props.ScheduleColor.IconC}>Start : </TitleStyle> \n    {/* <ContentStyle >{props.EventClickedInfo.Start}</ContentStyle>  */}\n  </EachateContainer>\n  //End Area props.ScheduleColor.IconC\n  const isEnd =<EachateContainer JustifyContentCalue={ \"\"}>\n    <TitleStyle Coloring={props.ScheduleColor.IconC}>End : </TitleStyle> \n    {/* <ContentStyle >{props.EventClickedInfo.End}</ContentStyle>  */}\n  </EachateContainer>\n  \n  // The content Area\n  const Content = <DateContainer>\n    {isTitle}\n    {isDescription}\n    {isUrl}\n    {isStart}\n    {isEnd}\n  </DateContainer>\n  \n  //The edit button\n  const isEditButton=\n  <EachateContainer JustifyContentCalue={ \"\"}>\n    <EditButton ColorChange={props.ScheduleColor}/>\n    <DeleteButton\n      EventsInfoList={props.PassedAllEvent} //list of all the Events created \n      IDofClickedEvent={props.EventClickedInfo.Id} //the clicked event ID \n      ReturnNewEvents={(value) => props.ChangeAllEvents(value)} //Delete selected event from all event and close model\n      CloseModel={(value) => props.closedEventForm(value)} //to return true if clicked\n      ColorChange={props.ScheduleColor} //Color list\n      />  \n  </EachateContainer>\n\n  const EventInfo= <NoteContainer\n        position={\"relative\"}\n        width={\"480px\"}\n        margin={\"30px auto 20px auto\"}\n        padding={\"15px\"}\n        boxShadowValue={\"0 1px 5px rgb(138, 137, 137)\"}\n        borderRadiusValue={\"7px\"}\n        resizeValue={\"both\"}\n        backGroundColorValue={props.ScheduleColor.NotekBGC}\n        FontColorValue={props.ScheduleColor.NoteFC}\n      > \n        {Header}\n        {Content}\n        {isEditButton}\n      </NoteContainer>\n\n  return (\n    <FadeIn>\n      {EventInfo}\n    </FadeIn>\n  );\n};\n\nexport default EventForm;\n","/Users/mero/projects/notesk/src/Routes/Calendar/event-utils.js",[],"/Users/mero/projects/notesk/src/Routes/Calendar/EditForm/EditButton.js",["178"],"import React, { useState } from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport { LoginOutlined } from \"@ant-design/icons\";\nimport Button from \"../../../UI/Button\";  \n\nconst EditButton = (props) => {\n  const ButtonIconColor = {\n    color: props.ColorChange.IconC,\n    fontSize: \"20px\",\n    marginRight: \"9px\",\n    marginTop: \"4px\",\n  };   \n\n//   const SubmitEvent = () => { \n//     return(\n//     //   props.isEvent((oldarr) => [...oldarr, CreateEvent]),\n//     //   props.isCallingCalendar(false)\n//     )\n//   };\n\n  const SubmitButton = (\n    <FadeIn>\n      <Button\n        width={\"120px\"}\n        marginBottomValue={\"10px\"}\n        marginLeftValue={\"100px\"}\n        fontSizeValue={\"20px\"}\n        borderRadiusValue={\"15px\"}\n        IsCalledValue={\"hover\"}\n        BorderValue=\"solid\"\n        borderWidthValue=\"thin\"\n        paddingInputValue=\"2px\"\n        // onClick={SubmitEvent}\n        text={\"Edit\"}\n        icon={<LoginOutlined style={ButtonIconColor} />}\n      />\n    </FadeIn>\n  );\n\n\n  return SubmitButton;\n};\n\nexport default EditButton;\n","/Users/mero/projects/notesk/src/Routes/Calendar/EditForm/DeleteButton.js",["179"],"import React, { useState } from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport { DeleteFilled } from \"@ant-design/icons\";\nimport Button from \"../../../UI/Button\";  \n\nconst DeleteButton = (props) => {\n  const ButtonIconColor = {\n    color: props.ColorChange.IconC,\n    fontSize: \"20px\",\n    marginRight: \"9px\",\n    marginTop: \"4px\",\n  };   \n  \nconst DeleteButton = () => { \n    const id = props.IDofClickedEvent //the Event id\n    const Delete = props.EventsInfoList  //copy the Events list\n    props.ReturnNewEvents(Delete.filter(Event => Event.id !== id))\n    props.CloseModel(true)\n  };\n\n  const SubmitButton = (\n    <FadeIn>\n      <Button\n        width={\"120px\"}\n        marginBottomValue={\"10px\"}\n        marginLeftValue={\"10%\"}\n        fontSizeValue={\"20px\"}\n        borderRadiusValue={\"15px\"}\n        IsCalledValue={\"hover\"}\n        BorderValue=\"solid\"\n        borderWidthValue=\"thin\"\n        paddingInputValue=\"2px\"\n        onClick={DeleteButton}\n        text={\"Delete\"}\n        icon={<DeleteFilled style={ButtonIconColor} />}\n      />\n    </FadeIn>\n  );\n\n\n  return SubmitButton;\n};\n\nexport default DeleteButton;\n","/Users/mero/projects/notesk/src/Routes/Calendar/ScheduleForm/Containers/DropDownContainer.js",[],"/Users/mero/projects/notesk/src/Routes/Calendar/ScheduleForm/Containers/InputContainer.js",["180"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport UserInput from '../../../../UI/UserInput'\nimport TextArea from '../../../../UI/TextArea';\nimport FadeIn  from 'react-fade-in';\nimport { LinkOutlined} from \"@ant-design/icons\";\nimport { Title } from '@material-ui/icons';\nimport DescriptionIcon from '@material-ui/icons/Description';\nconst InfoContainer = styled.div`\n    width: 440px;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    margin: 4px;\n    margin-bottom: 10px;\n`\n\nconst TitleContainer = (props) => {\n    const IconColor = { \n        color : props.ScheduleColor.IconC, \n        fontSize:\"25px\", \n        marginRight:\"15px\", \n        marginTop:\"4px\" \n    } \n    const title = <InfoContainer>\n        <FadeIn><Title style={IconColor}/></FadeIn>\n        <FadeIn><UserInput \n        key={`title` + 1}\n        // This is to change the Value of Title based on the input coming from schedule\n        onchangeValue={(event)=>props.SubmitTitle(event.target.value)}\n        //This is the Props that is coming from Schedule From once I click on submit\n        PlaceholderValue={props.SubmitTitlePlaceHolder}\n        name=\"title\"\n        inputType={\"text\"} \n        widthValue={\"425px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={\"FOCUS\"} \n        borderRadiusValue= {\"7px\"}\n        backGroundColorValue={props.ScheduleColor.UserInputBGC}\n        FontColorValue={props.ScheduleColor.UserInputFC}\n        PlaceHolderColorValue={props.ScheduleColor.UserInputPHC}\n        borderColorValue={props.ScheduleColor.BorderColor}  \n        BorderValue={\"solid\"}\n        borderWidthValue=\"thin\"\n        marginRightValue={\"10px\"}\n        /></FadeIn>\n    </InfoContainer>\n\n    return(title)\n}\n\nconst DescriptionContainer = (props) => {\n    const IconColor = { \n        color : props.ScheduleColor.IconC, \n        fontSize:\"25px\", \n        marginRight:\"15px\", \n        marginTop:\"4px\" \n    }\n    const Description = <InfoContainer>\n        <FadeIn><DescriptionIcon style={IconColor}/></FadeIn>\n        <FadeIn><TextArea\n        key={`Description`+1} \n        // This is to change the Value of Title based on the input \n        onchangeValue={(event)=>props.SubmitDescription(event.target.value)}\n        //This is the Props that is coming from Schedule From once I click on submit\n        PlaceholderValue={props.SubmitDescriptionPlaceHolder}\n        rows={3}\n        name=\"Description\"\n        inputType={\"text\"} \n        widthValue={\"425px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={\"FOCUS\"} \n        borderRadiusValue= {\"7px\"}\n        backGroundColorValue={props.ScheduleColor.UserInputBGC}\n        FontColorValue={props.ScheduleColor.UserInputFC}\n        PlaceHolderColorValue={props.ScheduleColor.UserInputPHC}\n        borderColorValue={props.ScheduleColor.BorderColor}  \n        BorderValue={\"solid\"}\n        resizeValue={\"vertical\"}\n        borderWidthValue=\"thin\"\n        marginRightValue={\"10px\"}\n        /></FadeIn>\n    </InfoContainer>\n\n\n    return (Description)\n}\n\nconst URLContainer = (props) => {\n    const IconColor = { \n        color : props.ScheduleColor.IconC, \n        fontSize:\"25px\", \n        marginRight:\"15px\", \n        marginTop:\"4px\" \n    }\n    const URL = <InfoContainer>\n        <FadeIn><LinkOutlined style={IconColor}/></FadeIn>\n        <FadeIn><UserInput \n        key={`AttachedLinkDescription` }\n        // This is to change the Value of Title based on the input \n        onchangeValue={(event)=>props.URLOption(event.target.value)}\n        //This is the Props that is coming from Schedule From once I click on submit\n        PlaceholderValue={props.SubmitURLPH}\n        name=\"Url\"\n        inputType={\"text\"} \n        widthValue={\"425px\"}\n        paddingVale={\"4px\"}\n        outlineValue={\"none\"}\n        fontSizeValue={\"1.2em\"}\n        fontFamilyValue={\"inherit\"}\n        IsCalledValue={\"FOCUS\"} \n        borderRadiusValue= {\"7px\"}\n        backGroundColorValue={props.ScheduleColor.UserInputBGC}\n        FontColorValue={props.ScheduleColor.UserInputFC}\n        PlaceHolderColorValue={props.ScheduleColor.UserInputPHC}\n        borderColorValue={props.ScheduleColor.BorderColor}    \n        BorderValue={\"solid\"}\n        borderWidthValue=\"thin\"\n        marginRightValue={\"10px\"}\n        /></FadeIn>\n    </InfoContainer>\n\n\n    return (URL)\n}\n\nexport  {TitleContainer, DescriptionContainer, URLContainer};","/Users/mero/projects/notesk/src/Routes/Calendar/ScheduleForm/Containers/DaysContainer.js",[],"/Users/mero/projects/notesk/src/Routes/Calendar/ScheduleForm/Containers/SubmitButton1.js",["181","182","183","184"],"import React, { useState, useEffect } from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport { LoginOutlined } from \"@ant-design/icons\";\nimport Button from \"../../../../UI/Button\";\nimport { createEventId } from \"../../event-utils\";\nimport { Title } from \"@material-ui/icons\";\nlet todayStr = new Date().toISOString().replace(/T.*$/, '') // YYYY-MM-DD of today\n\nconst SubmitButton = (props) => {\n  const ButtonIconColor = {\n    fontSize: \"20px\",\n    marginRight: \"9px\",\n    marginTop: \"4px\",\n  };  \n  console.log(props.isRepeatedDays)\n  const CreateEvent = { \n      id: createEventId(),  \n      title:  props.isTitle ,\n      description:  props.isDescription ,\n      Url:  props.isURL ,\n      start:  props.isStartingDate ,\n      end: props.isEndingData, \n      daysOfWeek: props.isRepeatedDays,\n      display: \"list-item\",\n      textColor: \"red\",\n    };\n  const SubmitEvent = () => { \n    return(\n      props.isEvent((oldarr) => [...oldarr, CreateEvent]),\n      props.isCallingCalendar(false)\n    )\n  };\n\n  const SubmitButton = (\n    <FadeIn>\n      <Button\n        width={\"120px\"}\n        marginBottomValue={\"10px\"}\n        marginLeftValue={\"35%\"}\n        fontSizeValue={\"20px\"}\n        borderRadiusValue={\"15px\"}\n        IsCalledValue={\"hover\"}\n        BorderValue=\"solid\"\n        borderWidthValue=\"thin\"\n        paddingInputValue=\"2px\"\n        onClick={SubmitEvent}\n        text={\"Submit\"}\n        icon={<LoginOutlined style={ButtonIconColor} />}\n      />\n    </FadeIn>\n  );\n\n\n  return SubmitButton;\n};\n\nexport default SubmitButton;\n","/Users/mero/projects/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/RepeatedDaysSelected.js",["185"],"import React, { useState } from \"react\";\nimport FadeIn  from 'react-fade-in';\nimport Inputdata from '../../../../../UI/UserInput';\nimport { createEventId } from \"../../../event-utils\";\n\n\nconst RepeatDaySelected = (props) => {\n    const [NumberOfRepeatedDays,ChangeNumberOfRepeatedDays] = useState([]) \n    const [Days,changeDays] = useState({\n        Sunday: {id: \"0\", value: false},\n        Monday: {id: \"1\", value: false},\n        Tuesday: {id: \"1\", value: false},\n        Wednesday: {id: \"3\", value: false},\n        Thursday: {id: \"4\", value: false},\n        Friday: {id: \"5\", value: false},\n        Saturday: {id: \"6\", value: false}\n    })\n    const ChoosenDay = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'] \n    const handleRepeatedDays = (e) => {\n        const newDays = {...Days}\n        const onchangeValue = e.target.value\n        newDays[onchangeValue].value = !newDays[onchangeValue].value\n        changeDays(newDays)\n        //Returning the value of id of each day if it is clicked \n        ChangeNumberOfRepeatedDays(Object.values(Days).map(item => {\n            if (item.value) return item.id\n        }).filter(item => item))\n    }\n    \n    const RepeatedDayContainer = (DayValue,OnChangeInputValue) => {\n        return [<Inputdata \n            key={NumberOfRepeatedDays.id + createEventId()}\n            inputType={\"checkbox\"}\n            name=\"title\"\n            widthValue={\"20px\"}\n            paddingVale={\"2px\"}\n            outlineValue={\"none\"}\n            fontSizeValue={\"1.2em\"}\n            fontFamilyValue={\"inherit\"}\n            IsCalledValue={\"FOCUS\"} \n            borderRadiusValue= {\"7px\"}\n            backGroundColorValue={ props.RecievedColor.UserInputBGC}\n            FontColorValue={props.RecievedColor.UserInputFC}\n            PlaceHolderColorValue={props.RecievedColor.UserInputPHC}\n            borderColorValue={props.RecievedColor.BorderColor} \n            BorderValue={\"solid\"}\n            borderWidthValue={\"thin\"}\n            marginRightValue={\"5px\"}\n            marginTopValue={\"4px\"}\n            checked={Days[DayValue].value}\n            onchangeValue = {OnChangeInputValue}\n            InputValue = {DayValue}\n            ></Inputdata>,\n            <label key={NumberOfRepeatedDays.id} style={{marginRight: \"10px\"}}>{DayValue}</label>]\n        }\n        \n    const LineOne = [RepeatedDayContainer(ChoosenDay[0],handleRepeatedDays),\n                     RepeatedDayContainer(ChoosenDay[1],handleRepeatedDays),\n                     RepeatedDayContainer(ChoosenDay[2],handleRepeatedDays),\n                     RepeatedDayContainer(ChoosenDay[3],handleRepeatedDays)]\n    const LineTwo = [RepeatedDayContainer(ChoosenDay[4],handleRepeatedDays),\n                     RepeatedDayContainer(ChoosenDay[5],handleRepeatedDays),\n                     RepeatedDayContainer(ChoosenDay[6],handleRepeatedDays)]\n    \n    props.ValueOfRepeatedDays(NumberOfRepeatedDays);\n    return (  \n    <FadeIn>\n        <div style={{display: \"flex\",width: \"50px\", flexDirection: \"row\"}}>\n             {LineOne} \n        </div>\n        <div style={{\n            display: \"flex\",\n            width: \"50px\", \n            flexDirection: \"row\", \n            marginTop: \"10px\", \n            marginLeft: \"70px\", \n            marginBottom: \"8px\"}}\n        >\n             {LineTwo} \n        </div>\n    </FadeIn>\n       )\n}\n\nexport default RepeatDaySelected;","/Users/mero/projects/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/TimeSelected.js",[],"/Users/mero/projects/notesk/src/UI/Select.js",[],"/Users/mero/projects/notesk/src/Routes/Calendar/ScheduleForm/Containers/DataCollection/OptionsForm.js",["186"],"import React, { useState } from \"react\";\nimport { createEventId } from \"../../../event-utils\";\n\n//this is for the hour input \nconst HourValue = (props) => {\n\n    const Hours = ['01','02','03','04','05','06','07','08','09','10','11','12']\n    const DailyHours = (\n        [Hours.map((Hour, index) => \n            <option disabled={props.DisabledHour}  key={index.id + createEventId()} value={Hour}>{Hour}</option>)]\n        )\n    return(DailyHours)\n}\nconst MinutsValue = (props) => {\n\n    //this is for the hour input \n    const Minuts = ['05','10','15','20','25','30','35','40','45','50','55']\n    const DailyMinut =(\n        [Minuts.map((Minut, index) => \n            <option disabled={props.DisabledMinuts} key={index.id + createEventId()} value={Minut}>{Minut}</option>)]\n        )\n    return(DailyMinut)\n}\nconst TwelveHourSystemValue = (props) => {\n\n    //this for either AM or PM\n    const TwelveHourSystem = ['AM','PM']\n    const DayDivided =(\n        [TwelveHourSystem.map((DayTime, index) => \n            <option disabled={props.DisabledHourSystem} key={index.id + createEventId()} value={DayTime}>{DayTime}</option>)]\n        )\n    return(DayDivided)\n}\nconst NumberOfYearsValue = (props) => { \n    //this is for the years from this year \n    const NumberOfYears = [ '2020','2021', '2022', '2023', '2024','2025', '2026', \n                            '2027', '2028', '2029', '2030', '2031', '2032','2033', \n                            '2034','2035', '2036', '2037', '2038', '2039','2040']\n    const YearContainer = (\n        [NumberOfYears.map((year, index) => <option    key={index.id + createEventId()} value={year}>{year}</option>)]\n    )\n    \n    return(\n        YearContainer\n        )\n}\nconst NumberOfMonthsValue = (props) => { \n    //this is for the months in a year \n    const NumberOfMonths = ['01','02','03','04','05','06','07','08','09','10','11','12']\n    const MonthContainer = (\n        [NumberOfMonths.map((month, index) => <option  key={index.id + createEventId()}  value={month}>{month}</option>)]\n        )\n    return(MonthContainer)\n}\nconst NumberOfDaysValue = (props) => { \n    //this is for the days in a Month \n    const NumberOfDays = ['01','02','03','04','05','06','07','08','09','10',\n                        '11','12','13','14','15','16','17','18','19','20',\n                        '21','22','23','24','25','26','27','28','29','30','31']\n    const DayContainer = (\n        [NumberOfDays.map((days,index ) => <option  key={index.id + createEventId()} value={days}>{days}</option>)]\n        )\n    return(DayContainer)\n}\nconst ColorOptionsValue = () => {\n\n    //this is for the days in a Month \n    const ColorChoose = ['Choose Color','BlueViolet','Black','CornflowerBlue','DarkMagenta','DimGrey',\n                            'DodgerBlue','Fuchsia','MidnightBlue','Purple','Salmon']\n    const ColorContainer = (\n        [ColorChoose.map((Colors,index ) => <option  key={index.id + createEventId()} value={Colors}>{Colors}</option>)]\n        )\n    return(ColorContainer)\n}\n\nexport {HourValue, MinutsValue, TwelveHourSystemValue, \n        NumberOfYearsValue, NumberOfMonthsValue, NumberOfDaysValue, \n        ColorOptionsValue};\n",{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":5,"column":8,"nodeType":"193","messageId":"194","endLine":5,"endColumn":17},{"ruleId":"195","severity":1,"message":"196","line":36,"column":7,"nodeType":"197","messageId":"198","endLine":36,"endColumn":16},{"ruleId":"191","severity":1,"message":"199","line":43,"column":10,"nodeType":"193","messageId":"194","endLine":43,"endColumn":27},{"ruleId":"191","severity":1,"message":"200","line":7,"column":8,"nodeType":"193","messageId":"194","endLine":7,"endColumn":17},{"ruleId":"201","severity":1,"message":"202","line":78,"column":48,"nodeType":"203","messageId":"198","endLine":78,"endColumn":50},{"ruleId":"201","severity":1,"message":"202","line":79,"column":24,"nodeType":"203","messageId":"198","endLine":79,"endColumn":26},{"ruleId":"191","severity":1,"message":"204","line":2,"column":24,"nodeType":"193","messageId":"194","endLine":2,"endColumn":34},{"ruleId":"191","severity":1,"message":"205","line":79,"column":9,"nodeType":"193","messageId":"194","endLine":79,"endColumn":18},{"ruleId":"191","severity":1,"message":"206","line":10,"column":7,"nodeType":"193","messageId":"194","endLine":10,"endColumn":20},{"ruleId":"191","severity":1,"message":"207","line":52,"column":19,"nodeType":"193","messageId":"194","endLine":52,"endColumn":30},{"ruleId":"191","severity":1,"message":"208","line":77,"column":12,"nodeType":"193","messageId":"194","endLine":77,"endColumn":22},{"ruleId":"191","severity":1,"message":"209","line":78,"column":12,"nodeType":"193","messageId":"194","endLine":78,"endColumn":23},{"ruleId":"191","severity":1,"message":"210","line":79,"column":12,"nodeType":"193","messageId":"194","endLine":79,"endColumn":23},{"ruleId":"191","severity":1,"message":"211","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"201","severity":1,"message":"202","line":63,"column":50,"nodeType":"203","messageId":"198","endLine":63,"endColumn":52},{"ruleId":"191","severity":1,"message":"211","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"191","severity":1,"message":"211","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"191","severity":1,"message":"211","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"191","severity":1,"message":"211","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"191","severity":1,"message":"212","line":1,"column":27,"nodeType":"193","messageId":"194","endLine":1,"endColumn":36},{"ruleId":"191","severity":1,"message":"213","line":6,"column":10,"nodeType":"193","messageId":"194","endLine":6,"endColumn":15},{"ruleId":"191","severity":1,"message":"214","line":7,"column":5,"nodeType":"193","messageId":"194","endLine":7,"endColumn":13},{"ruleId":"215","severity":1,"message":"216","line":25,"column":65,"nodeType":"217","messageId":"218","endLine":25,"endColumn":67},{"ruleId":"191","severity":1,"message":"211","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"no-unused-vars","'EventForm' is defined but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'textColor'.","ObjectExpression","unexpected","'SelectedEndedData' is assigned a value but never used.","'AppButton' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'formatDate' is defined but never used.","'eventform' is assigned a value but never used.","'InfoContainer' is assigned a value but never used.","'ChangeURLPH' is assigned a value but never used.","'StartHours' is assigned a value but never used.","'StartMinuts' is assigned a value but never used.","'TimeClicked' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Title' is defined but never used.","'todayStr' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]